/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ApiError;
import io.swagger.client.model.AppDiscoverySession;
import io.swagger.client.model.AppDiscoverySessionResultSummary;
import io.swagger.client.model.AppDiscoverySessionsListResult;
import io.swagger.client.model.AppDiscoveryVmInfoListResult;
import io.swagger.client.model.AppInfoHostVmListInCsvFormat;
import io.swagger.client.model.AppInfoListResult;
import io.swagger.client.model.AppProfile;
import io.swagger.client.model.AppProfileListResult;
import io.swagger.client.model.AppProfileMemberAppsListInCsvFormat;
import io.swagger.client.model.NSGroupMetaInfoListResult;
import io.swagger.client.model.ReportAppResultsForVmsRequestParameters;
import io.swagger.client.model.SessionReclassificationParameter;
import io.swagger.client.model.StartAppDiscoverySessionParameters;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagementPlaneApiAppDiscoveryApi
 */
@Ignore
public class ManagementPlaneApiAppDiscoveryApiTest {

    private final ManagementPlaneApiAppDiscoveryApi api = new ManagementPlaneApiAppDiscoveryApi();

    /**
     * Adds a new app profile
     *
     * Adds a new app profile 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addAppProfileTest() throws ApiException {
        AppProfile body = null;
        AppProfile response = api.addAppProfile(body);

        // TODO: test validations
    }
    /**
     * Cancel and delete the application discovery session
     *
     * Cancel and delete the application discovery session 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAppDiscoverySessionTest() throws ApiException {
        String sessionId = null;
        api.deleteAppDiscoverySession(sessionId);

        // TODO: test validations
    }
    /**
     * Delete App Profile
     *
     * Deletes the specified AppProfile. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAppProfileTest() throws ApiException {
        String appProfileId = null;
        Boolean force = null;
        api.deleteAppProfile(appProfileId, force);

        // TODO: test validations
    }
    /**
     * Returns the status of the application discovery session and other details
     *
     * Returns the status of the application discovery session and other details 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppDiscoverySessionTest() throws ApiException {
        String sessionId = null;
        AppDiscoverySession response = api.getAppDiscoverySession(sessionId);

        // TODO: test validations
    }
    /**
     * application profiles in this application discovery session
     *
     * Returns the application profiles that was part of the application discovery session | while it was started. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppDiscoverySessionAppProfilesTest() throws ApiException {
        String sessionId = null;
        String cursor = null;
        String includedFields = null;
        Long pageSize = null;
        Boolean sortAscending = null;
        String sortBy = null;
        AppProfileListResult response = api.getAppDiscoverySessionAppProfiles(sessionId, cursor, includedFields, pageSize, sortAscending, sortBy);

        // TODO: test validations
    }
    /**
     * Returns the details of the installed apps for the app profile ID in that session
     *
     * Returns the details of the installed apps for the app profile ID in that session 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppDiscoverySessionInstalledAppsTest() throws ApiException {
        String sessionId = null;
        String appProfileId = null;
        String cursor = null;
        String includedFields = null;
        Long pageSize = null;
        Boolean sortAscending = null;
        String sortBy = null;
        String vmId = null;
        AppInfoListResult response = api.getAppDiscoverySessionInstalledApps(sessionId, appProfileId, cursor, includedFields, pageSize, sortAscending, sortBy, vmId);

        // TODO: test validations
    }
    /**
     * vms in the ns-group of the application discovery session
     *
     * Returns the vms in the ns-group of the application discovery session 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppDiscoverySessionNsGroupMembersTest() throws ApiException {
        String sessionId = null;
        String nsGroupId = null;
        String cursor = null;
        String includedFields = null;
        Long pageSize = null;
        Boolean sortAscending = null;
        String sortBy = null;
        AppDiscoveryVmInfoListResult response = api.getAppDiscoverySessionNsGroupMembers(sessionId, nsGroupId, cursor, includedFields, pageSize, sortAscending, sortBy);

        // TODO: test validations
    }
    /**
     * ns-groups in this application discovery session
     *
     * Returns the ns groups that was part of the application discovery session | while it was started 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppDiscoverySessionNsGroupsTest() throws ApiException {
        String sessionId = null;
        String cursor = null;
        String includedFields = null;
        Long pageSize = null;
        Boolean sortAscending = null;
        String sortBy = null;
        NSGroupMetaInfoListResult response = api.getAppDiscoverySessionNsGroups(sessionId, cursor, includedFields, pageSize, sortAscending, sortBy);

        // TODO: test validations
    }
    /**
     * Returns the summary of the application discovery session
     *
     * Returns the summary of the application discovery session 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppDiscoverySessionSummaryTest() throws ApiException {
        String sessionId = null;
        AppDiscoverySessionResultSummary response = api.getAppDiscoverySessionSummary(sessionId);

        // TODO: test validations
    }
    /**
     * Returns the list of the application discovery sessions available
     *
     * Returns the list of the application discovery sessions available 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppDiscoverySessionsTest() throws ApiException {
        String cursor = null;
        String groupId = null;
        String includedFields = null;
        Long pageSize = null;
        Boolean sortAscending = null;
        String sortBy = null;
        String status = null;
        AppDiscoverySessionsListResult response = api.getAppDiscoverySessions(cursor, groupId, includedFields, pageSize, sortAscending, sortBy, status);

        // TODO: test validations
    }
    /**
     * Returns detail of the app profile
     *
     * Returns detail of the app profile 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppProfileDetailsTest() throws ApiException {
        String appProfileId = null;
        AppProfile response = api.getAppProfileDetails(appProfileId);

        // TODO: test validations
    }
    /**
     * Returns list of app profile IDs created
     *
     * Returns list of app profile IDs created 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppProfilesTest() throws ApiException {
        String cursor = null;
        String includedFields = null;
        Long pageSize = null;
        Boolean sortAscending = null;
        String sortBy = null;
        AppProfileListResult response = api.getAppProfiles(cursor, includedFields, pageSize, sortAscending, sortBy);

        // TODO: test validations
    }
    /**
     * Export app discovery results in CSV format
     *
     * Returns app discovery results in CSV format, each row contains discovered app information and the id of the vms this app is discovered from for a given set of vms (or for all vms belong to this session when no vm id is passed in) 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppdiscoveryResultAppInfoAndHostVmInCsvFormatCsvTest() throws ApiException {
        ReportAppResultsForVmsRequestParameters body = null;
        String sessionId = null;
        AppInfoHostVmListInCsvFormat response = api.getAppdiscoveryResultAppInfoAndHostVmInCsvFormatCsv(body, sessionId);

        // TODO: test validations
    }
    /**
     * Export app profiles in CSV format for a given sessiom
     *
     * Returns app profiles information for a given session in CSV format Each row will contain detailed info of an app profile, and the id of apps which is member of this app profile in this session 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppdiscoverySessionAppProfileMemberAppsInCsvFormatCsvTest() throws ApiException {
        String sessionId = null;
        AppProfileMemberAppsListInCsvFormat response = api.getAppdiscoverySessionAppProfileMemberAppsInCsvFormatCsv(sessionId);

        // TODO: test validations
    }
    /**
     * Re-classify a completed application discovery session.
     *
     * Re-classify completed application discovery session against input  AppProfiles. If no AppProfiles are specified then we use the previous  AppProfiles of that session. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void reclassifyAppDiscoverySessionTest() throws ApiException {
        SessionReclassificationParameter body = null;
        String sessionId = null;
        AppDiscoverySessionResultSummary response = api.reclassifyAppDiscoverySession(body, sessionId);

        // TODO: test validations
    }
    /**
     * Starts the discovery of application discovery session
     *
     * Starts the discovery of application discovery session 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void startAppDiscoverySessionTest() throws ApiException {
        StartAppDiscoverySessionParameters body = null;
        AppDiscoverySession response = api.startAppDiscoverySession(body);

        // TODO: test validations
    }
    /**
     * Update AppProfile
     *
     * Update AppProfile 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateAppProfileTest() throws ApiException {
        AppProfile body = null;
        String appProfileId = null;
        AppProfile response = api.updateAppProfile(body, appProfileId);

        // TODO: test validations
    }
}
