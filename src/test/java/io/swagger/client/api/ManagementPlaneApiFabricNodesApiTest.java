/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ApiError;
import io.swagger.client.model.ConfigurationState;
import io.swagger.client.model.Node;
import io.swagger.client.model.NodeCapabilitiesResult;
import io.swagger.client.model.NodeInterfaceProperties;
import io.swagger.client.model.NodeInterfacePropertiesListResult;
import io.swagger.client.model.NodeInterfaceStatisticsProperties;
import io.swagger.client.model.NodeListResult;
import io.swagger.client.model.NodeStatus;
import io.swagger.client.model.NodeStatusListResult;
import io.swagger.client.model.SoftwareModuleResult;
import io.swagger.client.model.SupportedHostOSListResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagementPlaneApiFabricNodesApi
 */
@Ignore
public class ManagementPlaneApiFabricNodesApiTest {

    private final ManagementPlaneApiFabricNodesApi api = new ManagementPlaneApiFabricNodesApi();

    /**
     * Register and Install NSX Components on a Node
     *
     * Creates a host node (hypervisor) or edge node (router) in the transport network.  When you run this command for a host, NSX Manager attempts to install the NSX kernel modules, which are packaged as VIB, RPM, or DEB files. For the installation to succeed, you must provide the host login credentials and the host thumbprint.  To get the ESXi host thumbprint, SSH to the host and run the &lt;b&gt;openssl x509 -in /etc/vmware/ssl/rui.crt -fingerprint -sha256 -noout&lt;/b&gt; command.  To generate host key thumbprint using SHA-256 algorithm please follow the steps below.  Log into the host, making sure that the connection is not vulnerable to a man in the middle attack. Check whether a public key already exists. Host public key is generally located at &#x27;/etc/ssh/ssh_host_rsa_key.pub&#x27;. If the key is not present then generate a new key by running the following command and follow the instructions.  &lt;b&gt;ssh-keygen -t rsa&lt;/b&gt;  Now generate a SHA256 hash of the key using the following command. Please make sure to pass the appropriate file name if the public key is stored with a different file name other than the default &#x27;id_rsa.pub&#x27;.  &lt;b&gt;awk &#x27;{print $2}&#x27; id_rsa.pub | base64 -d | sha256sum -b | sed &#x27;s/ .*$//&#x27; | xxd -r -p | base64&lt;/b&gt; This api is deprecated as part of FN+TN unification. Please use Transport Node API POST /transport-nodes to install NSX components on a node. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addNodeTest() throws ApiException {
        Node body = null;
        Node response = api.addNode(body);

        // TODO: test validations
    }
    /**
     * Delete a Node
     *
     * Removes a specified fabric node (host or edge). A fabric node may only be deleted when it is no longer referenced by a Transport Node. If unprepare_host option is set to false, the host will be deleted without uninstalling the NSX components from the host. This api is deprecated, use Transport Node API DELETE /transport-nodes/&amp;lt;transport-node-id&amp;gt; to delete FN. DELETE /transport-nodes/&lt;transport-node-id&gt; to delete FN. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteNodeTest() throws ApiException {
        String nodeId = null;
        Boolean unprepareHost = null;
        api.deleteNode(nodeId, unprepareHost);

        // TODO: test validations
    }
    /**
     * Get the module details of a Fabric Node This api is deprecated, use Transport Node API GET /transport-nodes/&amp;lt;transportnode-id&amp;gt;/modules to get fabric node modules. 
     *
     * Get the module details of a Fabric Node This api is deprecated, use Transport Node API GET /transport-nodes/&amp;lt;transportnode-id&amp;gt;/modules to get fabric node modules. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFabricNodeModulesTest() throws ApiException {
        String nodeId = null;
        SoftwareModuleResult response = api.getFabricNodeModules(nodeId);

        // TODO: test validations
    }
    /**
     * Get the Realized State of a Fabric Node.
     *
     * For edge nodes, returns the current install state when deployment is in progress, NODE_READY when deployment is complete and the failure state when deployment has failed. This api is deprecated. Please use /transport-nodes/&amp;lt;transportnode-id&amp;gt;/state to get realized state of a Fabric Node. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFabricNodeStateTest() throws ApiException {
        String nodeId = null;
        ConfigurationState response = api.getFabricNodeState(nodeId);

        // TODO: test validations
    }
    /**
     * Return list of supported host OS types
     *
     * Returns names of all supported host OS.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSupportedHostOSTypesTest() throws ApiException {
        SupportedHostOSListResult response = api.getSupportedHostOSTypes();

        // TODO: test validations
    }
    /**
     * List the specified node&#x27;s Network Interfaces
     *
     * Returns the number of interfaces on the node and detailed information about each interface. Interface information includes MTU, broadcast and host IP addresses, link and admin status, MAC address, network mask, and the IP configuration method (static or DHCP). This api is deprecated. Please use Transport Node API GET /transport-nodes/&lt;transport-node-id&gt;/network/interfaces to list node network interfaces for the corresponding TN. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listFabricNodeInterfacesTest() throws ApiException {
        String nodeId = null;
        String source = null;
        NodeInterfacePropertiesListResult response = api.listFabricNodeInterfaces(nodeId, source);

        // TODO: test validations
    }
    /**
     * Return the List of Capabilities of a Single Node
     *
     * Returns information about capabilities of a single fabric host node. Edge nodes do not have capabilities. This api is deprecated, use GET /transport-nodes/&amp;lt;transportnode-id&amp;gt;/capabilities if FN is converted to TN.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNodeCapabilitiesTest() throws ApiException {
        String nodeId = null;
        NodeCapabilitiesResult response = api.listNodeCapabilities(nodeId);

        // TODO: test validations
    }
    /**
     * Return the List of Nodes
     *
     * Returns information about all fabric nodes (hosts and edges). This api is deprecated as part of FN+TN unification. Please use Transport Node API GET /transport-nodes to list all fabric nodes. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNodesTest() throws ApiException {
        String cursor = null;
        String discoveredNodeId = null;
        String displayName = null;
        String externalId = null;
        String hardwareId = null;
        String hypervisorOsType = null;
        String includedFields = null;
        String ipAddress = null;
        Long pageSize = null;
        String resourceType = null;
        Boolean sortAscending = null;
        String sortBy = null;
        NodeListResult response = api.listNodes(cursor, discoveredNodeId, displayName, externalId, hardwareId, hypervisorOsType, includedFields, ipAddress, pageSize, resourceType, sortAscending, sortBy);

        // TODO: test validations
    }
    /**
     * Perform a service deployment upgrade on a host node
     *
     * Perform a service deployment upgrade on a host node
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void performHostNodeUpgradeActionUpgradeInfraTest() throws ApiException {
        String nodeId = null;
        Boolean disableVmMigration = null;
        Node response = api.performHostNodeUpgradeActionUpgradeInfra(nodeId, disableVmMigration);

        // TODO: test validations
    }
    /**
     * Perform an Action on Fabric Node
     *
     * The supported fabric node actions are enter_maintenance_mode, exit_maintenance_mode for EdgeNode. This API is deprecated, please call TransportNode maintenance mode API to update maintenance mode, refer to \&quot;Update transport node maintenance mode\&quot;. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void performNodeActionTest() throws ApiException {
        String nodeId = null;
        String action = null;
        Boolean evacuatePoweredOffVms = null;
        String vsanMode = null;
        Node response = api.performNodeAction(nodeId, action, evacuatePoweredOffVms, vsanMode);

        // TODO: test validations
    }
    /**
     * Read the node&#x27;s Network Interface
     *
     * Returns detailed information about the specified interface. Interface information includes MTU, broadcast and host IP addresses, link and admin status, MAC address, network  mask, and the IP configuration method (static or DHCP). This api is deprecated as part of FN+TN unification. Please use Transport Node API GET /transport-nodes/&lt;transport-node-id&gt;/network/interfaces/&lt;interface-id&gt; to get interface details of a node. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readFabricNodeInterfaceTest() throws ApiException {
        String nodeId = null;
        String interfaceId = null;
        String source = null;
        NodeInterfaceProperties response = api.readFabricNodeInterface(nodeId, interfaceId, source);

        // TODO: test validations
    }
    /**
     * Read the NSX Manager&#x27;s Network Interface Statistics
     *
     * On the specified interface, returns the number of received (rx), transmitted (tx), and dropped packets; the number of bytes and errors received and transmitted on the interface; and the number of detected collisions. This api is deprecated as part of FN+TN unification. Please use /transport-nodes/&lt;transportnode-id&gt;/network/interfaces/&lt;interface-id&gt;/stats to read network interface statistics with contraint FN is converted to TN. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readFabricNodeInterfaceStatisticsTest() throws ApiException {
        String nodeId = null;
        String interfaceId = null;
        String source = null;
        NodeInterfaceStatisticsProperties response = api.readFabricNodeInterfaceStatistics(nodeId, interfaceId, source);

        // TODO: test validations
    }
    /**
     * Return Node Information
     *
     * Returns information about a specific fabric node (host or edge). This api is deprecated, use Transport Node API GET /transport-nodes/&amp;lt;transport-node-id&amp;gt; to get fabric node information. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readNodeTest() throws ApiException {
        String nodeId = null;
        Node response = api.readNode(nodeId);

        // TODO: test validations
    }
    /**
     * Return Runtime Status Information for a Node
     *
     * Returns connectivity, heartbeat, and version information about a fabric node (host or edge). Note that the LCP connectivity status remains down until after the fabric node has been added as a transpot node and the NSX host switch has been successfully installed. See POST /api/v1/transport-nodes. This api is deprecated, use GET /api/v1/transport-nodes/&amp;lt;node-id&amp;gt;/status to get status information of a node with constraint FN is converted to TN. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readNodeStatusTest() throws ApiException {
        String nodeId = null;
        String source = null;
        NodeStatus response = api.readNodeStatus(nodeId, source);

        // TODO: test validations
    }
    /**
     * Return Runtime Status Information for given Nodes
     *
     * Returns connectivity, heartbeat, and version information about all fabric nodes (host or edge). This api is deprecated as part of FN+TN unification. Please use Transport Node Status API /transport-nodes/&amp;lt;node-id&amp;gt;/status to get status information of a node and to get all transport nodes ids use GET /transport-nodes. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readNodesStatusTest() throws ApiException {
        String nodeIds = null;
        NodeStatusListResult response = api.readNodesStatus(nodeIds);

        // TODO: test validations
    }
    /**
     * Restart the inventory sync for the node if it is paused currently.
     *
     * Restart the inventory sync for the node if it is currently internally paused. After this action the next inventory sync coming from the node is processed. This api is deprecated as part of FN+TN unification. Please use Transport Node API POST /transport-nodes/&amp;lt;transport-node-id&amp;gt;?action&#x3D;restart_inventory_sync to restart inventory sync of node. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void restartInventorySyncRestartInventorySyncTest() throws ApiException {
        String nodeId = null;
        api.restartInventorySyncRestartInventorySync(nodeId);

        // TODO: test validations
    }
    /**
     * Update a Node
     *
     * Modifies attributes of a fabric node (host or edge). This api is deprecated as part of FN+TN unification. Please use Transport Node API PUT /transport-nodes/&amp;lt;transport-node-id&amp;gt; to update fabric node details. API PUT /transport-nodes/&lt;transport-node-id&gt; to update fabric node details. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateNodeTest() throws ApiException {
        Node body = null;
        String nodeId = null;
        Node response = api.updateNode(body, nodeId);

        // TODO: test validations
    }
}
