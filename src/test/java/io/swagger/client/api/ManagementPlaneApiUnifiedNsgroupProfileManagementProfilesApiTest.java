/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ApiError;
import io.swagger.client.model.IpfixCollectorUpmProfile;
import io.swagger.client.model.IpfixCollectorUpmProfileListResult;
import io.swagger.client.model.IpfixUpmProfile;
import io.swagger.client.model.IpfixUpmProfileListResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagementPlaneApiUnifiedNsgroupProfileManagementProfilesApi
 */
@Ignore
public class ManagementPlaneApiUnifiedNsgroupProfileManagementProfilesApiTest {

    private final ManagementPlaneApiUnifiedNsgroupProfileManagementProfilesApi api = new ManagementPlaneApiUnifiedNsgroupProfileManagementProfilesApi();

    /**
     * Create a new IPFIX collector profile
     *
     * Create a new IPFIX collector profile with essential properties.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createIpfixCollectorUpmProfileTest() throws ApiException {
        IpfixCollectorUpmProfile body = null;
        IpfixCollectorUpmProfile response = api.createIpfixCollectorUpmProfile(body);

        // TODO: test validations
    }
    /**
     * Create a new IPFIX profile
     *
     * Create a new IPFIX profile with essential properties.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createIpfixUpmProfileTest() throws ApiException {
        IpfixUpmProfile body = null;
        IpfixUpmProfile response = api.createIpfixUpmProfile(body);

        // TODO: test validations
    }
    /**
     * Delete an existing IPFIX collector profile
     *
     * Delete an existing IPFIX collector profile by ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteIpfixCollectorUpmProfileTest() throws ApiException {
        String ipfixCollectorProfileId = null;
        api.deleteIpfixCollectorUpmProfile(ipfixCollectorProfileId);

        // TODO: test validations
    }
    /**
     * Delete an existing IPFIX profile
     *
     * Delete an existing IPFIX profile by ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteIpfixUpmProfileTest() throws ApiException {
        String ipfixProfileId = null;
        api.deleteIpfixUpmProfile(ipfixProfileId);

        // TODO: test validations
    }
    /**
     * Get an existing IPFIX collector profile
     *
     * Get an existing IPFIX collector profile by profile ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIpfixCollectorUpmProfileTest() throws ApiException {
        String ipfixCollectorProfileId = null;
        IpfixCollectorUpmProfile response = api.getIpfixCollectorUpmProfile(ipfixCollectorProfileId);

        // TODO: test validations
    }
    /**
     * Get an existing IPFIX profile
     *
     * Get an existing IPFIX profile by profile ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIpfixUpmProfileTest() throws ApiException {
        String ipfixProfileId = null;
        IpfixUpmProfile response = api.getIpfixUpmProfile(ipfixProfileId);

        // TODO: test validations
    }
    /**
     * List IPFIX Collector Profies
     *
     * Query IPFIX collector profiles with list parameters. List result can be filtered by profile type defined by IpfixCollectorUpmProfileType. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listIpfixCollectorUpmProfilesTest() throws ApiException {
        String cursor = null;
        String includedFields = null;
        Long pageSize = null;
        String profileTypes = null;
        Boolean sortAscending = null;
        String sortBy = null;
        IpfixCollectorUpmProfileListResult response = api.listIpfixCollectorUpmProfiles(cursor, includedFields, pageSize, profileTypes, sortAscending, sortBy);

        // TODO: test validations
    }
    /**
     * List IPFIX Profies
     *
     * Query IPFIX profiles with list parameters. List result can be filtered by profile type defined by IpfixUpmProfileType. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listIpfixUpmProfilesTest() throws ApiException {
        String appliedToEntityId = null;
        String appliedToEntityType = null;
        String cursor = null;
        String includedFields = null;
        Long pageSize = null;
        String profileTypes = null;
        Boolean sortAscending = null;
        String sortBy = null;
        IpfixUpmProfileListResult response = api.listIpfixUpmProfiles(appliedToEntityId, appliedToEntityType, cursor, includedFields, pageSize, profileTypes, sortAscending, sortBy);

        // TODO: test validations
    }
    /**
     * Update an existing IPFIX collector profile
     *
     * Update an existing IPFIX collector profile with profile ID and modified properties. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateIpfixCollectorUpmProfileTest() throws ApiException {
        IpfixCollectorUpmProfile body = null;
        String ipfixCollectorProfileId = null;
        IpfixCollectorUpmProfile response = api.updateIpfixCollectorUpmProfile(body, ipfixCollectorProfileId);

        // TODO: test validations
    }
    /**
     * Update an existing IPFIX profile
     *
     * Update an existing IPFIX profile with profile ID and modified properties. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateIpfixUpmProfileTest() throws ApiException {
        IpfixUpmProfile body = null;
        String ipfixProfileId = null;
        IpfixUpmProfile response = api.updateIpfixUpmProfile(body, ipfixProfileId);

        // TODO: test validations
    }
}
