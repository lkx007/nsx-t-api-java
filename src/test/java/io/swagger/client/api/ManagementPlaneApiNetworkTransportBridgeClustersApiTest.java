/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ApiError;
import io.swagger.client.model.BridgeCluster;
import io.swagger.client.model.BridgeClusterListResult;
import io.swagger.client.model.BridgeClusterStatus;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagementPlaneApiNetworkTransportBridgeClustersApi
 */
@Ignore
public class ManagementPlaneApiNetworkTransportBridgeClustersApiTest {

    private final ManagementPlaneApiNetworkTransportBridgeClustersApi api = new ManagementPlaneApiNetworkTransportBridgeClustersApi();

    /**
     * Create a Bridge Cluster
     *
     * Creates a bridge cluster. It is collection of transport nodes that will do the bridging for overlay network to vlan networks. Bridge cluster may have one or more transport nodes 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createBridgeClusterTest() throws ApiException {
        BridgeCluster body = null;
        BridgeCluster response = api.createBridgeCluster(body);

        // TODO: test validations
    }
    /**
     * Delete a Bridge Cluster
     *
     * Removes the specified Bridge Cluster.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteBridgeClusterTest() throws ApiException {
        String bridgeclusterId = null;
        api.deleteBridgeCluster(bridgeclusterId);

        // TODO: test validations
    }
    /**
     * Get Information about a bridge cluster
     *
     * Returns information about a specified bridge cluster.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBridgeClusterTest() throws ApiException {
        String bridgeclusterId = null;
        BridgeCluster response = api.getBridgeCluster(bridgeclusterId);

        // TODO: test validations
    }
    /**
     * Returns status of a specified Bridge Cluster
     *
     * Get the status for the Bridge Cluster of the given cluster id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBridgeClusterStatusTest() throws ApiException {
        String clusterId = null;
        String source = null;
        BridgeClusterStatus response = api.getBridgeClusterStatus(clusterId, source);

        // TODO: test validations
    }
    /**
     * List All Bridge Clusters
     *
     * Returns information about all configured bridge clusters 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listBridgeClustersTest() throws ApiException {
        String cursor = null;
        String includedFields = null;
        Long pageSize = null;
        Boolean sortAscending = null;
        String sortBy = null;
        BridgeClusterListResult response = api.listBridgeClusters(cursor, includedFields, pageSize, sortAscending, sortBy);

        // TODO: test validations
    }
    /**
     * Update a Bridge Cluster
     *
     * Modifies a existing bridge cluster. One of more transport nodes can be added or removed from the bridge cluster using this API. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateBridgeClusterTest() throws ApiException {
        BridgeCluster body = null;
        String bridgeclusterId = null;
        BridgeCluster response = api.updateBridgeCluster(body, bridgeclusterId);

        // TODO: test validations
    }
}
