/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ApiError;
import io.swagger.client.model.TransportNodeCollection;
import io.swagger.client.model.TransportNodeCollectionListResult;
import io.swagger.client.model.TransportNodeCollectionState;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagementPlaneApiNetworkTransportTransportNodeCollectionsApi
 */
@Ignore
public class ManagementPlaneApiNetworkTransportTransportNodeCollectionsApiTest {

    private final ManagementPlaneApiNetworkTransportTransportNodeCollectionsApi api = new ManagementPlaneApiNetworkTransportTransportNodeCollectionsApi();

    /**
     * Create transport node collection by attaching Transport Node Profile to cluster.
     *
     * When transport node collection is created the hosts which are part of compute collection will be prepared automatically i.e. NSX Manager attempts to install the NSX components on hosts. Transport nodes for these hosts are created using the configuration specified in transport node profile. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createTransportNodeCollectionTest() throws ApiException {
        TransportNodeCollection body = null;
        TransportNodeCollection response = api.createTransportNodeCollection(body);

        // TODO: test validations
    }
    /**
     * Detach transport node profile from compute collection.
     *
     * By deleting transport node collection, we are detaching the transport node profile(TNP) from the compute collection. It has no effect on existing transport nodes. However, new hosts added to the compute collection will no longer be automatically converted to NSX transport node. Detaching TNP from compute collection does not delete TNP. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteTransportNodeCollectionTest() throws ApiException {
        String transportNodeCollectionId = null;
        api.deleteTransportNodeCollection(transportNodeCollectionId);

        // TODO: test validations
    }
    /**
     * Get Transport Node collection by id
     *
     * Returns transport node collection by id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTransportNodeCollectionTest() throws ApiException {
        String transportNodeCollectionId = null;
        TransportNodeCollection response = api.getTransportNodeCollection(transportNodeCollectionId);

        // TODO: test validations
    }
    /**
     * Get Transport Node collection application state
     *
     * Returns the state of transport node collection based on the states of transport nodes of the hosts which are part of compute collection. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTransportNodeCollectionStateTest() throws ApiException {
        String transportNodeCollectionId = null;
        TransportNodeCollectionState response = api.getTransportNodeCollectionState(transportNodeCollectionId);

        // TODO: test validations
    }
    /**
     * List Transport Node collections
     *
     * Returns all Transport Node collections
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listTransportNodeCollectionsTest() throws ApiException {
        TransportNodeCollectionListResult response = api.listTransportNodeCollections();

        // TODO: test validations
    }
    /**
     * Update Transport Node collection
     *
     * Attach different transport node profile to compute collection by updating transport node collection. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateTransportNodeCollectionTest() throws ApiException {
        TransportNodeCollection body = null;
        String transportNodeCollectionId = null;
        TransportNodeCollection response = api.updateTransportNodeCollection(body, transportNodeCollectionId);

        // TODO: test validations
    }
}
