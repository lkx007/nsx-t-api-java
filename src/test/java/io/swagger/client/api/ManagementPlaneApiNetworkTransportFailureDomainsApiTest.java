/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ApiError;
import io.swagger.client.model.FailureDomain;
import io.swagger.client.model.FailureDomainListResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagementPlaneApiNetworkTransportFailureDomainsApi
 */
@Ignore
public class ManagementPlaneApiNetworkTransportFailureDomainsApiTest {

    private final ManagementPlaneApiNetworkTransportFailureDomainsApi api = new ManagementPlaneApiNetworkTransportFailureDomainsApi();

    /**
     * Create Failure Domain
     *
     * Creates a new failure domain. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createFailureDomainTest() throws ApiException {
        FailureDomain body = null;
        FailureDomain response = api.createFailureDomain(body);

        // TODO: test validations
    }
    /**
     * Delete Failure Domain
     *
     * Deletes an existing failure domain. You can not delete system generated default failure domain. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteFailureDomainTest() throws ApiException {
        String failureDomainId = null;
        api.deleteFailureDomain(failureDomainId);

        // TODO: test validations
    }
    /**
     * Get a Failure Domain
     *
     * Returns information about a single failure domain.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFailureDomainTest() throws ApiException {
        String failureDomainId = null;
        FailureDomain response = api.getFailureDomain(failureDomainId);

        // TODO: test validations
    }
    /**
     * List Failure Domains
     *
     * Returns information about configured failure domains.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listFailureDomainsTest() throws ApiException {
        FailureDomainListResult response = api.listFailureDomains();

        // TODO: test validations
    }
    /**
     * Update Failure Domain
     *
     * Updates an existing failure domain. Modifiable parameters are display_name, preferred_active_edge_services flag. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateFailureDomainTest() throws ApiException {
        FailureDomain body = null;
        String failureDomainId = null;
        FailureDomain response = api.updateFailureDomain(body, failureDomainId);

        // TODO: test validations
    }
}
