/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ApiError;
import io.swagger.client.model.EULAAcceptance;
import io.swagger.client.model.EULAContent;
import io.swagger.client.model.FeatureUsageList;
import io.swagger.client.model.FeatureUsageListInCsvFormat;
import io.swagger.client.model.License;
import io.swagger.client.model.LicensesListResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagementPlaneApiLicensingApi
 */
@Ignore
public class ManagementPlaneApiLicensingApiTest {

    private final ManagementPlaneApiLicensingApi api = new ManagementPlaneApiLicensingApi();

    /**
     * Accept end user license agreement 
     *
     * Accept end user license agreement 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void acceptEULATest() throws ApiException {
        api.acceptEULA();

        // TODO: test validations
    }
    /**
     * Add a new license key
     *
     * This will add a license key to the system. The API supports adding only one license key for each license edition type - Standard, Advanced or Enterprise. If a new license key is tried to add for an edition for which the license key already exists, then this API will return an error. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createLicenseTest() throws ApiException {
        License body = null;
        License response = api.createLicense(body);

        // TODO: test validations
    }
    /**
     * Deprecated. Remove a license identified by the license-key
     *
     * Deprecated. Use POST /licenses?action&#x3D;delete API instead. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteLicenseTest() throws ApiException {
        String licenseKey = null;
        api.deleteLicense(licenseKey);

        // TODO: test validations
    }
    /**
     * Remove a license
     *
     * This will delete the license key identified in the request body by \&quot;license_key\&quot; and its properties from the system. Attempting to delete the last license key will result in an error. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteLicenseKeyDeleteTest() throws ApiException {
        License body = null;
        api.deleteLicenseKeyDelete(body);

        // TODO: test validations
    }
    /**
     * Return the acceptance status of end user license agreement 
     *
     * Return the acceptance status of end user license agreement 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEULAAcceptanceTest() throws ApiException {
        EULAAcceptance response = api.getEULAAcceptance();

        // TODO: test validations
    }
    /**
     * Return the content of end user license agreement 
     *
     * Return the content of end user license agreement in the specified format. By default, it&#x27;s pure string without line break 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEULAContentTest() throws ApiException {
        String cursor = null;
        String includedFields = null;
        Long pageSize = null;
        Boolean sortAscending = null;
        String sortBy = null;
        String valueFormat = null;
        EULAContent response = api.getEULAContent(cursor, includedFields, pageSize, sortAscending, sortBy, valueFormat);

        // TODO: test validations
    }
    /**
     * Deprecated. Return the Enterprise License 
     *
     * Deprecated. Use the GET /licenses API instead. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLicenseTest() throws ApiException {
        License response = api.getLicense();

        // TODO: test validations
    }
    /**
     * Deprecated. Get license properties for license identified by the license-key
     *
     * Deprecated. Use GET /licenses API instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLicenseByKeyTest() throws ApiException {
        String licenseKey = null;
        License response = api.getLicenseByKey(licenseKey);

        // TODO: test validations
    }
    /**
     * Get usage report of all registered modules
     *
     * Returns usage report of all registered modules 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLicenseUsageReportTest() throws ApiException {
        FeatureUsageList response = api.getLicenseUsageReport();

        // TODO: test validations
    }
    /**
     * Get usage report of all registred modules in CSV format
     *
     * Returns usage report of all registered modules in CSV format 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLicenseUsageReportInCsvFormatCsvTest() throws ApiException {
        FeatureUsageListInCsvFormat response = api.getLicenseUsageReportInCsvFormatCsv();

        // TODO: test validations
    }
    /**
     * Get all licenses
     *
     * Returns all licenses. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLicensesTest() throws ApiException {
        LicensesListResult response = api.getLicenses();

        // TODO: test validations
    }
    /**
     * Deprecated. Assign an Updated Enterprise License Key 
     *
     * Deprecated. Use the POST /licenses API instead 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateLicenseTest() throws ApiException {
        License body = null;
        License response = api.updateLicense(body);

        // TODO: test validations
    }
}
