/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ApiError;
import io.swagger.client.model.Notification;
import io.swagger.client.model.NotificationWatcher;
import io.swagger.client.model.NotificationWatcherListResult;
import io.swagger.client.model.NotificationsList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagementPlaneApiNsxNotificationsApi
 */
@Ignore
public class ManagementPlaneApiNsxNotificationsApiTest {

    private final ManagementPlaneApiNsxNotificationsApi api = new ManagementPlaneApiNsxNotificationsApi();

    /**
     * Add a new notification watcher.
     *
     * Add a new notification watcher.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addNotificationWatcherTest() throws ApiException {
        NotificationWatcher body = null;
        NotificationWatcher response = api.addNotificationWatcher(body);

        // TODO: test validations
    }
    /**
     * Add uri filters for the specified watcher ID.
     *
     * Add uri filters for the specified watcher ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addUriFiltersAddUriFiltersTest() throws ApiException {
        Notification body = null;
        String watcherId = null;
        NotificationsList response = api.addUriFiltersAddUriFilters(body, watcherId);

        // TODO: test validations
    }
    /**
     * Delete an existing Notification-Watcher.
     *
     * Delete notification watcher. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteNotificationWatcherTest() throws ApiException {
        String watcherId = null;
        api.deleteNotificationWatcher(watcherId);

        // TODO: test validations
    }
    /**
     * Delete uri filters for the specified watcher ID.
     *
     * Delete uri filters for the specified watcher ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUriFiltersDeleteUriFiltersTest() throws ApiException {
        Notification body = null;
        String watcherId = null;
        NotificationsList response = api.deleteUriFiltersDeleteUriFilters(body, watcherId);

        // TODO: test validations
    }
    /**
     * Returns notification watcher by watcher id.
     *
     * Returns notification watcher by watcher id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNotificationWatcherTest() throws ApiException {
        String watcherId = null;
        NotificationWatcher response = api.getNotificationWatcher(watcherId);

        // TODO: test validations
    }
    /**
     * Get notifications for the specified watcher ID.
     *
     * Get notifications for the specified watcher ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNotificationsTest() throws ApiException {
        String watcherId = null;
        NotificationsList response = api.getNotifications(watcherId);

        // TODO: test validations
    }
    /**
     * Returns a list of registered notification watchers.
     *
     * Returns a list of registered notification watchers.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNotificationWatchersTest() throws ApiException {
        NotificationWatcherListResult response = api.listNotificationWatchers();

        // TODO: test validations
    }
    /**
     * Update notification watcher.
     *
     * Update notification watcher.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateNotificationWatcherTest() throws ApiException {
        NotificationWatcher body = null;
        String watcherId = null;
        NotificationWatcher response = api.updateNotificationWatcher(body, watcherId);

        // TODO: test validations
    }
    /**
     * Update notifications for the specified watcher ID.
     *
     * Update notifications for the specified watcher ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateNotificationsTest() throws ApiException {
        NotificationsList body = null;
        String watcherId = null;
        NotificationsList response = api.updateNotifications(body, watcherId);

        // TODO: test validations
    }
}
