/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ApiError;
import io.swagger.client.model.MetadataProxy;
import io.swagger.client.model.MetadataProxyListResult;
import io.swagger.client.model.MetadataProxyStatistics;
import io.swagger.client.model.MetadataProxyStatus;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagementPlaneApiServicesMetadataProxyApi
 */
@Ignore
public class ManagementPlaneApiServicesMetadataProxyApiTest {

    private final ManagementPlaneApiServicesMetadataProxyApi api = new ManagementPlaneApiServicesMetadataProxyApi();

    /**
     * Create a metadata proxy
     *
     * Create a metadata proxy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMetadataProxyTest() throws ApiException {
        MetadataProxy body = null;
        MetadataProxy response = api.createMetadataProxy(body);

        // TODO: test validations
    }
    /**
     * Delete a metadata proxy
     *
     * Delete a metadata proxy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMetadataProxyTest() throws ApiException {
        String proxyId = null;
        api.deleteMetadataProxy(proxyId);

        // TODO: test validations
    }
    /**
     * Get Metadata Proxy statistics with given proxy id
     *
     * Returns the statistics of the given metatada proxy. If no logical switch is provided, all staticstics of all the logical switches the proxy was attached will be returned. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMetadataProxyStatisticsTest() throws ApiException {
        String proxyId = null;
        String logicalSwitchId = null;
        String source = null;
        MetadataProxyStatistics response = api.getMetadataProxyStatistics(proxyId, logicalSwitchId, source);

        // TODO: test validations
    }
    /**
     * Get Metadata Proxy status with given proxy id and attached logical switch.
     *
     * Returns the status of the given metadata proxy and attached logical switch. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMetadataProxyStatusTest() throws ApiException {
        String proxyId = null;
        String logicalSwitchId = null;
        MetadataProxyStatus response = api.getMetadataProxyStatus(proxyId, logicalSwitchId);

        // TODO: test validations
    }
    /**
     * Get a paginated list of metadata proxies
     *
     * Get a paginated list of metadata proxies
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMetadataProxyTest() throws ApiException {
        String cursor = null;
        String includedFields = null;
        Long pageSize = null;
        Boolean sortAscending = null;
        String sortBy = null;
        MetadataProxyListResult response = api.listMetadataProxy(cursor, includedFields, pageSize, sortAscending, sortBy);

        // TODO: test validations
    }
    /**
     * Get a metadata proxy
     *
     * Get a metadata proxy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMetadataProxyTest() throws ApiException {
        String proxyId = null;
        MetadataProxy response = api.readMetadataProxy(proxyId);

        // TODO: test validations
    }
    /**
     * Update a metadata proxy
     *
     * Update a metadata proxy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateMetadataProxyTest() throws ApiException {
        MetadataProxy body = null;
        String proxyId = null;
        MetadataProxy response = api.updateMetadataProxy(body, proxyId);

        // TODO: test validations
    }
}
