/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ApiError;
import io.swagger.client.model.NSServiceGroup;
import io.swagger.client.model.NSServiceGroupListResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagementPlaneApiGroupingObjectsNsServiceGroupsApi
 */
@Ignore
public class ManagementPlaneApiGroupingObjectsNsServiceGroupsApiTest {

    private final ManagementPlaneApiGroupingObjectsNsServiceGroupsApi api = new ManagementPlaneApiGroupingObjectsNsServiceGroupsApi();

    /**
     * Create NSServiceGroup
     *
     * Creates a new NSServiceGroup which can contain NSServices. A given NSServiceGroup can contain either only ether type of NSServices or only non-ether type of NSServices, i.e. an NSServiceGroup cannot contain a mix of both ether and non-ether types of NSServices. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNSServiceGroupTest() throws ApiException {
        NSServiceGroup body = null;
        NSServiceGroup response = api.createNSServiceGroup(body);

        // TODO: test validations
    }
    /**
     * Delete NSServiceGroup
     *
     * Deletes the specified NSServiceGroup. By default, if the NSServiceGroup is consumed in a Firewall rule, it won&#x27;t get deleted. In such situations, pass \&quot;force&#x3D;true\&quot; as query param to force delete the NSServiceGroup. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteNSServiceGroupTest() throws ApiException {
        String nsServiceGroupId = null;
        Boolean force = null;
        api.deleteNSServiceGroup(nsServiceGroupId, force);

        // TODO: test validations
    }
    /**
     * List all NSServiceGroups
     *
     * Returns paginated list of NSServiceGroups 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNSServiceGroupsTest() throws ApiException {
        String cursor = null;
        Boolean defaultService = null;
        String includedFields = null;
        Long pageSize = null;
        Boolean sortAscending = null;
        String sortBy = null;
        NSServiceGroupListResult response = api.listNSServiceGroups(cursor, defaultService, includedFields, pageSize, sortAscending, sortBy);

        // TODO: test validations
    }
    /**
     * Read NSServiceGroup
     *
     * Returns information about the specified NSServiceGroup 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readNSServiceGroupTest() throws ApiException {
        String nsServiceGroupId = null;
        NSServiceGroup response = api.readNSServiceGroup(nsServiceGroupId);

        // TODO: test validations
    }
    /**
     * Update NSServiceGroup
     *
     * Updates the specified NSService. Modifiable parameters include the description, display_name and members. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateNSServiceGroupTest() throws ApiException {
        NSServiceGroup body = null;
        String nsServiceGroupId = null;
        NSServiceGroup response = api.updateNSServiceGroup(body, nsServiceGroupId);

        // TODO: test validations
    }
}
