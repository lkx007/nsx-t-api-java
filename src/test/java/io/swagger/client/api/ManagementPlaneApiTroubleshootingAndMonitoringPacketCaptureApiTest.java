/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ApiError;
import io.swagger.client.model.PacketCaptureRequest;
import io.swagger.client.model.PacketCaptureSession;
import io.swagger.client.model.PacketCaptureSessionList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagementPlaneApiTroubleshootingAndMonitoringPacketCaptureApi
 */
@Ignore
public class ManagementPlaneApiTroubleshootingAndMonitoringPacketCaptureApiTest {

    private final ManagementPlaneApiTroubleshootingAndMonitoringPacketCaptureApi api = new ManagementPlaneApiTroubleshootingAndMonitoringPacketCaptureApi();

    /**
     * Create an new packet capture session
     *
     * Create an new packet capture session on given node with specified options 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createPacketCaptureSessionTest() throws ApiException {
        PacketCaptureRequest body = null;
        PacketCaptureSession response = api.createPacketCaptureSession(body);

        // TODO: test validations
    }
    /**
     * Delete all the packet capture sessions
     *
     * Delete all the packet capture sessions. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAllCaptureSessionsDeleteTest() throws ApiException {
        PacketCaptureSessionList response = api.deleteAllCaptureSessionsDelete();

        // TODO: test validations
    }
    /**
     * Delete the packet capture session by session id.
     *
     * Before calling this method, terminate any running capture session. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePacketCaptureSessionDeleteTest() throws ApiException {
        String sessionId = null;
        PacketCaptureSession response = api.deletePacketCaptureSessionDelete(sessionId);

        // TODO: test validations
    }
    /**
     * Get the information of all packet capture sessions
     *
     * Get the information of all packet capture sessions. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listPacketCaptureSessionsTest() throws ApiException {
        PacketCaptureSessionList response = api.listPacketCaptureSessions();

        // TODO: test validations
    }
    /**
     * Get the status of packet capture session
     *
     * Get the packet capture status information by session id. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readPacketCaptureSessionTest() throws ApiException {
        String sessionId = null;
        PacketCaptureSession response = api.readPacketCaptureSession(sessionId);

        // TODO: test validations
    }
    /**
     * Restart the packet capture session
     *
     * Restart the packet capture session 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void restartPacketCaptureSessionRestartTest() throws ApiException {
        String sessionId = null;
        PacketCaptureSession response = api.restartPacketCaptureSessionRestart(sessionId);

        // TODO: test validations
    }
    /**
     * Terminate the packet capture session by session id
     *
     * Terminate the packet capture session by session id. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void terminatePacketCaptureSessionTerminateTest() throws ApiException {
        String sessionId = null;
        PacketCaptureSession response = api.terminatePacketCaptureSessionTerminate(sessionId);

        // TODO: test validations
    }
}
