/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ApiError;
import io.swagger.client.model.DiscoveredNode;
import io.swagger.client.model.DiscoveredNodeListResult;
import io.swagger.client.model.Node;
import io.swagger.client.model.TransportNode;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagementPlaneApiFabricDiscoveredNodesApi
 */
@Ignore
public class ManagementPlaneApiFabricDiscoveredNodesApiTest {

    private final ManagementPlaneApiFabricDiscoveredNodesApi api = new ManagementPlaneApiFabricDiscoveredNodesApi();

    /**
     * Created Transport Node for Discovered Node
     *
     * NSX components are installaed on host and transport node is created with given configurations.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createTransportNodeForDiscoveredNodeCreateTransportNodeTest() throws ApiException {
        TransportNode body = null;
        String nodeExtId = null;
        TransportNode response = api.createTransportNodeForDiscoveredNodeCreateTransportNode(body, nodeExtId);

        // TODO: test validations
    }
    /**
     * (Deprecated) Prepares discovered Node for NSX
     *
     * Prepares(hostprep) discovered node for NSX. NSX LCP bundles are installed on this discovered node. This API is deprecated. Use /fabric/discovered-nodes/&lt;node-ext-id&gt;?action&#x3D;create_transport_node
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void hostPrepDiscoveredNodeHostprepTest() throws ApiException {
        String nodeExtId = null;
        Node response = api.hostPrepDiscoveredNodeHostprep(nodeExtId);

        // TODO: test validations
    }
    /**
     * Return the List of Discovered Nodes
     *
     * Returns information about all discovered nodes.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listDiscoveredNodesTest() throws ApiException {
        String cmLocalId = null;
        String cursor = null;
        String displayName = null;
        String externalId = null;
        String hasParent = null;
        String includedFields = null;
        String ipAddress = null;
        String nodeId = null;
        String nodeType = null;
        String originId = null;
        Long pageSize = null;
        String parentComputeCollection = null;
        Boolean sortAscending = null;
        String sortBy = null;
        DiscoveredNodeListResult response = api.listDiscoveredNodes(cmLocalId, cursor, displayName, externalId, hasParent, includedFields, ipAddress, nodeId, nodeType, originId, pageSize, parentComputeCollection, sortAscending, sortBy);

        // TODO: test validations
    }
    /**
     * Return Discovered Node Information
     *
     * Returns information about a specific discovered node.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readDiscoveredNodeTest() throws ApiException {
        String nodeExtId = null;
        DiscoveredNode response = api.readDiscoveredNode(nodeExtId);

        // TODO: test validations
    }
    /**
     * Apply cluster level config on Discovered Node
     *
     * When transport node profile (TNP) is applied to a cluster, if any validation fails (e.g. VMs running on host) then transport node (TN) is not created. In that case after the required action is taken (e.g. VMs powered off), you can call this API to try to create TN for that discovered node. Do not call this API if Transport Node already exists for the discovered node. In that case use API on transport node. /transport-nodes/&lt;transport-node-id&gt;?action&#x3D;restore_cluster_config
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void reapplyTNProfileOnDiscoveredNodeReapplyClusterConfigTest() throws ApiException {
        String nodeExtId = null;
        TransportNode response = api.reapplyTNProfileOnDiscoveredNodeReapplyClusterConfig(nodeExtId);

        // TODO: test validations
    }
}
