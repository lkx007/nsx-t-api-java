/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ApiError;
import io.swagger.client.model.IPAddressElement;
import io.swagger.client.model.IPAddressElementListResult;
import io.swagger.client.model.IPSet;
import io.swagger.client.model.IPSetListResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagementPlaneApiGroupingObjectsIpSetsApi
 */
@Ignore
public class ManagementPlaneApiGroupingObjectsIpSetsApiTest {

    private final ManagementPlaneApiGroupingObjectsIpSetsApi api = new ManagementPlaneApiGroupingObjectsIpSetsApi();

    /**
     * Add a IP address to a IPSet
     *
     * Add/Remove an individual IP address to an IPSet 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addRemoveIPAddressTest() throws ApiException {
        IPAddressElement body = null;
        String action = null;
        String ipSetId = null;
        IPAddressElement response = api.addRemoveIPAddress(body, action, ipSetId);

        // TODO: test validations
    }
    /**
     * Create IPSet
     *
     * Creates a new IPSet that can group either IPv4 or IPv6 individual ip addresses, ranges or subnets. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createIPSetTest() throws ApiException {
        IPSet body = null;
        IPSet response = api.createIPSet(body);

        // TODO: test validations
    }
    /**
     * Delete IPSet
     *
     * Deletes the specified IPSet.  By default, if the IPSet is added to an NSGroup, it won&#x27;t be deleted. In such situations, pass \&quot;force&#x3D;true\&quot; as query param to force delete the IPSet. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteIPSetTest() throws ApiException {
        String ipSetId = null;
        Boolean force = null;
        api.deleteIPSet(ipSetId, force);

        // TODO: test validations
    }
    /**
     * Get all IPAddresses in a IPSet
     *
     * List all IP addresses in a IPSet 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIPAddressesTest() throws ApiException {
        String ipSetId = null;
        IPAddressElementListResult response = api.getIPAddresses(ipSetId);

        // TODO: test validations
    }
    /**
     * List IPSets
     *
     * Returns paginated list of IPSets 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listIPSetsTest() throws ApiException {
        String cursor = null;
        String includedFields = null;
        Long pageSize = null;
        Boolean sortAscending = null;
        String sortBy = null;
        IPSetListResult response = api.listIPSets(cursor, includedFields, pageSize, sortAscending, sortBy);

        // TODO: test validations
    }
    /**
     * Read IPSet
     *
     * Returns information about the specified IPSet 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readIPSetTest() throws ApiException {
        String ipSetId = null;
        IPSet response = api.readIPSet(ipSetId);

        // TODO: test validations
    }
    /**
     * Update IPSet
     *
     * Updates the specified IPSet. Modifiable parameters include description, display_name and ip_addresses. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateIPSetTest() throws ApiException {
        IPSet body = null;
        String ipSetId = null;
        IPSet response = api.updateIPSet(body, ipSetId);

        // TODO: test validations
    }
}
