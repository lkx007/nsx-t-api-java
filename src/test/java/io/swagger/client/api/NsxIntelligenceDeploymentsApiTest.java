/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.AddIntelligenceClusterNodeVMInfo;
import io.swagger.client.model.ApiError;
import io.swagger.client.model.IntelligenceClusterNodeVMDeploymentRequest;
import io.swagger.client.model.IntelligenceClusterNodeVMDeploymentRequestList;
import io.swagger.client.model.IntelligenceClusterNodeVMDeploymentStatusReport;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NsxIntelligenceDeploymentsApi
 */
@Ignore
public class NsxIntelligenceDeploymentsApiTest {

    private final NsxIntelligenceDeploymentsApi api = new NsxIntelligenceDeploymentsApi();

    /**
     * Deploy and register a Intelligence cluster node VM
     *
     * Deploys a Intelligence cluster node VM as specified by the deployment config. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addPaceClusterNodeVMTest() throws ApiException {
        AddIntelligenceClusterNodeVMInfo body = null;
        IntelligenceClusterNodeVMDeploymentRequestList response = api.addPaceClusterNodeVM(body);

        // TODO: test validations
    }
    /**
     * Attempt to delete an auto-deployed cluster node VM
     *
     * Attempts to unregister and undeploy a specified auto-deployed cluster node VM. If it is a member of a cluster, then the VM will be automatically detached from the cluster before being unregistered and undeployed. Alternatively, if the original deployment attempt failed or the VM is not found, cleans up the deployment information associated with the deployment attempt. Note: If a VM has been successfully auto-deployed, then the associated deployment information will not be deleted unless and until the VM is successfully deleted. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAutoDeployedPaceClusterNodeVMDeleteTest() throws ApiException {
        String nodeId = null;
        Boolean forceDelete = null;
        api.deleteAutoDeployedPaceClusterNodeVMDelete(nodeId, forceDelete);

        // TODO: test validations
    }
    /**
     * Returns info for all cluster node VM auto-deployment attempts
     *
     * Returns request information for every attempted deployment of a cluster node VM. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listPaceClusterNodeVMDeploymentRequestsTest() throws ApiException {
        IntelligenceClusterNodeVMDeploymentRequestList response = api.listPaceClusterNodeVMDeploymentRequests();

        // TODO: test validations
    }
    /**
     * Returns info for a Intelligence cluster node VM auto-deployment attempt
     *
     * Returns deployment request information for a specific attempted deployment of a cluster node VM. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readPaceClusterNodeVMDeploymentRequestTest() throws ApiException {
        String nodeId = null;
        IntelligenceClusterNodeVMDeploymentRequest response = api.readPaceClusterNodeVMDeploymentRequest(nodeId);

        // TODO: test validations
    }
    /**
     * Returns the status of the VM creation/deletion
     *
     * Returns the current deployment or undeployment status for a VM along with any other relevant current information, such as error messages. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readPaceClusterNodeVMDeploymentStatusTest() throws ApiException {
        String nodeId = null;
        IntelligenceClusterNodeVMDeploymentStatusReport response = api.readPaceClusterNodeVMDeploymentStatus(nodeId);

        // TODO: test validations
    }
}
