/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ApiError;
import io.swagger.client.model.VniPool;
import io.swagger.client.model.VniPoolListResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagementPlaneApiPoolManagementVniPoolsApi
 */
@Ignore
public class ManagementPlaneApiPoolManagementVniPoolsApiTest {

    private final ManagementPlaneApiPoolManagementVniPoolsApi api = new ManagementPlaneApiPoolManagementVniPoolsApi();

    /**
     * List VNI Pools
     *
     * Returns information about the default and configured virtual network identifier (VNI) pools for use when building logical network segments. Each virtual network has a unique ID called a VNI. Instead of creating a new VNI each time you need a new logical switch, you can instead allocate a VNI from a VNI pool. VNI pools are sometimes called segment ID pools. Each VNI pool has a range of usable VNIs. By default, there is one pool with two ranges [5000, 65535] and [65536, 75000]. To create multiple smaller pools, specify a smaller range for each pool such as 75001-75100 and 75101-75200. The VNI range determines the maximum number of logical switches that can be created in each network segment. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listVNIPoolsTest() throws ApiException {
        String cursor = null;
        String includedFields = null;
        Long pageSize = null;
        Boolean sortAscending = null;
        String sortBy = null;
        VniPoolListResult response = api.listVNIPools(cursor, includedFields, pageSize, sortAscending, sortBy);

        // TODO: test validations
    }
    /**
     * Read VNI Pool
     *
     * Returns information about the specified virtual network identifier (VNI) pool. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readVNIPoolTest() throws ApiException {
        String poolId = null;
        VniPool response = api.readVNIPool(poolId);

        // TODO: test validations
    }
    /**
     * Update a VNI Pool
     *
     * Updates the specified VNI pool. Modifiable parameters include description, display_name and ranges. Ranges can be added, modified or deleted. Overlapping ranges are not allowed. Only range end can be modified for any existing range. Range shrinking or deletion is not allowed if there are any allocated VNIs. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateVNIPoolTest() throws ApiException {
        VniPool body = null;
        String poolId = null;
        VniPool response = api.updateVNIPool(body, poolId);

        // TODO: test validations
    }
}
