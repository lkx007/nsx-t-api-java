/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ApiError;
import io.swagger.client.model.L2VpnSession;
import io.swagger.client.model.L2VpnSessionListResult;
import io.swagger.client.model.L2VpnSessionPeerCodes;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagementPlaneApiVpnL2VpnSessionsApi
 */
@Ignore
public class ManagementPlaneApiVpnL2VpnSessionsApiTest {

    private final ManagementPlaneApiVpnL2VpnSessionsApi api = new ManagementPlaneApiVpnL2VpnSessionsApi();

    /**
     * Create L2VPN session
     *
     * Create L2VPN session and bind to a L2VPNService
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createL2VpnSessionTest() throws ApiException {
        L2VpnSession body = null;
        L2VpnSession response = api.createL2VpnSession(body);

        // TODO: test validations
    }
    /**
     * Delete a L2VPN session
     *
     * Delete a specific L2VPN session. If there are any logical switch ports attached to it, those needs to be deleted first.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteL2VpnSessionTest() throws ApiException {
        String l2vpnSessionId = null;
        api.deleteL2VpnSession(l2vpnSessionId);

        // TODO: test validations
    }
    /**
     * Get a L2VPN session
     *
     * Get a specific L2VPN session
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getL2VpnSessionTest() throws ApiException {
        String l2vpnSessionId = null;
        L2VpnSession response = api.getL2VpnSession(l2vpnSessionId);

        // TODO: test validations
    }
    /**
     * Get peer codes for the L2VpnSession
     *
     * Get peer codes for the L2VPN session to program the remote side of the tunnel.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getL2VpnSessionPeerCodesTest() throws ApiException {
        String l2vpnSessionId = null;
        L2VpnSessionPeerCodes response = api.getL2VpnSessionPeerCodes(l2vpnSessionId);

        // TODO: test validations
    }
    /**
     * Get all L2VPN sessions
     *
     * Get paginated list of all L2VPN sessions
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listL2VpnSessionsTest() throws ApiException {
        String cursor = null;
        String includedFields = null;
        String l2vpnServiceId = null;
        Long pageSize = null;
        Boolean sortAscending = null;
        String sortBy = null;
        L2VpnSessionListResult response = api.listL2VpnSessions(cursor, includedFields, l2vpnServiceId, pageSize, sortAscending, sortBy);

        // TODO: test validations
    }
    /**
     * Edit a L2VPN session
     *
     * Edit a specific L2VPN session
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateL2VpnSessionTest() throws ApiException {
        L2VpnSession body = null;
        String l2vpnSessionId = null;
        L2VpnSession response = api.updateL2VpnSession(body, l2vpnSessionId);

        // TODO: test validations
    }
}
