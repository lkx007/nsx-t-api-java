/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * DHCP filtering configuration
 */
@Schema(description = "DHCP filtering configuration")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class DhcpFilter {
  @SerializedName("client_block_enabled")
  private Boolean clientBlockEnabled = null;

  @SerializedName("v6_client_block_enabled")
  private Boolean v6ClientBlockEnabled = false;

  @SerializedName("server_block_enabled")
  private Boolean serverBlockEnabled = null;

  @SerializedName("v6_server_block_enabled")
  private Boolean v6ServerBlockEnabled = false;

  public DhcpFilter clientBlockEnabled(Boolean clientBlockEnabled) {
    this.clientBlockEnabled = clientBlockEnabled;
    return this;
  }

   /**
   * Indicates whether DHCP client blocking is enabled
   * @return clientBlockEnabled
  **/
  @Schema(required = true, description = "Indicates whether DHCP client blocking is enabled")
  public Boolean isClientBlockEnabled() {
    return clientBlockEnabled;
  }

  public void setClientBlockEnabled(Boolean clientBlockEnabled) {
    this.clientBlockEnabled = clientBlockEnabled;
  }

  public DhcpFilter v6ClientBlockEnabled(Boolean v6ClientBlockEnabled) {
    this.v6ClientBlockEnabled = v6ClientBlockEnabled;
    return this;
  }

   /**
   * Indiactes whether DHCP v6 client blocking is enabled
   * @return v6ClientBlockEnabled
  **/
  @Schema(description = "Indiactes whether DHCP v6 client blocking is enabled")
  public Boolean isV6ClientBlockEnabled() {
    return v6ClientBlockEnabled;
  }

  public void setV6ClientBlockEnabled(Boolean v6ClientBlockEnabled) {
    this.v6ClientBlockEnabled = v6ClientBlockEnabled;
  }

  public DhcpFilter serverBlockEnabled(Boolean serverBlockEnabled) {
    this.serverBlockEnabled = serverBlockEnabled;
    return this;
  }

   /**
   * Indicates whether DHCP server blocking is enabled
   * @return serverBlockEnabled
  **/
  @Schema(required = true, description = "Indicates whether DHCP server blocking is enabled")
  public Boolean isServerBlockEnabled() {
    return serverBlockEnabled;
  }

  public void setServerBlockEnabled(Boolean serverBlockEnabled) {
    this.serverBlockEnabled = serverBlockEnabled;
  }

  public DhcpFilter v6ServerBlockEnabled(Boolean v6ServerBlockEnabled) {
    this.v6ServerBlockEnabled = v6ServerBlockEnabled;
    return this;
  }

   /**
   * Indiactes whether DHCP V6 server blocking is enabled
   * @return v6ServerBlockEnabled
  **/
  @Schema(description = "Indiactes whether DHCP V6 server blocking is enabled")
  public Boolean isV6ServerBlockEnabled() {
    return v6ServerBlockEnabled;
  }

  public void setV6ServerBlockEnabled(Boolean v6ServerBlockEnabled) {
    this.v6ServerBlockEnabled = v6ServerBlockEnabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DhcpFilter dhcpFilter = (DhcpFilter) o;
    return Objects.equals(this.clientBlockEnabled, dhcpFilter.clientBlockEnabled) &&
        Objects.equals(this.v6ClientBlockEnabled, dhcpFilter.v6ClientBlockEnabled) &&
        Objects.equals(this.serverBlockEnabled, dhcpFilter.serverBlockEnabled) &&
        Objects.equals(this.v6ServerBlockEnabled, dhcpFilter.v6ServerBlockEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientBlockEnabled, v6ClientBlockEnabled, serverBlockEnabled, v6ServerBlockEnabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DhcpFilter {\n");
    
    sb.append("    clientBlockEnabled: ").append(toIndentedString(clientBlockEnabled)).append("\n");
    sb.append("    v6ClientBlockEnabled: ").append(toIndentedString(v6ClientBlockEnabled)).append("\n");
    sb.append("    serverBlockEnabled: ").append(toIndentedString(serverBlockEnabled)).append("\n");
    sb.append("    v6ServerBlockEnabled: ").append(toIndentedString(v6ServerBlockEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
