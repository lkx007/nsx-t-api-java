/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.IPSecVPNIKESessionStatus;
import io.swagger.client.model.IPSecVPNIKETrafficStatistics;
import io.swagger.client.model.IPSecVPNPolicyTrafficStatistics;
import io.swagger.client.model.IPSecVPNTrafficCounters;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Session statistics gives aggregated statistics of all policies for all the tunnels.
 */
@Schema(description = "Session statistics gives aggregated statistics of all policies for all the tunnels.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class IPSecVPNSessionStatistics {
  @SerializedName("ike_traffic_statistics")
  private IPSecVPNIKETrafficStatistics ikeTrafficStatistics = null;

  @SerializedName("display_name")
  private String displayName = null;

  @SerializedName("policy_statistics")
  private List<IPSecVPNPolicyTrafficStatistics> policyStatistics = null;

  @SerializedName("partial_stats")
  private Boolean partialStats = null;

  @SerializedName("ipsec_vpn_session_id")
  private String ipsecVpnSessionId = null;

  @SerializedName("last_update_timestamp")
  private Long lastUpdateTimestamp = null;

  @SerializedName("ike_status")
  private IPSecVPNIKESessionStatus ikeStatus = null;

  @SerializedName("aggregate_traffic_counters")
  private IPSecVPNTrafficCounters aggregateTrafficCounters = null;

  public IPSecVPNSessionStatistics ikeTrafficStatistics(IPSecVPNIKETrafficStatistics ikeTrafficStatistics) {
    this.ikeTrafficStatistics = ikeTrafficStatistics;
    return this;
  }

   /**
   * Get ikeTrafficStatistics
   * @return ikeTrafficStatistics
  **/
  @Schema(description = "")
  public IPSecVPNIKETrafficStatistics getIkeTrafficStatistics() {
    return ikeTrafficStatistics;
  }

  public void setIkeTrafficStatistics(IPSecVPNIKETrafficStatistics ikeTrafficStatistics) {
    this.ikeTrafficStatistics = ikeTrafficStatistics;
  }

   /**
   * Display name of vpn session.
   * @return displayName
  **/
  @Schema(description = "Display name of vpn session.")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * Gives aggregate traffic statistics across all ipsec tunnels and individual tunnel statistics.
   * @return policyStatistics
  **/
  @Schema(description = "Gives aggregate traffic statistics across all ipsec tunnels and individual tunnel statistics.")
  public List<IPSecVPNPolicyTrafficStatistics> getPolicyStatistics() {
    return policyStatistics;
  }

   /**
   * Partial statistics if true specifies that the statistics are only from active node.
   * @return partialStats
  **/
  @Schema(description = "Partial statistics if true specifies that the statistics are only from active node.")
  public Boolean isPartialStats() {
    return partialStats;
  }

   /**
   * UUID of vpn session.
   * @return ipsecVpnSessionId
  **/
  @Schema(description = "UUID of vpn session.")
  public String getIpsecVpnSessionId() {
    return ipsecVpnSessionId;
  }

   /**
   * Timestamp when the data was last updated.
   * @return lastUpdateTimestamp
  **/
  @Schema(description = "Timestamp when the data was last updated.")
  public Long getLastUpdateTimestamp() {
    return lastUpdateTimestamp;
  }

  public IPSecVPNSessionStatistics ikeStatus(IPSecVPNIKESessionStatus ikeStatus) {
    this.ikeStatus = ikeStatus;
    return this;
  }

   /**
   * Get ikeStatus
   * @return ikeStatus
  **/
  @Schema(description = "")
  public IPSecVPNIKESessionStatus getIkeStatus() {
    return ikeStatus;
  }

  public void setIkeStatus(IPSecVPNIKESessionStatus ikeStatus) {
    this.ikeStatus = ikeStatus;
  }

  public IPSecVPNSessionStatistics aggregateTrafficCounters(IPSecVPNTrafficCounters aggregateTrafficCounters) {
    this.aggregateTrafficCounters = aggregateTrafficCounters;
    return this;
  }

   /**
   * Get aggregateTrafficCounters
   * @return aggregateTrafficCounters
  **/
  @Schema(description = "")
  public IPSecVPNTrafficCounters getAggregateTrafficCounters() {
    return aggregateTrafficCounters;
  }

  public void setAggregateTrafficCounters(IPSecVPNTrafficCounters aggregateTrafficCounters) {
    this.aggregateTrafficCounters = aggregateTrafficCounters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IPSecVPNSessionStatistics ipSecVPNSessionStatistics = (IPSecVPNSessionStatistics) o;
    return Objects.equals(this.ikeTrafficStatistics, ipSecVPNSessionStatistics.ikeTrafficStatistics) &&
        Objects.equals(this.displayName, ipSecVPNSessionStatistics.displayName) &&
        Objects.equals(this.policyStatistics, ipSecVPNSessionStatistics.policyStatistics) &&
        Objects.equals(this.partialStats, ipSecVPNSessionStatistics.partialStats) &&
        Objects.equals(this.ipsecVpnSessionId, ipSecVPNSessionStatistics.ipsecVpnSessionId) &&
        Objects.equals(this.lastUpdateTimestamp, ipSecVPNSessionStatistics.lastUpdateTimestamp) &&
        Objects.equals(this.ikeStatus, ipSecVPNSessionStatistics.ikeStatus) &&
        Objects.equals(this.aggregateTrafficCounters, ipSecVPNSessionStatistics.aggregateTrafficCounters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ikeTrafficStatistics, displayName, policyStatistics, partialStats, ipsecVpnSessionId, lastUpdateTimestamp, ikeStatus, aggregateTrafficCounters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IPSecVPNSessionStatistics {\n");
    
    sb.append("    ikeTrafficStatistics: ").append(toIndentedString(ikeTrafficStatistics)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    policyStatistics: ").append(toIndentedString(policyStatistics)).append("\n");
    sb.append("    partialStats: ").append(toIndentedString(partialStats)).append("\n");
    sb.append("    ipsecVpnSessionId: ").append(toIndentedString(ipsecVpnSessionId)).append("\n");
    sb.append("    lastUpdateTimestamp: ").append(toIndentedString(lastUpdateTimestamp)).append("\n");
    sb.append("    ikeStatus: ").append(toIndentedString(ikeStatus)).append("\n");
    sb.append("    aggregateTrafficCounters: ").append(toIndentedString(aggregateTrafficCounters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
