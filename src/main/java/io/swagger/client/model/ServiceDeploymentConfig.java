/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.VmNicInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * The Deployment Config contains settings that are applied during install time.
 */
@Schema(description = "The Deployment Config contains settings that are applied during install time.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class ServiceDeploymentConfig {
  @SerializedName("storage_id")
  private String storageId = null;

  @SerializedName("host_id")
  private String hostId = null;

  @SerializedName("compute_collection_id")
  private String computeCollectionId = null;

  @SerializedName("vm_nic_info")
  private VmNicInfo vmNicInfo = null;

  @SerializedName("compute_manager_id")
  private String computeManagerId = null;

  public ServiceDeploymentConfig storageId(String storageId) {
    this.storageId = storageId;
    return this;
  }

   /**
   * Moref of the datastore in VC. If it is to be taken from &#x27;Agent VM Settings&#x27;, then it should be empty.
   * @return storageId
  **/
  @Schema(description = "Moref of the datastore in VC. If it is to be taken from 'Agent VM Settings', then it should be empty.")
  public String getStorageId() {
    return storageId;
  }

  public void setStorageId(String storageId) {
    this.storageId = storageId;
  }

  public ServiceDeploymentConfig hostId(String hostId) {
    this.hostId = hostId;
    return this;
  }

   /**
   * The service VM will be deployed on the specified host in the specified server within the cluster if host_id is specified. Note: You must ensure that storage and specified networks are accessible       by this host. 
   * @return hostId
  **/
  @Schema(description = "The service VM will be deployed on the specified host in the specified server within the cluster if host_id is specified. Note: You must ensure that storage and specified networks are accessible       by this host. ")
  public String getHostId() {
    return hostId;
  }

  public void setHostId(String hostId) {
    this.hostId = hostId;
  }

  public ServiceDeploymentConfig computeCollectionId(String computeCollectionId) {
    this.computeCollectionId = computeCollectionId;
    return this;
  }

   /**
   * Resource Pool or cluster Id.
   * @return computeCollectionId
  **/
  @Schema(required = true, description = "Resource Pool or cluster Id.")
  public String getComputeCollectionId() {
    return computeCollectionId;
  }

  public void setComputeCollectionId(String computeCollectionId) {
    this.computeCollectionId = computeCollectionId;
  }

  public ServiceDeploymentConfig vmNicInfo(VmNicInfo vmNicInfo) {
    this.vmNicInfo = vmNicInfo;
    return this;
  }

   /**
   * Get vmNicInfo
   * @return vmNicInfo
  **/
  @Schema(description = "")
  public VmNicInfo getVmNicInfo() {
    return vmNicInfo;
  }

  public void setVmNicInfo(VmNicInfo vmNicInfo) {
    this.vmNicInfo = vmNicInfo;
  }

  public ServiceDeploymentConfig computeManagerId(String computeManagerId) {
    this.computeManagerId = computeManagerId;
    return this;
  }

   /**
   * Context Id or VCenter Id.
   * @return computeManagerId
  **/
  @Schema(required = true, description = "Context Id or VCenter Id.")
  public String getComputeManagerId() {
    return computeManagerId;
  }

  public void setComputeManagerId(String computeManagerId) {
    this.computeManagerId = computeManagerId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceDeploymentConfig serviceDeploymentConfig = (ServiceDeploymentConfig) o;
    return Objects.equals(this.storageId, serviceDeploymentConfig.storageId) &&
        Objects.equals(this.hostId, serviceDeploymentConfig.hostId) &&
        Objects.equals(this.computeCollectionId, serviceDeploymentConfig.computeCollectionId) &&
        Objects.equals(this.vmNicInfo, serviceDeploymentConfig.vmNicInfo) &&
        Objects.equals(this.computeManagerId, serviceDeploymentConfig.computeManagerId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(storageId, hostId, computeCollectionId, vmNicInfo, computeManagerId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceDeploymentConfig {\n");
    
    sb.append("    storageId: ").append(toIndentedString(storageId)).append("\n");
    sb.append("    hostId: ").append(toIndentedString(hostId)).append("\n");
    sb.append("    computeCollectionId: ").append(toIndentedString(computeCollectionId)).append("\n");
    sb.append("    vmNicInfo: ").append(toIndentedString(vmNicInfo)).append("\n");
    sb.append("    computeManagerId: ").append(toIndentedString(computeManagerId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
