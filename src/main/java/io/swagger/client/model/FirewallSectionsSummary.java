/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Resource;
import io.swagger.client.model.ResourceLink;
import io.swagger.client.model.SelfResourceLink;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.List;
/**
 * FirewallSectionsSummary
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class FirewallSectionsSummary extends Resource {
  @SerializedName("section_count")
  private Long sectionCount = null;

  @SerializedName("rule_count")
  private Long ruleCount = null;

  /**
   * Type of rules which a section can contain.
   */
  @JsonAdapter(SectionTypeEnum.Adapter.class)
  public enum SectionTypeEnum {
    L2DFW("L2DFW"),
    L3DFW("L3DFW"),
    L3BRIDGEPORTFW("L3BRIDGEPORTFW"),
    L3LOGICALROUTERFW("L3LOGICALROUTERFW");

    private String value;

    SectionTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SectionTypeEnum fromValue(String text) {
      for (SectionTypeEnum b : SectionTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SectionTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SectionTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SectionTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SectionTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("section_type")
  private SectionTypeEnum sectionType = null;

   /**
   * Total number of sections for the section type.
   * @return sectionCount
  **/
  @Schema(description = "Total number of sections for the section type.")
  public Long getSectionCount() {
    return sectionCount;
  }

   /**
   * Total number of rules in the section.
   * @return ruleCount
  **/
  @Schema(description = "Total number of rules in the section.")
  public Long getRuleCount() {
    return ruleCount;
  }

   /**
   * Type of rules which a section can contain.
   * @return sectionType
  **/
  @Schema(description = "Type of rules which a section can contain.")
  public SectionTypeEnum getSectionType() {
    return sectionType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FirewallSectionsSummary firewallSectionsSummary = (FirewallSectionsSummary) o;
    return Objects.equals(this.sectionCount, firewallSectionsSummary.sectionCount) &&
        Objects.equals(this.ruleCount, firewallSectionsSummary.ruleCount) &&
        Objects.equals(this.sectionType, firewallSectionsSummary.sectionType) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sectionCount, ruleCount, sectionType, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FirewallSectionsSummary {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    sectionCount: ").append(toIndentedString(sectionCount)).append("\n");
    sb.append("    ruleCount: ").append(toIndentedString(ruleCount)).append("\n");
    sb.append("    sectionType: ").append(toIndentedString(sectionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
