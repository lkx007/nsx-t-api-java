/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Overrides the router advertisement attributes for the IPv6 prefixes. 
 */
@Schema(description = "Overrides the router advertisement attributes for the IPv6 prefixes. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class NDRAPrefixConfig {
  @SerializedName("network_prefix")
  private String networkPrefix = null;

  @SerializedName("prefix_valid_time")
  private Long prefixValidTime = null;

  @SerializedName("prefix_preferred_time")
  private Long prefixPreferredTime = null;

  public NDRAPrefixConfig networkPrefix(String networkPrefix) {
    this.networkPrefix = networkPrefix;
    return this;
  }

   /**
   * Override the neighbor discovery prefix preferred time and prefix valid time for the subnet on uplink port whose network matches with the network address of CIDR specified in network_prefix. 
   * @return networkPrefix
  **/
  @Schema(required = true, description = "Override the neighbor discovery prefix preferred time and prefix valid time for the subnet on uplink port whose network matches with the network address of CIDR specified in network_prefix. ")
  public String getNetworkPrefix() {
    return networkPrefix;
  }

  public void setNetworkPrefix(String networkPrefix) {
    this.networkPrefix = networkPrefix;
  }

  public NDRAPrefixConfig prefixValidTime(Long prefixValidTime) {
    this.prefixValidTime = prefixValidTime;
    return this;
  }

   /**
   * The time interval in seconds, in which the prefix is advertised as valid. 
   * minimum: 0
   * maximum: 4294967295
   * @return prefixValidTime
  **/
  @Schema(description = "The time interval in seconds, in which the prefix is advertised as valid. ")
  public Long getPrefixValidTime() {
    return prefixValidTime;
  }

  public void setPrefixValidTime(Long prefixValidTime) {
    this.prefixValidTime = prefixValidTime;
  }

  public NDRAPrefixConfig prefixPreferredTime(Long prefixPreferredTime) {
    this.prefixPreferredTime = prefixPreferredTime;
    return this;
  }

   /**
   * The time interval in seconds, in which the prefix is advertised as preferred. 
   * minimum: 0
   * maximum: 4294967295
   * @return prefixPreferredTime
  **/
  @Schema(description = "The time interval in seconds, in which the prefix is advertised as preferred. ")
  public Long getPrefixPreferredTime() {
    return prefixPreferredTime;
  }

  public void setPrefixPreferredTime(Long prefixPreferredTime) {
    this.prefixPreferredTime = prefixPreferredTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NDRAPrefixConfig ndRAPrefixConfig = (NDRAPrefixConfig) o;
    return Objects.equals(this.networkPrefix, ndRAPrefixConfig.networkPrefix) &&
        Objects.equals(this.prefixValidTime, ndRAPrefixConfig.prefixValidTime) &&
        Objects.equals(this.prefixPreferredTime, ndRAPrefixConfig.prefixPreferredTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(networkPrefix, prefixValidTime, prefixPreferredTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NDRAPrefixConfig {\n");
    
    sb.append("    networkPrefix: ").append(toIndentedString(networkPrefix)).append("\n");
    sb.append("    prefixValidTime: ").append(toIndentedString(prefixValidTime)).append("\n");
    sb.append("    prefixPreferredTime: ").append(toIndentedString(prefixPreferredTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
