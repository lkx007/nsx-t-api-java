/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ClusterInitializationNodeInfo;
import io.swagger.client.model.ManagementPlaneBaseNodeInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ManagementClusterStatus
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class ManagementClusterStatus {
  /**
   * The current status of the management cluster
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    INITIALIZING("INITIALIZING"),
    UNSTABLE("UNSTABLE"),
    DEGRADED("DEGRADED"),
    STABLE("STABLE"),
    UNKNOWN("UNKNOWN");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("offline_nodes")
  private List<ManagementPlaneBaseNodeInfo> offlineNodes = null;

  @SerializedName("required_members_for_initialization")
  private List<ClusterInitializationNodeInfo> requiredMembersForInitialization = null;

  @SerializedName("online_nodes")
  private List<ManagementPlaneBaseNodeInfo> onlineNodes = null;

   /**
   * The current status of the management cluster
   * @return status
  **/
  @Schema(description = "The current status of the management cluster")
  public StatusEnum getStatus() {
    return status;
  }

   /**
   * Current missing management plane nodes
   * @return offlineNodes
  **/
  @Schema(description = "Current missing management plane nodes")
  public List<ManagementPlaneBaseNodeInfo> getOfflineNodes() {
    return offlineNodes;
  }

   /**
   * The details of the cluster nodes required for cluster initialization
   * @return requiredMembersForInitialization
  **/
  @Schema(description = "The details of the cluster nodes required for cluster initialization")
  public List<ClusterInitializationNodeInfo> getRequiredMembersForInitialization() {
    return requiredMembersForInitialization;
  }

   /**
   * Current alive management plane nodes
   * @return onlineNodes
  **/
  @Schema(description = "Current alive management plane nodes")
  public List<ManagementPlaneBaseNodeInfo> getOnlineNodes() {
    return onlineNodes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManagementClusterStatus managementClusterStatus = (ManagementClusterStatus) o;
    return Objects.equals(this.status, managementClusterStatus.status) &&
        Objects.equals(this.offlineNodes, managementClusterStatus.offlineNodes) &&
        Objects.equals(this.requiredMembersForInitialization, managementClusterStatus.requiredMembersForInitialization) &&
        Objects.equals(this.onlineNodes, managementClusterStatus.onlineNodes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, offlineNodes, requiredMembersForInitialization, onlineNodes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManagementClusterStatus {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    offlineNodes: ").append(toIndentedString(offlineNodes)).append("\n");
    sb.append("    requiredMembersForInitialization: ").append(toIndentedString(requiredMembersForInitialization)).append("\n");
    sb.append("    onlineNodes: ").append(toIndentedString(onlineNodes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
