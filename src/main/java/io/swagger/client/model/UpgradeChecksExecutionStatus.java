/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Execution status of pre/post-upgrade checks
 */
@Schema(description = "Execution status of pre/post-upgrade checks")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class UpgradeChecksExecutionStatus {
  /**
   * Status of execution of pre/post-upgrade checks
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    NOT_STARTED("NOT_STARTED"),
    IN_PROGRESS("IN_PROGRESS"),
    COMPLETED("COMPLETED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("start_time")
  private Long startTime = null;

  @SerializedName("node_with_issues_count")
  private Integer nodeWithIssuesCount = null;

  @SerializedName("end_time")
  private Long endTime = null;

  @SerializedName("details")
  private String details = null;

   /**
   * Status of execution of pre/post-upgrade checks
   * @return status
  **/
  @Schema(description = "Status of execution of pre/post-upgrade checks")
  public StatusEnum getStatus() {
    return status;
  }

  public UpgradeChecksExecutionStatus startTime(Long startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Time (in milliseconds since epoch) when the execution of pre/post-upgrade checks started 
   * @return startTime
  **/
  @Schema(description = "Time (in milliseconds since epoch) when the execution of pre/post-upgrade checks started ")
  public Long getStartTime() {
    return startTime;
  }

  public void setStartTime(Long startTime) {
    this.startTime = startTime;
  }

   /**
   * Number of nodes which generated failures or warnings during pre/post-upgrade checks 
   * @return nodeWithIssuesCount
  **/
  @Schema(description = "Number of nodes which generated failures or warnings during pre/post-upgrade checks ")
  public Integer getNodeWithIssuesCount() {
    return nodeWithIssuesCount;
  }

  public UpgradeChecksExecutionStatus endTime(Long endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Time (in milliseconds since epoch) when the execution of pre/post-upgrade checks completed 
   * @return endTime
  **/
  @Schema(description = "Time (in milliseconds since epoch) when the execution of pre/post-upgrade checks completed ")
  public Long getEndTime() {
    return endTime;
  }

  public void setEndTime(Long endTime) {
    this.endTime = endTime;
  }

   /**
   * Details about current execution of pre/post-upgrade checks
   * @return details
  **/
  @Schema(description = "Details about current execution of pre/post-upgrade checks")
  public String getDetails() {
    return details;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpgradeChecksExecutionStatus upgradeChecksExecutionStatus = (UpgradeChecksExecutionStatus) o;
    return Objects.equals(this.status, upgradeChecksExecutionStatus.status) &&
        Objects.equals(this.startTime, upgradeChecksExecutionStatus.startTime) &&
        Objects.equals(this.nodeWithIssuesCount, upgradeChecksExecutionStatus.nodeWithIssuesCount) &&
        Objects.equals(this.endTime, upgradeChecksExecutionStatus.endTime) &&
        Objects.equals(this.details, upgradeChecksExecutionStatus.details);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, startTime, nodeWithIssuesCount, endTime, details);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpgradeChecksExecutionStatus {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    nodeWithIssuesCount: ").append(toIndentedString(nodeWithIssuesCount)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
