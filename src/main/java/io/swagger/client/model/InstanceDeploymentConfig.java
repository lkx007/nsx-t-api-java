/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.VmNicInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * The Instance Deployment Config contains settings that is applied during install time.
 */
@Schema(description = "The Instance Deployment Config contains settings that is applied during install time.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class InstanceDeploymentConfig {
  @SerializedName("context_id")
  private String contextId = null;

  @SerializedName("vm_nic_infos")
  private List<VmNicInfo> vmNicInfos = new ArrayList<VmNicInfo>();

  @SerializedName("storage_id")
  private String storageId = null;

  @SerializedName("host_id")
  private String hostId = null;

  @SerializedName("compute_id")
  private String computeId = null;

  public InstanceDeploymentConfig contextId(String contextId) {
    this.contextId = contextId;
    return this;
  }

   /**
   * Context Id or VCenter Id.
   * @return contextId
  **/
  @Schema(required = true, description = "Context Id or VCenter Id.")
  public String getContextId() {
    return contextId;
  }

  public void setContextId(String contextId) {
    this.contextId = contextId;
  }

  public InstanceDeploymentConfig vmNicInfos(List<VmNicInfo> vmNicInfos) {
    this.vmNicInfos = vmNicInfos;
    return this;
  }

  public InstanceDeploymentConfig addVmNicInfosItem(VmNicInfo vmNicInfosItem) {
    this.vmNicInfos.add(vmNicInfosItem);
    return this;
  }

   /**
   * List of NIC information for VMs
   * @return vmNicInfos
  **/
  @Schema(required = true, description = "List of NIC information for VMs")
  public List<VmNicInfo> getVmNicInfos() {
    return vmNicInfos;
  }

  public void setVmNicInfos(List<VmNicInfo> vmNicInfos) {
    this.vmNicInfos = vmNicInfos;
  }

  public InstanceDeploymentConfig storageId(String storageId) {
    this.storageId = storageId;
    return this;
  }

   /**
   * Storage Id.
   * @return storageId
  **/
  @Schema(required = true, description = "Storage Id.")
  public String getStorageId() {
    return storageId;
  }

  public void setStorageId(String storageId) {
    this.storageId = storageId;
  }

  public InstanceDeploymentConfig hostId(String hostId) {
    this.hostId = hostId;
    return this;
  }

   /**
   * The service VM will be deployed on the specified host in the specified server within the cluster if host_id is specified. Note: You must ensure that storage and specified networks are accessible by this host. 
   * @return hostId
  **/
  @Schema(description = "The service VM will be deployed on the specified host in the specified server within the cluster if host_id is specified. Note: You must ensure that storage and specified networks are accessible by this host. ")
  public String getHostId() {
    return hostId;
  }

  public void setHostId(String hostId) {
    this.hostId = hostId;
  }

  public InstanceDeploymentConfig computeId(String computeId) {
    this.computeId = computeId;
    return this;
  }

   /**
   * Resource Pool or Compute Id.
   * @return computeId
  **/
  @Schema(required = true, description = "Resource Pool or Compute Id.")
  public String getComputeId() {
    return computeId;
  }

  public void setComputeId(String computeId) {
    this.computeId = computeId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceDeploymentConfig instanceDeploymentConfig = (InstanceDeploymentConfig) o;
    return Objects.equals(this.contextId, instanceDeploymentConfig.contextId) &&
        Objects.equals(this.vmNicInfos, instanceDeploymentConfig.vmNicInfos) &&
        Objects.equals(this.storageId, instanceDeploymentConfig.storageId) &&
        Objects.equals(this.hostId, instanceDeploymentConfig.hostId) &&
        Objects.equals(this.computeId, instanceDeploymentConfig.computeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contextId, vmNicInfos, storageId, hostId, computeId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceDeploymentConfig {\n");
    
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    vmNicInfos: ").append(toIndentedString(vmNicInfos)).append("\n");
    sb.append("    storageId: ").append(toIndentedString(storageId)).append("\n");
    sb.append("    hostId: ").append(toIndentedString(hostId)).append("\n");
    sb.append("    computeId: ").append(toIndentedString(computeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
