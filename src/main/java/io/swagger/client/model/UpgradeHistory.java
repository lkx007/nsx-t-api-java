/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * UpgradeHistory
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class UpgradeHistory {
  @SerializedName("timestamp")
  private Long timestamp = null;

  @SerializedName("target_version")
  private String targetVersion = null;

  @SerializedName("initial_version")
  private String initialVersion = null;

  /**
   * Status of the upgrade
   */
  @JsonAdapter(UpgradeStatusEnum.Adapter.class)
  public enum UpgradeStatusEnum {
    STARTED("STARTED"),
    SUCCESS("SUCCESS"),
    FAILED("FAILED");

    private String value;

    UpgradeStatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static UpgradeStatusEnum fromValue(String text) {
      for (UpgradeStatusEnum b : UpgradeStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<UpgradeStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final UpgradeStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public UpgradeStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return UpgradeStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("upgrade_status")
  private UpgradeStatusEnum upgradeStatus = null;

  public UpgradeHistory timestamp(Long timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Timestamp (in milliseconds since epoch) when the upgrade was performed
   * @return timestamp
  **/
  @Schema(required = true, description = "Timestamp (in milliseconds since epoch) when the upgrade was performed")
  public Long getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Long timestamp) {
    this.timestamp = timestamp;
  }

  public UpgradeHistory targetVersion(String targetVersion) {
    this.targetVersion = targetVersion;
    return this;
  }

   /**
   * Version being upgraded to
   * @return targetVersion
  **/
  @Schema(required = true, description = "Version being upgraded to")
  public String getTargetVersion() {
    return targetVersion;
  }

  public void setTargetVersion(String targetVersion) {
    this.targetVersion = targetVersion;
  }

  public UpgradeHistory initialVersion(String initialVersion) {
    this.initialVersion = initialVersion;
    return this;
  }

   /**
   * Version before the upgrade started
   * @return initialVersion
  **/
  @Schema(required = true, description = "Version before the upgrade started")
  public String getInitialVersion() {
    return initialVersion;
  }

  public void setInitialVersion(String initialVersion) {
    this.initialVersion = initialVersion;
  }

  public UpgradeHistory upgradeStatus(UpgradeStatusEnum upgradeStatus) {
    this.upgradeStatus = upgradeStatus;
    return this;
  }

   /**
   * Status of the upgrade
   * @return upgradeStatus
  **/
  @Schema(required = true, description = "Status of the upgrade")
  public UpgradeStatusEnum getUpgradeStatus() {
    return upgradeStatus;
  }

  public void setUpgradeStatus(UpgradeStatusEnum upgradeStatus) {
    this.upgradeStatus = upgradeStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpgradeHistory upgradeHistory = (UpgradeHistory) o;
    return Objects.equals(this.timestamp, upgradeHistory.timestamp) &&
        Objects.equals(this.targetVersion, upgradeHistory.targetVersion) &&
        Objects.equals(this.initialVersion, upgradeHistory.initialVersion) &&
        Objects.equals(this.upgradeStatus, upgradeHistory.upgradeStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timestamp, targetVersion, initialVersion, upgradeStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpgradeHistory {\n");
    
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    targetVersion: ").append(toIndentedString(targetVersion)).append("\n");
    sb.append("    initialVersion: ").append(toIndentedString(initialVersion)).append("\n");
    sb.append("    upgradeStatus: ").append(toIndentedString(upgradeStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
