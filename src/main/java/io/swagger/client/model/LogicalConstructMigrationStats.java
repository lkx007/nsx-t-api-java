/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Contains migration related information about logical constructs
 */
@Schema(description = "Contains migration related information about logical constructs")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class LogicalConstructMigrationStats {
  @SerializedName("source_type")
  private String sourceType = null;

  @SerializedName("source_count")
  private String sourceCount = null;

  @SerializedName("target_type")
  private String targetType = null;

  @SerializedName("vertical")
  private String vertical = null;

  @SerializedName("target_count")
  private String targetCount = null;

   /**
   * Type of the vSphere object (e.g. dvportgroup).
   * @return sourceType
  **/
  @Schema(description = "Type of the vSphere object (e.g. dvportgroup).")
  public String getSourceType() {
    return sourceType;
  }

   /**
   * Number of objects of source type.
   * @return sourceCount
  **/
  @Schema(description = "Number of objects of source type.")
  public String getSourceCount() {
    return sourceCount;
  }

   /**
   * Type of the Policy object corresponding to the source type (e.g. Segment).
   * @return targetType
  **/
  @Schema(description = "Type of the Policy object corresponding to the source type (e.g. Segment).")
  public String getTargetType() {
    return targetType;
  }

   /**
   * Functional area that this vSphere object falls into
   * @return vertical
  **/
  @Schema(description = "Functional area that this vSphere object falls into")
  public String getVertical() {
    return vertical;
  }

   /**
   * Number of objects of target type.
   * @return targetCount
  **/
  @Schema(description = "Number of objects of target type.")
  public String getTargetCount() {
    return targetCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LogicalConstructMigrationStats logicalConstructMigrationStats = (LogicalConstructMigrationStats) o;
    return Objects.equals(this.sourceType, logicalConstructMigrationStats.sourceType) &&
        Objects.equals(this.sourceCount, logicalConstructMigrationStats.sourceCount) &&
        Objects.equals(this.targetType, logicalConstructMigrationStats.targetType) &&
        Objects.equals(this.vertical, logicalConstructMigrationStats.vertical) &&
        Objects.equals(this.targetCount, logicalConstructMigrationStats.targetCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceType, sourceCount, targetType, vertical, targetCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LogicalConstructMigrationStats {\n");
    
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    sourceCount: ").append(toIndentedString(sourceCount)).append("\n");
    sb.append("    targetType: ").append(toIndentedString(targetType)).append("\n");
    sb.append("    vertical: ").append(toIndentedString(vertical)).append("\n");
    sb.append("    targetCount: ").append(toIndentedString(targetCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
