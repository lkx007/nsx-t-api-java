/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.RoutesPerTransportNode;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * BGP neighbor learned/advertised route details.
 */
@Schema(description = "BGP neighbor learned/advertised route details.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class BgpNeighborRouteDetails {
  @SerializedName("logical_router_id")
  private String logicalRouterId = null;

  @SerializedName("neighbor_id")
  private String neighborId = null;

  @SerializedName("per_transport_node_routes")
  private List<RoutesPerTransportNode> perTransportNodeRoutes = null;

  @SerializedName("neighbor_address")
  private String neighborAddress = null;

   /**
   * Logical router id
   * @return logicalRouterId
  **/
  @Schema(description = "Logical router id")
  public String getLogicalRouterId() {
    return logicalRouterId;
  }

   /**
   * BGP neighbor id
   * @return neighborId
  **/
  @Schema(description = "BGP neighbor id")
  public String getNeighborId() {
    return neighborId;
  }

   /**
   * Array of BGP neighbor route details per transport node. 
   * @return perTransportNodeRoutes
  **/
  @Schema(description = "Array of BGP neighbor route details per transport node. ")
  public List<RoutesPerTransportNode> getPerTransportNodeRoutes() {
    return perTransportNodeRoutes;
  }

   /**
   * BGP neighbor peer IP address.
   * @return neighborAddress
  **/
  @Schema(description = "BGP neighbor peer IP address.")
  public String getNeighborAddress() {
    return neighborAddress;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BgpNeighborRouteDetails bgpNeighborRouteDetails = (BgpNeighborRouteDetails) o;
    return Objects.equals(this.logicalRouterId, bgpNeighborRouteDetails.logicalRouterId) &&
        Objects.equals(this.neighborId, bgpNeighborRouteDetails.neighborId) &&
        Objects.equals(this.perTransportNodeRoutes, bgpNeighborRouteDetails.perTransportNodeRoutes) &&
        Objects.equals(this.neighborAddress, bgpNeighborRouteDetails.neighborAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(logicalRouterId, neighborId, perTransportNodeRoutes, neighborAddress);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BgpNeighborRouteDetails {\n");
    
    sb.append("    logicalRouterId: ").append(toIndentedString(logicalRouterId)).append("\n");
    sb.append("    neighborId: ").append(toIndentedString(neighborId)).append("\n");
    sb.append("    perTransportNodeRoutes: ").append(toIndentedString(perTransportNodeRoutes)).append("\n");
    sb.append("    neighborAddress: ").append(toIndentedString(neighborAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
