/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BgpNeighborAddressFamily
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class BgpNeighborAddressFamily {
  @SerializedName("in_filter_ipprefixlist_id")
  private String inFilterIpprefixlistId = null;

  @SerializedName("out_filter_routemap_id")
  private String outFilterRoutemapId = null;

  /**
   * Address family type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    IPV4_UNICAST("IPV4_UNICAST"),
    VPNV4_UNICAST("VPNV4_UNICAST"),
    IPV6_UNICAST("IPV6_UNICAST");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("in_filter_routemap_id")
  private String inFilterRoutemapId = null;

  @SerializedName("enabled")
  private Boolean enabled = true;

  @SerializedName("out_filter_ipprefixlist_id")
  private String outFilterIpprefixlistId = null;

  public BgpNeighborAddressFamily inFilterIpprefixlistId(String inFilterIpprefixlistId) {
    this.inFilterIpprefixlistId = inFilterIpprefixlistId;
    return this;
  }

   /**
   * Id of the IPPrefix List to be used for IN direction filter
   * @return inFilterIpprefixlistId
  **/
  @Schema(description = "Id of the IPPrefix List to be used for IN direction filter")
  public String getInFilterIpprefixlistId() {
    return inFilterIpprefixlistId;
  }

  public void setInFilterIpprefixlistId(String inFilterIpprefixlistId) {
    this.inFilterIpprefixlistId = inFilterIpprefixlistId;
  }

  public BgpNeighborAddressFamily outFilterRoutemapId(String outFilterRoutemapId) {
    this.outFilterRoutemapId = outFilterRoutemapId;
    return this;
  }

   /**
   * Id of the RouteMap to be used for OUT direction filter
   * @return outFilterRoutemapId
  **/
  @Schema(description = "Id of the RouteMap to be used for OUT direction filter")
  public String getOutFilterRoutemapId() {
    return outFilterRoutemapId;
  }

  public void setOutFilterRoutemapId(String outFilterRoutemapId) {
    this.outFilterRoutemapId = outFilterRoutemapId;
  }

  public BgpNeighborAddressFamily type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Address family type
   * @return type
  **/
  @Schema(required = true, description = "Address family type")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public BgpNeighborAddressFamily inFilterRoutemapId(String inFilterRoutemapId) {
    this.inFilterRoutemapId = inFilterRoutemapId;
    return this;
  }

   /**
   * Id of the RouteMap to be used for IN direction filter
   * @return inFilterRoutemapId
  **/
  @Schema(description = "Id of the RouteMap to be used for IN direction filter")
  public String getInFilterRoutemapId() {
    return inFilterRoutemapId;
  }

  public void setInFilterRoutemapId(String inFilterRoutemapId) {
    this.inFilterRoutemapId = inFilterRoutemapId;
  }

  public BgpNeighborAddressFamily enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Enable this address family
   * @return enabled
  **/
  @Schema(description = "Enable this address family")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public BgpNeighborAddressFamily outFilterIpprefixlistId(String outFilterIpprefixlistId) {
    this.outFilterIpprefixlistId = outFilterIpprefixlistId;
    return this;
  }

   /**
   * Id of the IPPrefixList to be used for OUT direction filter
   * @return outFilterIpprefixlistId
  **/
  @Schema(description = "Id of the IPPrefixList to be used for OUT direction filter")
  public String getOutFilterIpprefixlistId() {
    return outFilterIpprefixlistId;
  }

  public void setOutFilterIpprefixlistId(String outFilterIpprefixlistId) {
    this.outFilterIpprefixlistId = outFilterIpprefixlistId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BgpNeighborAddressFamily bgpNeighborAddressFamily = (BgpNeighborAddressFamily) o;
    return Objects.equals(this.inFilterIpprefixlistId, bgpNeighborAddressFamily.inFilterIpprefixlistId) &&
        Objects.equals(this.outFilterRoutemapId, bgpNeighborAddressFamily.outFilterRoutemapId) &&
        Objects.equals(this.type, bgpNeighborAddressFamily.type) &&
        Objects.equals(this.inFilterRoutemapId, bgpNeighborAddressFamily.inFilterRoutemapId) &&
        Objects.equals(this.enabled, bgpNeighborAddressFamily.enabled) &&
        Objects.equals(this.outFilterIpprefixlistId, bgpNeighborAddressFamily.outFilterIpprefixlistId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inFilterIpprefixlistId, outFilterRoutemapId, type, inFilterRoutemapId, enabled, outFilterIpprefixlistId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BgpNeighborAddressFamily {\n");
    
    sb.append("    inFilterIpprefixlistId: ").append(toIndentedString(inFilterIpprefixlistId)).append("\n");
    sb.append("    outFilterRoutemapId: ").append(toIndentedString(outFilterRoutemapId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    inFilterRoutemapId: ").append(toIndentedString(inFilterRoutemapId)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    outFilterIpprefixlistId: ").append(toIndentedString(outFilterIpprefixlistId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
