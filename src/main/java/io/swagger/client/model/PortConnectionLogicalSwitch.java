/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.LogicalPort;
import io.swagger.client.model.LogicalPortState;
import io.swagger.client.model.ManagedResource;
import io.swagger.client.model.PortConnectionEntity;
import io.swagger.client.model.VirtualNetworkInterface;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Port Connection Logical Switch Entity
 */
@Schema(description = "Port Connection Logical Switch Entity")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class PortConnectionLogicalSwitch extends PortConnectionEntity {
  @SerializedName("vm_ports_states")
  private List<LogicalPortState> vmPortsStates = null;

  @SerializedName("vm_ports")
  private List<LogicalPort> vmPorts = null;

  @SerializedName("vm_vnics")
  private List<VirtualNetworkInterface> vmVnics = null;

  @SerializedName("router_ports")
  private List<LogicalPort> routerPorts = null;

   /**
   * States of Logical Ports that are attached to a VIF/VM
   * @return vmPortsStates
  **/
  @Schema(description = "States of Logical Ports that are attached to a VIF/VM")
  public List<LogicalPortState> getVmPortsStates() {
    return vmPortsStates;
  }

   /**
   * Logical Ports that are attached to a VIF/VM
   * @return vmPorts
  **/
  @Schema(description = "Logical Ports that are attached to a VIF/VM")
  public List<LogicalPort> getVmPorts() {
    return vmPorts;
  }

   /**
   * Virutal Network Interfaces that are attached to the Logical Ports
   * @return vmVnics
  **/
  @Schema(description = "Virutal Network Interfaces that are attached to the Logical Ports")
  public List<VirtualNetworkInterface> getVmVnics() {
    return vmVnics;
  }

   /**
   * Logical Ports that are attached to a router
   * @return routerPorts
  **/
  @Schema(description = "Logical Ports that are attached to a router")
  public List<LogicalPort> getRouterPorts() {
    return routerPorts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PortConnectionLogicalSwitch portConnectionLogicalSwitch = (PortConnectionLogicalSwitch) o;
    return Objects.equals(this.vmPortsStates, portConnectionLogicalSwitch.vmPortsStates) &&
        Objects.equals(this.vmPorts, portConnectionLogicalSwitch.vmPorts) &&
        Objects.equals(this.vmVnics, portConnectionLogicalSwitch.vmVnics) &&
        Objects.equals(this.routerPorts, portConnectionLogicalSwitch.routerPorts) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vmPortsStates, vmPorts, vmVnics, routerPorts, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PortConnectionLogicalSwitch {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    vmPortsStates: ").append(toIndentedString(vmPortsStates)).append("\n");
    sb.append("    vmPorts: ").append(toIndentedString(vmPorts)).append("\n");
    sb.append("    vmVnics: ").append(toIndentedString(vmVnics)).append("\n");
    sb.append("    routerPorts: ").append(toIndentedString(routerPorts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
