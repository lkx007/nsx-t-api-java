/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ManagedResource;
import io.swagger.client.model.NSGroupExpression;
import io.swagger.client.model.NSGroupSimpleExpression;
import io.swagger.client.model.Tag;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * NSGroups are recursive groupings of different NSX elements (logical and physical), typically used in policy definitions.
 */
@Schema(description = "NSGroups are recursive groupings of different NSX elements (logical and physical), typically used in policy definitions.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class NSGroup extends ManagedResource {
  @SerializedName("member_count")
  private Long memberCount = null;

  @SerializedName("members")
  private List<NSGroupSimpleExpression> members = null;

  @SerializedName("membership_criteria")
  private List<NSGroupExpression> membershipCriteria = null;

   /**
   * Count of the members added to this NSGroup
   * @return memberCount
  **/
  @Schema(description = "Count of the members added to this NSGroup")
  public Long getMemberCount() {
    return memberCount;
  }

  public NSGroup members(List<NSGroupSimpleExpression> members) {
    this.members = members;
    return this;
  }

  public NSGroup addMembersItem(NSGroupSimpleExpression membersItem) {
    if (this.members == null) {
      this.members = new ArrayList<NSGroupSimpleExpression>();
    }
    this.members.add(membersItem);
    return this;
  }

   /**
   * Reference to the direct/static members of the NSGroup. Can be ID based expressions only. VirtualMachine cannot be added as a static member. 
   * @return members
  **/
  @Schema(description = "Reference to the direct/static members of the NSGroup. Can be ID based expressions only. VirtualMachine cannot be added as a static member. ")
  public List<NSGroupSimpleExpression> getMembers() {
    return members;
  }

  public void setMembers(List<NSGroupSimpleExpression> members) {
    this.members = members;
  }

  public NSGroup membershipCriteria(List<NSGroupExpression> membershipCriteria) {
    this.membershipCriteria = membershipCriteria;
    return this;
  }

  public NSGroup addMembershipCriteriaItem(NSGroupExpression membershipCriteriaItem) {
    if (this.membershipCriteria == null) {
      this.membershipCriteria = new ArrayList<NSGroupExpression>();
    }
    this.membershipCriteria.add(membershipCriteriaItem);
    return this;
  }

   /**
   * List of tag or name based expressions which define the dynamic membership criteria for this NSGroup. An object must satisfy atleast one of these expressions to qualify as a member of this group. It is not recommended to use ID based expressions in this section. ID based expression should be used in \&quot;members\&quot; section 
   * @return membershipCriteria
  **/
  @Schema(description = "List of tag or name based expressions which define the dynamic membership criteria for this NSGroup. An object must satisfy atleast one of these expressions to qualify as a member of this group. It is not recommended to use ID based expressions in this section. ID based expression should be used in \"members\" section ")
  public List<NSGroupExpression> getMembershipCriteria() {
    return membershipCriteria;
  }

  public void setMembershipCriteria(List<NSGroupExpression> membershipCriteria) {
    this.membershipCriteria = membershipCriteria;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NSGroup nsGroup = (NSGroup) o;
    return Objects.equals(this.memberCount, nsGroup.memberCount) &&
        Objects.equals(this.members, nsGroup.members) &&
        Objects.equals(this.membershipCriteria, nsGroup.membershipCriteria) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(memberCount, members, membershipCriteria, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NSGroup {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    memberCount: ").append(toIndentedString(memberCount)).append("\n");
    sb.append("    members: ").append(toIndentedString(members)).append("\n");
    sb.append("    membershipCriteria: ").append(toIndentedString(membershipCriteria)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
