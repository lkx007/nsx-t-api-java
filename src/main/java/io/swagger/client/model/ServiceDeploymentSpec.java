/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.DeploymentTemplate;
import io.swagger.client.model.NicMetadata;
import io.swagger.client.model.SVMDeploymentSpec;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ServiceDeployment Spec consists of information required to deploy and configure the partner appliances. viz. Deployment template, deployment spec and NIC metatdata.
 */
@Schema(description = "ServiceDeployment Spec consists of information required to deploy and configure the partner appliances. viz. Deployment template, deployment spec and NIC metatdata.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class ServiceDeploymentSpec {
  @SerializedName("deployment_specs")
  private List<SVMDeploymentSpec> deploymentSpecs = null;

  @SerializedName("nic_metadata_list")
  private List<NicMetadata> nicMetadataList = null;

  @SerializedName("deployment_template")
  private List<DeploymentTemplate> deploymentTemplate = new ArrayList<DeploymentTemplate>();

  @SerializedName("svm_version")
  private String svmVersion = null;

  public ServiceDeploymentSpec deploymentSpecs(List<SVMDeploymentSpec> deploymentSpecs) {
    this.deploymentSpecs = deploymentSpecs;
    return this;
  }

  public ServiceDeploymentSpec addDeploymentSpecsItem(SVMDeploymentSpec deploymentSpecsItem) {
    if (this.deploymentSpecs == null) {
      this.deploymentSpecs = new ArrayList<SVMDeploymentSpec>();
    }
    this.deploymentSpecs.add(deploymentSpecsItem);
    return this;
  }

   /**
   * Deployment Specs holds information required to deploy the Service-VMs. i.e. OVF url where the partner Service-VM OVF is hosted. The host type on which the OVF can be deployed, Form factor to name a few.
   * @return deploymentSpecs
  **/
  @Schema(description = "Deployment Specs holds information required to deploy the Service-VMs. i.e. OVF url where the partner Service-VM OVF is hosted. The host type on which the OVF can be deployed, Form factor to name a few.")
  public List<SVMDeploymentSpec> getDeploymentSpecs() {
    return deploymentSpecs;
  }

  public void setDeploymentSpecs(List<SVMDeploymentSpec> deploymentSpecs) {
    this.deploymentSpecs = deploymentSpecs;
  }

  public ServiceDeploymentSpec nicMetadataList(List<NicMetadata> nicMetadataList) {
    this.nicMetadataList = nicMetadataList;
    return this;
  }

  public ServiceDeploymentSpec addNicMetadataListItem(NicMetadata nicMetadataListItem) {
    if (this.nicMetadataList == null) {
      this.nicMetadataList = new ArrayList<NicMetadata>();
    }
    this.nicMetadataList.add(nicMetadataListItem);
    return this;
  }

   /**
   * NIC metadata associated with the deployment spec.
   * @return nicMetadataList
  **/
  @Schema(description = "NIC metadata associated with the deployment spec.")
  public List<NicMetadata> getNicMetadataList() {
    return nicMetadataList;
  }

  public void setNicMetadataList(List<NicMetadata> nicMetadataList) {
    this.nicMetadataList = nicMetadataList;
  }

  public ServiceDeploymentSpec deploymentTemplate(List<DeploymentTemplate> deploymentTemplate) {
    this.deploymentTemplate = deploymentTemplate;
    return this;
  }

  public ServiceDeploymentSpec addDeploymentTemplateItem(DeploymentTemplate deploymentTemplateItem) {
    this.deploymentTemplate.add(deploymentTemplateItem);
    return this;
  }

   /**
   * Deployment Template holds the attributes specific to partner for which the service is created. These attributes are opaque to NSX Manager.
   * @return deploymentTemplate
  **/
  @Schema(required = true, description = "Deployment Template holds the attributes specific to partner for which the service is created. These attributes are opaque to NSX Manager.")
  public List<DeploymentTemplate> getDeploymentTemplate() {
    return deploymentTemplate;
  }

  public void setDeploymentTemplate(List<DeploymentTemplate> deploymentTemplate) {
    this.deploymentTemplate = deploymentTemplate;
  }

  public ServiceDeploymentSpec svmVersion(String svmVersion) {
    this.svmVersion = svmVersion;
    return this;
  }

   /**
   * Partner needs to specify the Service VM version which will get deployed. Modification of this field would notify administrators that new upgrade is available.
   * @return svmVersion
  **/
  @Schema(description = "Partner needs to specify the Service VM version which will get deployed. Modification of this field would notify administrators that new upgrade is available.")
  public String getSvmVersion() {
    return svmVersion;
  }

  public void setSvmVersion(String svmVersion) {
    this.svmVersion = svmVersion;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceDeploymentSpec serviceDeploymentSpec = (ServiceDeploymentSpec) o;
    return Objects.equals(this.deploymentSpecs, serviceDeploymentSpec.deploymentSpecs) &&
        Objects.equals(this.nicMetadataList, serviceDeploymentSpec.nicMetadataList) &&
        Objects.equals(this.deploymentTemplate, serviceDeploymentSpec.deploymentTemplate) &&
        Objects.equals(this.svmVersion, serviceDeploymentSpec.svmVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deploymentSpecs, nicMetadataList, deploymentTemplate, svmVersion);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceDeploymentSpec {\n");
    
    sb.append("    deploymentSpecs: ").append(toIndentedString(deploymentSpecs)).append("\n");
    sb.append("    nicMetadataList: ").append(toIndentedString(nicMetadataList)).append("\n");
    sb.append("    deploymentTemplate: ").append(toIndentedString(deploymentTemplate)).append("\n");
    sb.append("    svmVersion: ").append(toIndentedString(svmVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
