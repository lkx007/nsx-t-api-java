/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.TransportZoneProfile;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Profile for BFD health monitoring
 */
@Schema(description = "Profile for BFD health monitoring")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class BfdHealthMonitoringProfile extends TransportZoneProfile {
  @SerializedName("probe_interval")
  private Long probeInterval = 1000l;

  @SerializedName("latency_enabled")
  private Boolean latencyEnabled = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  public BfdHealthMonitoringProfile probeInterval(Long probeInterval) {
    this.probeInterval = probeInterval;
    return this;
  }

   /**
   * The time interval (in millisec) between probe packets for tunnels between transport nodes.
   * minimum: 300
   * @return probeInterval
  **/
  @Schema(description = "The time interval (in millisec) between probe packets for tunnels between transport nodes.")
  public Long getProbeInterval() {
    return probeInterval;
  }

  public void setProbeInterval(Long probeInterval) {
    this.probeInterval = probeInterval;
  }

  public BfdHealthMonitoringProfile latencyEnabled(Boolean latencyEnabled) {
    this.latencyEnabled = latencyEnabled;
    return this;
  }

   /**
   * The flag is to turn on/off latency. A POST or PUT request with \&quot;latency_enabled\&quot; true will enable NSX to send the networking latency data to thrid-party monitoring tools like vRNI.
   * @return latencyEnabled
  **/
  @Schema(description = "The flag is to turn on/off latency. A POST or PUT request with \"latency_enabled\" true will enable NSX to send the networking latency data to thrid-party monitoring tools like vRNI.")
  public Boolean isLatencyEnabled() {
    return latencyEnabled;
  }

  public void setLatencyEnabled(Boolean latencyEnabled) {
    this.latencyEnabled = latencyEnabled;
  }

  public BfdHealthMonitoringProfile enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Whether the heartbeat is enabled. A POST or PUT request with \&quot;enabled\&quot; false (with no probe intervals) will set (POST) or reset (PUT) the probe_interval to their default value.
   * @return enabled
  **/
  @Schema(required = true, description = "Whether the heartbeat is enabled. A POST or PUT request with \"enabled\" false (with no probe intervals) will set (POST) or reset (PUT) the probe_interval to their default value.")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BfdHealthMonitoringProfile bfdHealthMonitoringProfile = (BfdHealthMonitoringProfile) o;
    return Objects.equals(this.probeInterval, bfdHealthMonitoringProfile.probeInterval) &&
        Objects.equals(this.latencyEnabled, bfdHealthMonitoringProfile.latencyEnabled) &&
        Objects.equals(this.enabled, bfdHealthMonitoringProfile.enabled) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(probeInterval, latencyEnabled, enabled, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BfdHealthMonitoringProfile {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    probeInterval: ").append(toIndentedString(probeInterval)).append("\n");
    sb.append("    latencyEnabled: ").append(toIndentedString(latencyEnabled)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
