/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * An IP prefix to mark the private network that NSX-Intelligence network flow is collected from. 
 */
@Schema(description = "An IP prefix to mark the private network that NSX-Intelligence network flow is collected from. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class IntelligenceFlowPrivateIpPrefixInfo {
  /**
   * The type of IP address. 
   */
  @JsonAdapter(AddressTypeEnum.Adapter.class)
  public enum AddressTypeEnum {
    IPV4("IPV4"),
    IPV6("IPV6");

    private String value;

    AddressTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static AddressTypeEnum fromValue(String text) {
      for (AddressTypeEnum b : AddressTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<AddressTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AddressTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AddressTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AddressTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("address_type")
  private AddressTypeEnum addressType = null;

  @SerializedName("prefix_length")
  private Long prefixLength = null;

  @SerializedName("address")
  private String address = null;

  public IntelligenceFlowPrivateIpPrefixInfo addressType(AddressTypeEnum addressType) {
    this.addressType = addressType;
    return this;
  }

   /**
   * The type of IP address. 
   * @return addressType
  **/
  @Schema(required = true, description = "The type of IP address. ")
  public AddressTypeEnum getAddressType() {
    return addressType;
  }

  public void setAddressType(AddressTypeEnum addressType) {
    this.addressType = addressType;
  }

  public IntelligenceFlowPrivateIpPrefixInfo prefixLength(Long prefixLength) {
    this.prefixLength = prefixLength;
    return this;
  }

   /**
   * The length of IP address prefix that marks the range of private network. 
   * minimum: 1
   * maximum: 128
   * @return prefixLength
  **/
  @Schema(required = true, description = "The length of IP address prefix that marks the range of private network. ")
  public Long getPrefixLength() {
    return prefixLength;
  }

  public void setPrefixLength(Long prefixLength) {
    this.prefixLength = prefixLength;
  }

  public IntelligenceFlowPrivateIpPrefixInfo address(String address) {
    this.address = address;
    return this;
  }

   /**
   * The prefix of IP address that marks the range of private network. 
   * @return address
  **/
  @Schema(required = true, description = "The prefix of IP address that marks the range of private network. ")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntelligenceFlowPrivateIpPrefixInfo intelligenceFlowPrivateIpPrefixInfo = (IntelligenceFlowPrivateIpPrefixInfo) o;
    return Objects.equals(this.addressType, intelligenceFlowPrivateIpPrefixInfo.addressType) &&
        Objects.equals(this.prefixLength, intelligenceFlowPrivateIpPrefixInfo.prefixLength) &&
        Objects.equals(this.address, intelligenceFlowPrivateIpPrefixInfo.address);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressType, prefixLength, address);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntelligenceFlowPrivateIpPrefixInfo {\n");
    
    sb.append("    addressType: ").append(toIndentedString(addressType)).append("\n");
    sb.append("    prefixLength: ").append(toIndentedString(prefixLength)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
