/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ListResult;
import io.swagger.client.model.LogicalRouterRouteEntry;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * LogicalRouterRouteTable
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class LogicalRouterRouteTable extends ListResult {
  @SerializedName("logical_router_name")
  private String logicalRouterName = null;

  @SerializedName("last_update_timestamp")
  private Long lastUpdateTimestamp = null;

  @SerializedName("logical_router_id")
  private String logicalRouterId = null;

  @SerializedName("results")
  private List<LogicalRouterRouteEntry> results = null;

   /**
   * Name of the logical router
   * @return logicalRouterName
  **/
  @Schema(description = "Name of the logical router")
  public String getLogicalRouterName() {
    return logicalRouterName;
  }

   /**
   * Timestamp when the data was last updated; unset if data source has never updated the data.
   * @return lastUpdateTimestamp
  **/
  @Schema(description = "Timestamp when the data was last updated; unset if data source has never updated the data.")
  public Long getLastUpdateTimestamp() {
    return lastUpdateTimestamp;
  }

  public LogicalRouterRouteTable logicalRouterId(String logicalRouterId) {
    this.logicalRouterId = logicalRouterId;
    return this;
  }

   /**
   * The id of the logical router
   * @return logicalRouterId
  **/
  @Schema(required = true, description = "The id of the logical router")
  public String getLogicalRouterId() {
    return logicalRouterId;
  }

  public void setLogicalRouterId(String logicalRouterId) {
    this.logicalRouterId = logicalRouterId;
  }

  public LogicalRouterRouteTable results(List<LogicalRouterRouteEntry> results) {
    this.results = results;
    return this;
  }

  public LogicalRouterRouteTable addResultsItem(LogicalRouterRouteEntry resultsItem) {
    if (this.results == null) {
      this.results = new ArrayList<LogicalRouterRouteEntry>();
    }
    this.results.add(resultsItem);
    return this;
  }

   /**
   * Get results
   * @return results
  **/
  @Schema(description = "")
  public List<LogicalRouterRouteEntry> getResults() {
    return results;
  }

  public void setResults(List<LogicalRouterRouteEntry> results) {
    this.results = results;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LogicalRouterRouteTable logicalRouterRouteTable = (LogicalRouterRouteTable) o;
    return Objects.equals(this.logicalRouterName, logicalRouterRouteTable.logicalRouterName) &&
        Objects.equals(this.lastUpdateTimestamp, logicalRouterRouteTable.lastUpdateTimestamp) &&
        Objects.equals(this.logicalRouterId, logicalRouterRouteTable.logicalRouterId) &&
        Objects.equals(this.results, logicalRouterRouteTable.results) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(logicalRouterName, lastUpdateTimestamp, logicalRouterId, results, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LogicalRouterRouteTable {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    logicalRouterName: ").append(toIndentedString(logicalRouterName)).append("\n");
    sb.append("    lastUpdateTimestamp: ").append(toIndentedString(lastUpdateTimestamp)).append("\n");
    sb.append("    logicalRouterId: ").append(toIndentedString(logicalRouterId)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
