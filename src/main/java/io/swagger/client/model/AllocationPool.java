/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.SubPool;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * AllocationPool
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class AllocationPool {
  @SerializedName("standby_service_count")
  private Integer standbyServiceCount = null;

  @SerializedName("active_service_count")
  private Integer activeServiceCount = null;

  @SerializedName("sub_pools")
  private List<SubPool> subPools = null;

   /**
   * Represents the number of standby services running on the edge node. 
   * @return standbyServiceCount
  **/
  @Schema(description = "Represents the number of standby services running on the edge node. ")
  public Integer getStandbyServiceCount() {
    return standbyServiceCount;
  }

   /**
   * Represents the number of acitve services running on the edge node. 
   * @return activeServiceCount
  **/
  @Schema(description = "Represents the number of acitve services running on the edge node. ")
  public Integer getActiveServiceCount() {
    return activeServiceCount;
  }

  public AllocationPool subPools(List<SubPool> subPools) {
    this.subPools = subPools;
    return this;
  }

  public AllocationPool addSubPoolsItem(SubPool subPoolsItem) {
    if (this.subPools == null) {
      this.subPools = new ArrayList<SubPool>();
    }
    this.subPools.add(subPoolsItem);
    return this;
  }

   /**
   * Allocation details of sub-pools configured on edge node.
   * @return subPools
  **/
  @Schema(description = "Allocation details of sub-pools configured on edge node.")
  public List<SubPool> getSubPools() {
    return subPools;
  }

  public void setSubPools(List<SubPool> subPools) {
    this.subPools = subPools;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AllocationPool allocationPool = (AllocationPool) o;
    return Objects.equals(this.standbyServiceCount, allocationPool.standbyServiceCount) &&
        Objects.equals(this.activeServiceCount, allocationPool.activeServiceCount) &&
        Objects.equals(this.subPools, allocationPool.subPools);
  }

  @Override
  public int hashCode() {
    return Objects.hash(standbyServiceCount, activeServiceCount, subPools);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AllocationPool {\n");
    
    sb.append("    standbyServiceCount: ").append(toIndentedString(standbyServiceCount)).append("\n");
    sb.append("    activeServiceCount: ").append(toIndentedString(activeServiceCount)).append("\n");
    sb.append("    subPools: ").append(toIndentedString(subPools)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
