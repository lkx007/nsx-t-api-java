/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ResourceReference;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Entity lists where the profile will be enabled on. 
 */
@Schema(description = "Entity lists where the profile will be enabled on. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class AppliedTos {
  @SerializedName("logical_ports")
  private List<ResourceReference> logicalPorts = null;

  @SerializedName("logical_switches")
  private List<ResourceReference> logicalSwitches = null;

  @SerializedName("nsgroups")
  private List<ResourceReference> nsgroups = null;

  public AppliedTos logicalPorts(List<ResourceReference> logicalPorts) {
    this.logicalPorts = logicalPorts;
    return this;
  }

  public AppliedTos addLogicalPortsItem(ResourceReference logicalPortsItem) {
    if (this.logicalPorts == null) {
      this.logicalPorts = new ArrayList<ResourceReference>();
    }
    this.logicalPorts.add(logicalPortsItem);
    return this;
  }

   /**
   * Logical Port List
   * @return logicalPorts
  **/
  @Schema(description = "Logical Port List")
  public List<ResourceReference> getLogicalPorts() {
    return logicalPorts;
  }

  public void setLogicalPorts(List<ResourceReference> logicalPorts) {
    this.logicalPorts = logicalPorts;
  }

  public AppliedTos logicalSwitches(List<ResourceReference> logicalSwitches) {
    this.logicalSwitches = logicalSwitches;
    return this;
  }

  public AppliedTos addLogicalSwitchesItem(ResourceReference logicalSwitchesItem) {
    if (this.logicalSwitches == null) {
      this.logicalSwitches = new ArrayList<ResourceReference>();
    }
    this.logicalSwitches.add(logicalSwitchesItem);
    return this;
  }

   /**
   * Logical Switch List
   * @return logicalSwitches
  **/
  @Schema(description = "Logical Switch List")
  public List<ResourceReference> getLogicalSwitches() {
    return logicalSwitches;
  }

  public void setLogicalSwitches(List<ResourceReference> logicalSwitches) {
    this.logicalSwitches = logicalSwitches;
  }

  public AppliedTos nsgroups(List<ResourceReference> nsgroups) {
    this.nsgroups = nsgroups;
    return this;
  }

  public AppliedTos addNsgroupsItem(ResourceReference nsgroupsItem) {
    if (this.nsgroups == null) {
      this.nsgroups = new ArrayList<ResourceReference>();
    }
    this.nsgroups.add(nsgroupsItem);
    return this;
  }

   /**
   * NSGroup List
   * @return nsgroups
  **/
  @Schema(description = "NSGroup List")
  public List<ResourceReference> getNsgroups() {
    return nsgroups;
  }

  public void setNsgroups(List<ResourceReference> nsgroups) {
    this.nsgroups = nsgroups;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppliedTos appliedTos = (AppliedTos) o;
    return Objects.equals(this.logicalPorts, appliedTos.logicalPorts) &&
        Objects.equals(this.logicalSwitches, appliedTos.logicalSwitches) &&
        Objects.equals(this.nsgroups, appliedTos.nsgroups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(logicalPorts, logicalSwitches, nsgroups);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppliedTos {\n");
    
    sb.append("    logicalPorts: ").append(toIndentedString(logicalPorts)).append("\n");
    sb.append("    logicalSwitches: ").append(toIndentedString(logicalSwitches)).append("\n");
    sb.append("    nsgroups: ").append(toIndentedString(nsgroups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
