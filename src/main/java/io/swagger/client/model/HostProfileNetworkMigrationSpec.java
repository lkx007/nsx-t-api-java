/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.NetworkMigrationSpec;
import io.swagger.client.model.VmkToLogicalSwitchMapping;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * This specification should be used to define which VMK adapters need to be migrated to NSX logical switches from VC network switches. Migrations specified here should match with those from associated Host Profiles from VC. Mismatch will result in migration failures. This specification only supports migration vmkernal adapters to NSX logical switches. Note- transport node templates APIs are deprecated and user is recommended to use transport node profiles APIs instead. 
 */
@Schema(description = "This specification should be used to define which VMK adapters need to be migrated to NSX logical switches from VC network switches. Migrations specified here should match with those from associated Host Profiles from VC. Mismatch will result in migration failures. This specification only supports migration vmkernal adapters to NSX logical switches. Note- transport node templates APIs are deprecated and user is recommended to use transport node profiles APIs instead. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class HostProfileNetworkMigrationSpec extends NetworkMigrationSpec {
  @SerializedName("network_mappings")
  private List<VmkToLogicalSwitchMapping> networkMappings = null;

  public HostProfileNetworkMigrationSpec networkMappings(List<VmkToLogicalSwitchMapping> networkMappings) {
    this.networkMappings = networkMappings;
    return this;
  }

  public HostProfileNetworkMigrationSpec addNetworkMappingsItem(VmkToLogicalSwitchMapping networkMappingsItem) {
    if (this.networkMappings == null) {
      this.networkMappings = new ArrayList<VmkToLogicalSwitchMapping>();
    }
    this.networkMappings.add(networkMappingsItem);
    return this;
  }

   /**
   * Based on provided mappings, VMkernal adapters will be migrated to mentioned logical switch. Without mappings specification doesn&#x27;t make any sense, hence minium one mapping should be specified. Assuming some sane value of 10 maximum migrations which will be supported by any single specification. 
   * @return networkMappings
  **/
  @Schema(description = "Based on provided mappings, VMkernal adapters will be migrated to mentioned logical switch. Without mappings specification doesn't make any sense, hence minium one mapping should be specified. Assuming some sane value of 10 maximum migrations which will be supported by any single specification. ")
  public List<VmkToLogicalSwitchMapping> getNetworkMappings() {
    return networkMappings;
  }

  public void setNetworkMappings(List<VmkToLogicalSwitchMapping> networkMappings) {
    this.networkMappings = networkMappings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HostProfileNetworkMigrationSpec hostProfileNetworkMigrationSpec = (HostProfileNetworkMigrationSpec) o;
    return Objects.equals(this.networkMappings, hostProfileNetworkMigrationSpec.networkMappings) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(networkMappings, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HostProfileNetworkMigrationSpec {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    networkMappings: ").append(toIndentedString(networkMappings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
