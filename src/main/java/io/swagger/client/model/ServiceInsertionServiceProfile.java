/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Attribute;
import io.swagger.client.model.BaseServiceProfile;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Service profile represents a specialization of vendor template.
 */
@Schema(description = "Service profile represents a specialization of vendor template.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class ServiceInsertionServiceProfile extends BaseServiceProfile {
  @SerializedName("attributes")
  private List<Attribute> attributes = null;

  @SerializedName("service_id")
  private String serviceId = null;

  /**
   * The redirection action represents if the packet is exclusively redirected to the service, or if a copy is forwarded to the service. The service insertion profile inherits the redirection action if already specified at the vendor template. However the service profile cannot overide the action specified at the vendor template.
   */
  @JsonAdapter(RedirectionActionEnum.Adapter.class)
  public enum RedirectionActionEnum {
    PUNT("PUNT"),
    COPY("COPY");

    private String value;

    RedirectionActionEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static RedirectionActionEnum fromValue(String text) {
      for (RedirectionActionEnum b : RedirectionActionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<RedirectionActionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RedirectionActionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RedirectionActionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RedirectionActionEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("redirection_action")
  private RedirectionActionEnum redirectionAction = RedirectionActionEnum.PUNT;

  @SerializedName("vendor_template_id")
  private String vendorTemplateId = null;

  public ServiceInsertionServiceProfile attributes(List<Attribute> attributes) {
    this.attributes = attributes;
    return this;
  }

  public ServiceInsertionServiceProfile addAttributesItem(Attribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<Attribute>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * List of attributes specific to a partner for which the service is created. These attributes are passed on to the partner appliance and are opaque to the NSX Manager. If a vendor template exposes configurables, then the values are specified here.
   * @return attributes
  **/
  @Schema(description = "List of attributes specific to a partner for which the service is created. These attributes are passed on to the partner appliance and are opaque to the NSX Manager. If a vendor template exposes configurables, then the values are specified here.")
  public List<Attribute> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<Attribute> attributes) {
    this.attributes = attributes;
  }

   /**
   * The service to which the service profile belongs.
   * @return serviceId
  **/
  @Schema(description = "The service to which the service profile belongs.")
  public String getServiceId() {
    return serviceId;
  }

  public ServiceInsertionServiceProfile redirectionAction(RedirectionActionEnum redirectionAction) {
    this.redirectionAction = redirectionAction;
    return this;
  }

   /**
   * The redirection action represents if the packet is exclusively redirected to the service, or if a copy is forwarded to the service. The service insertion profile inherits the redirection action if already specified at the vendor template. However the service profile cannot overide the action specified at the vendor template.
   * @return redirectionAction
  **/
  @Schema(description = "The redirection action represents if the packet is exclusively redirected to the service, or if a copy is forwarded to the service. The service insertion profile inherits the redirection action if already specified at the vendor template. However the service profile cannot overide the action specified at the vendor template.")
  public RedirectionActionEnum getRedirectionAction() {
    return redirectionAction;
  }

  public void setRedirectionAction(RedirectionActionEnum redirectionAction) {
    this.redirectionAction = redirectionAction;
  }

  public ServiceInsertionServiceProfile vendorTemplateId(String vendorTemplateId) {
    this.vendorTemplateId = vendorTemplateId;
    return this;
  }

   /**
   * Id of the vendor template to be used by the servive profile.
   * @return vendorTemplateId
  **/
  @Schema(required = true, description = "Id of the vendor template to be used by the servive profile.")
  public String getVendorTemplateId() {
    return vendorTemplateId;
  }

  public void setVendorTemplateId(String vendorTemplateId) {
    this.vendorTemplateId = vendorTemplateId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceInsertionServiceProfile serviceInsertionServiceProfile = (ServiceInsertionServiceProfile) o;
    return Objects.equals(this.attributes, serviceInsertionServiceProfile.attributes) &&
        Objects.equals(this.serviceId, serviceInsertionServiceProfile.serviceId) &&
        Objects.equals(this.redirectionAction, serviceInsertionServiceProfile.redirectionAction) &&
        Objects.equals(this.vendorTemplateId, serviceInsertionServiceProfile.vendorTemplateId) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, serviceId, redirectionAction, vendorTemplateId, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceInsertionServiceProfile {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
    sb.append("    redirectionAction: ").append(toIndentedString(redirectionAction)).append("\n");
    sb.append("    vendorTemplateId: ").append(toIndentedString(vendorTemplateId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
