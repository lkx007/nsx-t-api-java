/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * The node count for specific load balancer usage severity. 
 */
@Schema(description = "The node count for specific load balancer usage severity. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class LbNodeCountPerSeverity {
  @SerializedName("node_count")
  private Long nodeCount = null;

  /**
   * The severity calculation is based on credit usage percentage of load balancer for one node. 
   */
  @JsonAdapter(SeverityEnum.Adapter.class)
  public enum SeverityEnum {
    GREEN("GREEN"),
    ORANGE("ORANGE"),
    RED("RED");

    private String value;

    SeverityEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SeverityEnum fromValue(String text) {
      for (SeverityEnum b : SeverityEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SeverityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SeverityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SeverityEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SeverityEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("severity")
  private SeverityEnum severity = null;

   /**
   * Node count for specific serverity. 
   * @return nodeCount
  **/
  @Schema(description = "Node count for specific serverity. ")
  public Long getNodeCount() {
    return nodeCount;
  }

   /**
   * The severity calculation is based on credit usage percentage of load balancer for one node. 
   * @return severity
  **/
  @Schema(description = "The severity calculation is based on credit usage percentage of load balancer for one node. ")
  public SeverityEnum getSeverity() {
    return severity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LbNodeCountPerSeverity lbNodeCountPerSeverity = (LbNodeCountPerSeverity) o;
    return Objects.equals(this.nodeCount, lbNodeCountPerSeverity.nodeCount) &&
        Objects.equals(this.severity, lbNodeCountPerSeverity.severity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nodeCount, severity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LbNodeCountPerSeverity {\n");
    
    sb.append("    nodeCount: ").append(toIndentedString(nodeCount)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
