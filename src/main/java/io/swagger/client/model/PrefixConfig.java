/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * PrefixConfig
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class PrefixConfig {
  /**
   * Action for the IPPrefix
   */
  @JsonAdapter(ActionEnum.Adapter.class)
  public enum ActionEnum {
    PERMIT("PERMIT"),
    DENY("DENY");

    private String value;

    ActionEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ActionEnum fromValue(String text) {
      for (ActionEnum b : ActionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ActionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ActionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ActionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ActionEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("action")
  private ActionEnum action = null;

  @SerializedName("ge")
  private Long ge = null;

  @SerializedName("le")
  private Long le = null;

  @SerializedName("network")
  private String network = null;

  public PrefixConfig action(ActionEnum action) {
    this.action = action;
    return this;
  }

   /**
   * Action for the IPPrefix
   * @return action
  **/
  @Schema(required = true, description = "Action for the IPPrefix")
  public ActionEnum getAction() {
    return action;
  }

  public void setAction(ActionEnum action) {
    this.action = action;
  }

  public PrefixConfig ge(Long ge) {
    this.ge = ge;
    return this;
  }

   /**
   * Greater than or equal to
   * minimum: 1
   * maximum: 128
   * @return ge
  **/
  @Schema(description = "Greater than or equal to")
  public Long getGe() {
    return ge;
  }

  public void setGe(Long ge) {
    this.ge = ge;
  }

  public PrefixConfig le(Long le) {
    this.le = le;
    return this;
  }

   /**
   * Less than or equal to
   * minimum: 1
   * maximum: 128
   * @return le
  **/
  @Schema(description = "Less than or equal to")
  public Long getLe() {
    return le;
  }

  public void setLe(Long le) {
    this.le = le;
  }

  public PrefixConfig network(String network) {
    this.network = network;
    return this;
  }

   /**
   * If absent, the action applies to all addresses.
   * @return network
  **/
  @Schema(description = "If absent, the action applies to all addresses.")
  public String getNetwork() {
    return network;
  }

  public void setNetwork(String network) {
    this.network = network;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrefixConfig prefixConfig = (PrefixConfig) o;
    return Objects.equals(this.action, prefixConfig.action) &&
        Objects.equals(this.ge, prefixConfig.ge) &&
        Objects.equals(this.le, prefixConfig.le) &&
        Objects.equals(this.network, prefixConfig.network);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, ge, le, network);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrefixConfig {\n");
    
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    ge: ").append(toIndentedString(ge)).append("\n");
    sb.append("    le: ").append(toIndentedString(le)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
