/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Filter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * LogicalSwitchStatusSummary
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class LogicalSwitchStatusSummary {
  @SerializedName("last_update_timestamp")
  private Long lastUpdateTimestamp = null;

  @SerializedName("total_switches")
  private Long totalSwitches = null;

  @SerializedName("filters")
  private List<Filter> filters = null;

  @SerializedName("fully_realized_switches")
  private Long fullyRealizedSwitches = null;

   /**
   * Timestamp when the data was last updated; unset if data source has never updated the data.
   * @return lastUpdateTimestamp
  **/
  @Schema(description = "Timestamp when the data was last updated; unset if data source has never updated the data.")
  public Long getLastUpdateTimestamp() {
    return lastUpdateTimestamp;
  }

  public LogicalSwitchStatusSummary totalSwitches(Long totalSwitches) {
    this.totalSwitches = totalSwitches;
    return this;
  }

   /**
   * The total number of logical switches.
   * @return totalSwitches
  **/
  @Schema(required = true, description = "The total number of logical switches.")
  public Long getTotalSwitches() {
    return totalSwitches;
  }

  public void setTotalSwitches(Long totalSwitches) {
    this.totalSwitches = totalSwitches;
  }

  public LogicalSwitchStatusSummary filters(List<Filter> filters) {
    this.filters = filters;
    return this;
  }

  public LogicalSwitchStatusSummary addFiltersItem(Filter filtersItem) {
    if (this.filters == null) {
      this.filters = new ArrayList<Filter>();
    }
    this.filters.add(filtersItem);
    return this;
  }

   /**
   * The filters used to find the logical switches- TransportZone id, LogicalSwitchProfile id or TransportType
   * @return filters
  **/
  @Schema(description = "The filters used to find the logical switches- TransportZone id, LogicalSwitchProfile id or TransportType")
  public List<Filter> getFilters() {
    return filters;
  }

  public void setFilters(List<Filter> filters) {
    this.filters = filters;
  }

  public LogicalSwitchStatusSummary fullyRealizedSwitches(Long fullyRealizedSwitches) {
    this.fullyRealizedSwitches = fullyRealizedSwitches;
    return this;
  }

   /**
   * The number of logical switches that are realized in all transport nodes.
   * @return fullyRealizedSwitches
  **/
  @Schema(required = true, description = "The number of logical switches that are realized in all transport nodes.")
  public Long getFullyRealizedSwitches() {
    return fullyRealizedSwitches;
  }

  public void setFullyRealizedSwitches(Long fullyRealizedSwitches) {
    this.fullyRealizedSwitches = fullyRealizedSwitches;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LogicalSwitchStatusSummary logicalSwitchStatusSummary = (LogicalSwitchStatusSummary) o;
    return Objects.equals(this.lastUpdateTimestamp, logicalSwitchStatusSummary.lastUpdateTimestamp) &&
        Objects.equals(this.totalSwitches, logicalSwitchStatusSummary.totalSwitches) &&
        Objects.equals(this.filters, logicalSwitchStatusSummary.filters) &&
        Objects.equals(this.fullyRealizedSwitches, logicalSwitchStatusSummary.fullyRealizedSwitches);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lastUpdateTimestamp, totalSwitches, filters, fullyRealizedSwitches);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LogicalSwitchStatusSummary {\n");
    
    sb.append("    lastUpdateTimestamp: ").append(toIndentedString(lastUpdateTimestamp)).append("\n");
    sb.append("    totalSwitches: ").append(toIndentedString(totalSwitches)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    fullyRealizedSwitches: ").append(toIndentedString(fullyRealizedSwitches)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
