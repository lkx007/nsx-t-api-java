/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ResourceReference;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * L2Vpn tunnel peer code
 */
@Schema(description = "L2Vpn tunnel peer code")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class L2VpnTunnelPeerCode {
  @SerializedName("transport_tunnel")
  private ResourceReference transportTunnel = null;

  @SerializedName("peer_code")
  private String peerCode = null;

  public L2VpnTunnelPeerCode transportTunnel(ResourceReference transportTunnel) {
    this.transportTunnel = transportTunnel;
    return this;
  }

   /**
   * Get transportTunnel
   * @return transportTunnel
  **/
  @Schema(required = true, description = "")
  public ResourceReference getTransportTunnel() {
    return transportTunnel;
  }

  public void setTransportTunnel(ResourceReference transportTunnel) {
    this.transportTunnel = transportTunnel;
  }

  public L2VpnTunnelPeerCode peerCode(String peerCode) {
    this.peerCode = peerCode;
    return this;
  }

   /**
   * Copy this code to paste on the remote end of the tunnel. This is a base64 encoded string which has all the configuration for tunnel. E.g tap device local/peer ips and protocol, encryption algorithm, etc. The peer code also contains a pre-shared key; be careful when sharing or storing it.
   * @return peerCode
  **/
  @Schema(required = true, description = "Copy this code to paste on the remote end of the tunnel. This is a base64 encoded string which has all the configuration for tunnel. E.g tap device local/peer ips and protocol, encryption algorithm, etc. The peer code also contains a pre-shared key; be careful when sharing or storing it.")
  public String getPeerCode() {
    return peerCode;
  }

  public void setPeerCode(String peerCode) {
    this.peerCode = peerCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    L2VpnTunnelPeerCode l2VpnTunnelPeerCode = (L2VpnTunnelPeerCode) o;
    return Objects.equals(this.transportTunnel, l2VpnTunnelPeerCode.transportTunnel) &&
        Objects.equals(this.peerCode, l2VpnTunnelPeerCode.peerCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transportTunnel, peerCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class L2VpnTunnelPeerCode {\n");
    
    sb.append("    transportTunnel: ").append(toIndentedString(transportTunnel)).append("\n");
    sb.append("    peerCode: ").append(toIndentedString(peerCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
