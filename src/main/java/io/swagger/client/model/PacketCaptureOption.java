/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * The option is used to filter data on given node.
 */
@Schema(description = "The option is used to filter data on given node.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class PacketCaptureOption {
  /**
   * The avaiable option names in the enum can be used to filter the capture data.
   */
  @JsonAdapter(NameEnum.Adapter.class)
  public enum NameEnum {
    ETHTYPE("ETHTYPE"),
    MAC("MAC"),
    SRCMAC("SRCMAC"),
    DSTMAC("DSTMAC"),
    VLAN("VLAN"),
    IP("IP"),
    SRCIP("SRCIP"),
    DSTIP("DSTIP"),
    IPPROTO("IPPROTO"),
    PORT("PORT"),
    SRCPORT("SRCPORT"),
    DSTPORT("DSTPORT"),
    VNI("VNI"),
    IPPROTO6("IPPROTO6"),
    IP6("IP6"),
    SRCIP6("SRCIP6"),
    DSTIP6("DSTIP6");

    private String value;

    NameEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static NameEnum fromValue(String text) {
      for (NameEnum b : NameEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<NameEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final NameEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public NameEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return NameEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("name")
  private NameEnum name = null;

  @SerializedName("value")
  private String value = null;

  public PacketCaptureOption name(NameEnum name) {
    this.name = name;
    return this;
  }

   /**
   * The avaiable option names in the enum can be used to filter the capture data.
   * @return name
  **/
  @Schema(description = "The avaiable option names in the enum can be used to filter the capture data.")
  public NameEnum getName() {
    return name;
  }

  public void setName(NameEnum name) {
    this.name = name;
  }

  public PacketCaptureOption value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Define the capture value according to the given capture option.
   * @return value
  **/
  @Schema(description = "Define the capture value according to the given capture option.")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PacketCaptureOption packetCaptureOption = (PacketCaptureOption) o;
    return Objects.equals(this.name, packetCaptureOption.name) &&
        Objects.equals(this.value, packetCaptureOption.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PacketCaptureOption {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
