/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.FeatureStackCollectionConfigurationList;
import io.swagger.client.model.ManagedResource;
import io.swagger.client.model.Tag;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.List;
/**
 * GlobalCollectionConfiguration
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class GlobalCollectionConfiguration extends ManagedResource {
  @SerializedName("modified_feature_stack_collection_configurations")
  private FeatureStackCollectionConfigurationList modifiedFeatureStackCollectionConfigurations = null;

  @SerializedName("is_data_collection_enabled")
  private Boolean isDataCollectionEnabled = null;

  @SerializedName("aggregated_data_collection_frequency")
  private Long aggregatedDataCollectionFrequency = null;

  public GlobalCollectionConfiguration modifiedFeatureStackCollectionConfigurations(FeatureStackCollectionConfigurationList modifiedFeatureStackCollectionConfigurations) {
    this.modifiedFeatureStackCollectionConfigurations = modifiedFeatureStackCollectionConfigurations;
    return this;
  }

   /**
   * Get modifiedFeatureStackCollectionConfigurations
   * @return modifiedFeatureStackCollectionConfigurations
  **/
  @Schema(description = "")
  public FeatureStackCollectionConfigurationList getModifiedFeatureStackCollectionConfigurations() {
    return modifiedFeatureStackCollectionConfigurations;
  }

  public void setModifiedFeatureStackCollectionConfigurations(FeatureStackCollectionConfigurationList modifiedFeatureStackCollectionConfigurations) {
    this.modifiedFeatureStackCollectionConfigurations = modifiedFeatureStackCollectionConfigurations;
  }

  public GlobalCollectionConfiguration isDataCollectionEnabled(Boolean isDataCollectionEnabled) {
    this.isDataCollectionEnabled = isDataCollectionEnabled;
    return this;
  }

   /**
   * Indicates whether data collection required by the aggregation service is enabled.  If false, no aggregation service data will be collected.  Changing this property will not affect the existing data collection frequency settings.
   * @return isDataCollectionEnabled
  **/
  @Schema(required = true, description = "Indicates whether data collection required by the aggregation service is enabled.  If false, no aggregation service data will be collected.  Changing this property will not affect the existing data collection frequency settings.")
  public Boolean isIsDataCollectionEnabled() {
    return isDataCollectionEnabled;
  }

  public void setIsDataCollectionEnabled(Boolean isDataCollectionEnabled) {
    this.isDataCollectionEnabled = isDataCollectionEnabled;
  }

  public GlobalCollectionConfiguration aggregatedDataCollectionFrequency(Long aggregatedDataCollectionFrequency) {
    this.aggregatedDataCollectionFrequency = aggregatedDataCollectionFrequency;
    return this;
  }

   /**
   * The frequency in seconds at which data, which is subject to the aggregation function, is collected.
   * minimum: 60
   * maximum: 86400
   * @return aggregatedDataCollectionFrequency
  **/
  @Schema(required = true, description = "The frequency in seconds at which data, which is subject to the aggregation function, is collected.")
  public Long getAggregatedDataCollectionFrequency() {
    return aggregatedDataCollectionFrequency;
  }

  public void setAggregatedDataCollectionFrequency(Long aggregatedDataCollectionFrequency) {
    this.aggregatedDataCollectionFrequency = aggregatedDataCollectionFrequency;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GlobalCollectionConfiguration globalCollectionConfiguration = (GlobalCollectionConfiguration) o;
    return Objects.equals(this.modifiedFeatureStackCollectionConfigurations, globalCollectionConfiguration.modifiedFeatureStackCollectionConfigurations) &&
        Objects.equals(this.isDataCollectionEnabled, globalCollectionConfiguration.isDataCollectionEnabled) &&
        Objects.equals(this.aggregatedDataCollectionFrequency, globalCollectionConfiguration.aggregatedDataCollectionFrequency) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(modifiedFeatureStackCollectionConfigurations, isDataCollectionEnabled, aggregatedDataCollectionFrequency, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GlobalCollectionConfiguration {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    modifiedFeatureStackCollectionConfigurations: ").append(toIndentedString(modifiedFeatureStackCollectionConfigurations)).append("\n");
    sb.append("    isDataCollectionEnabled: ").append(toIndentedString(isDataCollectionEnabled)).append("\n");
    sb.append("    aggregatedDataCollectionFrequency: ").append(toIndentedString(aggregatedDataCollectionFrequency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
