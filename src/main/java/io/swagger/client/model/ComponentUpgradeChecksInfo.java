/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.UpgradeCheckInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Meta-data of pre/post-upgrade checks for a component
 */
@Schema(description = "Meta-data of pre/post-upgrade checks for a component")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class ComponentUpgradeChecksInfo {
  @SerializedName("pre_upgrade_checks_info")
  private List<UpgradeCheckInfo> preUpgradeChecksInfo = null;

  @SerializedName("post_upgrade_checks_info")
  private List<UpgradeCheckInfo> postUpgradeChecksInfo = null;

  @SerializedName("component_type")
  private String componentType = null;

  public ComponentUpgradeChecksInfo preUpgradeChecksInfo(List<UpgradeCheckInfo> preUpgradeChecksInfo) {
    this.preUpgradeChecksInfo = preUpgradeChecksInfo;
    return this;
  }

  public ComponentUpgradeChecksInfo addPreUpgradeChecksInfoItem(UpgradeCheckInfo preUpgradeChecksInfoItem) {
    if (this.preUpgradeChecksInfo == null) {
      this.preUpgradeChecksInfo = new ArrayList<UpgradeCheckInfo>();
    }
    this.preUpgradeChecksInfo.add(preUpgradeChecksInfoItem);
    return this;
  }

   /**
   * Collection of pre-upgrade checks
   * @return preUpgradeChecksInfo
  **/
  @Schema(description = "Collection of pre-upgrade checks")
  public List<UpgradeCheckInfo> getPreUpgradeChecksInfo() {
    return preUpgradeChecksInfo;
  }

  public void setPreUpgradeChecksInfo(List<UpgradeCheckInfo> preUpgradeChecksInfo) {
    this.preUpgradeChecksInfo = preUpgradeChecksInfo;
  }

  public ComponentUpgradeChecksInfo postUpgradeChecksInfo(List<UpgradeCheckInfo> postUpgradeChecksInfo) {
    this.postUpgradeChecksInfo = postUpgradeChecksInfo;
    return this;
  }

  public ComponentUpgradeChecksInfo addPostUpgradeChecksInfoItem(UpgradeCheckInfo postUpgradeChecksInfoItem) {
    if (this.postUpgradeChecksInfo == null) {
      this.postUpgradeChecksInfo = new ArrayList<UpgradeCheckInfo>();
    }
    this.postUpgradeChecksInfo.add(postUpgradeChecksInfoItem);
    return this;
  }

   /**
   * Collection of post-upgrade checks
   * @return postUpgradeChecksInfo
  **/
  @Schema(description = "Collection of post-upgrade checks")
  public List<UpgradeCheckInfo> getPostUpgradeChecksInfo() {
    return postUpgradeChecksInfo;
  }

  public void setPostUpgradeChecksInfo(List<UpgradeCheckInfo> postUpgradeChecksInfo) {
    this.postUpgradeChecksInfo = postUpgradeChecksInfo;
  }

  public ComponentUpgradeChecksInfo componentType(String componentType) {
    this.componentType = componentType;
    return this;
  }

   /**
   * Component type of the pre/post-upgrade checks
   * @return componentType
  **/
  @Schema(required = true, description = "Component type of the pre/post-upgrade checks")
  public String getComponentType() {
    return componentType;
  }

  public void setComponentType(String componentType) {
    this.componentType = componentType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComponentUpgradeChecksInfo componentUpgradeChecksInfo = (ComponentUpgradeChecksInfo) o;
    return Objects.equals(this.preUpgradeChecksInfo, componentUpgradeChecksInfo.preUpgradeChecksInfo) &&
        Objects.equals(this.postUpgradeChecksInfo, componentUpgradeChecksInfo.postUpgradeChecksInfo) &&
        Objects.equals(this.componentType, componentUpgradeChecksInfo.componentType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(preUpgradeChecksInfo, postUpgradeChecksInfo, componentType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComponentUpgradeChecksInfo {\n");
    
    sb.append("    preUpgradeChecksInfo: ").append(toIndentedString(preUpgradeChecksInfo)).append("\n");
    sb.append("    postUpgradeChecksInfo: ").append(toIndentedString(postUpgradeChecksInfo)).append("\n");
    sb.append("    componentType: ").append(toIndentedString(componentType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
