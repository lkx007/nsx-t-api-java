/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.HealthCheckVlanRange;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Health check result for specific uplink. 
 */
@Schema(description = "Health check result for specific uplink. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class HealthCheckResultPerUplink {
  @SerializedName("uplink_name")
  private String uplinkName = null;

  @SerializedName("vlan_and_mtu_allowed")
  private List<HealthCheckVlanRange> vlanAndMtuAllowed = null;

  @SerializedName("vlan_disallowed")
  private List<HealthCheckVlanRange> vlanDisallowed = null;

  @SerializedName("mtu_disallowed")
  private List<HealthCheckVlanRange> mtuDisallowed = null;

   /**
   * Name of the uplink.
   * @return uplinkName
  **/
  @Schema(description = "Name of the uplink.")
  public String getUplinkName() {
    return uplinkName;
  }

   /**
   * List of VLAN ID ranges which are allowed by VLAN and MTU settings. 
   * @return vlanAndMtuAllowed
  **/
  @Schema(description = "List of VLAN ID ranges which are allowed by VLAN and MTU settings. ")
  public List<HealthCheckVlanRange> getVlanAndMtuAllowed() {
    return vlanAndMtuAllowed;
  }

   /**
   * List of VLAN ID ranges which may be disallowed by VLAN settings. 
   * @return vlanDisallowed
  **/
  @Schema(description = "List of VLAN ID ranges which may be disallowed by VLAN settings. ")
  public List<HealthCheckVlanRange> getVlanDisallowed() {
    return vlanDisallowed;
  }

   /**
   * List of VLAN ID ranges which are allowed by VLAN settings but may be disallowed by MTU settings. 
   * @return mtuDisallowed
  **/
  @Schema(description = "List of VLAN ID ranges which are allowed by VLAN settings but may be disallowed by MTU settings. ")
  public List<HealthCheckVlanRange> getMtuDisallowed() {
    return mtuDisallowed;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HealthCheckResultPerUplink healthCheckResultPerUplink = (HealthCheckResultPerUplink) o;
    return Objects.equals(this.uplinkName, healthCheckResultPerUplink.uplinkName) &&
        Objects.equals(this.vlanAndMtuAllowed, healthCheckResultPerUplink.vlanAndMtuAllowed) &&
        Objects.equals(this.vlanDisallowed, healthCheckResultPerUplink.vlanDisallowed) &&
        Objects.equals(this.mtuDisallowed, healthCheckResultPerUplink.mtuDisallowed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uplinkName, vlanAndMtuAllowed, vlanDisallowed, mtuDisallowed);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HealthCheckResultPerUplink {\n");
    
    sb.append("    uplinkName: ").append(toIndentedString(uplinkName)).append("\n");
    sb.append("    vlanAndMtuAllowed: ").append(toIndentedString(vlanAndMtuAllowed)).append("\n");
    sb.append("    vlanDisallowed: ").append(toIndentedString(vlanDisallowed)).append("\n");
    sb.append("    mtuDisallowed: ").append(toIndentedString(mtuDisallowed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
