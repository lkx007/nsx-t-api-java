/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * AuditLogRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class AuditLogRequest {
  @SerializedName("log_filter")
  private String logFilter = null;

  @SerializedName("log_age_limit")
  private Long logAgeLimit = null;

  /**
   * Type of log filter
   */
  @JsonAdapter(LogFilterTypeEnum.Adapter.class)
  public enum LogFilterTypeEnum {
    TEXT("TEXT"),
    REGEX("REGEX");

    private String value;

    LogFilterTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static LogFilterTypeEnum fromValue(String text) {
      for (LogFilterTypeEnum b : LogFilterTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<LogFilterTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LogFilterTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LogFilterTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return LogFilterTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("log_filter_type")
  private LogFilterTypeEnum logFilterType = LogFilterTypeEnum.TEXT;

  public AuditLogRequest logFilter(String logFilter) {
    this.logFilter = logFilter;
    return this;
  }

   /**
   * Audit logs should meet the filter condition
   * @return logFilter
  **/
  @Schema(description = "Audit logs should meet the filter condition")
  public String getLogFilter() {
    return logFilter;
  }

  public void setLogFilter(String logFilter) {
    this.logFilter = logFilter;
  }

  public AuditLogRequest logAgeLimit(Long logAgeLimit) {
    this.logAgeLimit = logAgeLimit;
    return this;
  }

   /**
   * Include logs with timstamps not past the age limit in days
   * minimum: 0
   * @return logAgeLimit
  **/
  @Schema(description = "Include logs with timstamps not past the age limit in days")
  public Long getLogAgeLimit() {
    return logAgeLimit;
  }

  public void setLogAgeLimit(Long logAgeLimit) {
    this.logAgeLimit = logAgeLimit;
  }

  public AuditLogRequest logFilterType(LogFilterTypeEnum logFilterType) {
    this.logFilterType = logFilterType;
    return this;
  }

   /**
   * Type of log filter
   * @return logFilterType
  **/
  @Schema(description = "Type of log filter")
  public LogFilterTypeEnum getLogFilterType() {
    return logFilterType;
  }

  public void setLogFilterType(LogFilterTypeEnum logFilterType) {
    this.logFilterType = logFilterType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuditLogRequest auditLogRequest = (AuditLogRequest) o;
    return Objects.equals(this.logFilter, auditLogRequest.logFilter) &&
        Objects.equals(this.logAgeLimit, auditLogRequest.logAgeLimit) &&
        Objects.equals(this.logFilterType, auditLogRequest.logFilterType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(logFilter, logAgeLimit, logFilterType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuditLogRequest {\n");
    
    sb.append("    logFilter: ").append(toIndentedString(logFilter)).append("\n");
    sb.append("    logAgeLimit: ").append(toIndentedString(logAgeLimit)).append("\n");
    sb.append("    logFilterType: ").append(toIndentedString(logFilterType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
