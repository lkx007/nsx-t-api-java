/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.DSRule;
import io.swagger.client.model.FirewallService;
import io.swagger.client.model.ResourceReference;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * FirewallRule
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class FirewallRule extends DSRule {
  @SerializedName("services")
  private List<FirewallService> services = null;

  @SerializedName("context_profiles")
  private List<ResourceReference> contextProfiles = null;

  @SerializedName("extended_sources")
  private List<ResourceReference> extendedSources = null;

  @SerializedName("section_id")
  private String sectionId = null;

  public FirewallRule services(List<FirewallService> services) {
    this.services = services;
    return this;
  }

  public FirewallRule addServicesItem(FirewallService servicesItem) {
    if (this.services == null) {
      this.services = new ArrayList<FirewallService>();
    }
    this.services.add(servicesItem);
    return this;
  }

   /**
   * List of the services. Null will be treated as any.
   * @return services
  **/
  @Schema(description = "List of the services. Null will be treated as any.")
  public List<FirewallService> getServices() {
    return services;
  }

  public void setServices(List<FirewallService> services) {
    this.services = services;
  }

  public FirewallRule contextProfiles(List<ResourceReference> contextProfiles) {
    this.contextProfiles = contextProfiles;
    return this;
  }

  public FirewallRule addContextProfilesItem(ResourceReference contextProfilesItem) {
    if (this.contextProfiles == null) {
      this.contextProfiles = new ArrayList<ResourceReference>();
    }
    this.contextProfiles.add(contextProfilesItem);
    return this;
  }

   /**
   * NS Profile object which accepts attributes and sub-attributes of various network services (ex. L7 AppId, domain name, encryption algorithm) as key value pairs.
   * @return contextProfiles
  **/
  @Schema(description = "NS Profile object which accepts attributes and sub-attributes of various network services (ex. L7 AppId, domain name, encryption algorithm) as key value pairs.")
  public List<ResourceReference> getContextProfiles() {
    return contextProfiles;
  }

  public void setContextProfiles(List<ResourceReference> contextProfiles) {
    this.contextProfiles = contextProfiles;
  }

  public FirewallRule extendedSources(List<ResourceReference> extendedSources) {
    this.extendedSources = extendedSources;
    return this;
  }

  public FirewallRule addExtendedSourcesItem(ResourceReference extendedSourcesItem) {
    if (this.extendedSources == null) {
      this.extendedSources = new ArrayList<ResourceReference>();
    }
    this.extendedSources.add(extendedSourcesItem);
    return this;
  }

   /**
   * List of NSGroups that have end point attributes like AD Groups(SID), process name, process hash etc. For Flash release, only NSGroups containing AD Groups are supported.
   * @return extendedSources
  **/
  @Schema(description = "List of NSGroups that have end point attributes like AD Groups(SID), process name, process hash etc. For Flash release, only NSGroups containing AD Groups are supported.")
  public List<ResourceReference> getExtendedSources() {
    return extendedSources;
  }

  public void setExtendedSources(List<ResourceReference> extendedSources) {
    this.extendedSources = extendedSources;
  }

   /**
   * Section Id of the section to which this rule belongs to.
   * @return sectionId
  **/
  @Schema(description = "Section Id of the section to which this rule belongs to.")
  public String getSectionId() {
    return sectionId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FirewallRule firewallRule = (FirewallRule) o;
    return Objects.equals(this.services, firewallRule.services) &&
        Objects.equals(this.contextProfiles, firewallRule.contextProfiles) &&
        Objects.equals(this.extendedSources, firewallRule.extendedSources) &&
        Objects.equals(this.sectionId, firewallRule.sectionId) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(services, contextProfiles, extendedSources, sectionId, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FirewallRule {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    contextProfiles: ").append(toIndentedString(contextProfiles)).append("\n");
    sb.append("    extendedSources: ").append(toIndentedString(extendedSources)).append("\n");
    sb.append("    sectionId: ").append(toIndentedString(sectionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
