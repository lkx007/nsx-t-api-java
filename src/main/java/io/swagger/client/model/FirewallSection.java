/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.DSSection;
import io.swagger.client.model.ResourceReference;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.List;
/**
 * FirewallSection
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class FirewallSection extends DSSection {
  @SerializedName("priority")
  private Long priority = null;

  @SerializedName("enforced_on")
  private String enforcedOn = null;

  @SerializedName("locked")
  private Boolean locked = false;

  @SerializedName("tcp_strict")
  private Boolean tcpStrict = false;

  @SerializedName("lock_modified_by")
  private String lockModifiedBy = null;

  @SerializedName("lock_modified_time")
  private Long lockModifiedTime = null;

  @SerializedName("comments")
  private String comments = null;

  @SerializedName("autoplumbed")
  private Boolean autoplumbed = false;

   /**
   * Priority of current section with respect to other sections. In case the field is empty, the list section api should be used to get section priority.
   * @return priority
  **/
  @Schema(description = "Priority of current section with respect to other sections. In case the field is empty, the list section api should be used to get section priority.")
  public Long getPriority() {
    return priority;
  }

   /**
   * This attribute represents enforcement point of firewall section. For example, firewall section enforced on logical port with attachment type bridge endpoint will have &#x27;BRIDGEENDPOINT&#x27; value, firewall section enforced on logical router will have &#x27;LOGICALROUTER&#x27; value and rest have &#x27;VIF&#x27; value.
   * @return enforcedOn
  **/
  @Schema(description = "This attribute represents enforcement point of firewall section. For example, firewall section enforced on logical port with attachment type bridge endpoint will have 'BRIDGEENDPOINT' value, firewall section enforced on logical router will have 'LOGICALROUTER' value and rest have 'VIF' value.")
  public String getEnforcedOn() {
    return enforcedOn;
  }

   /**
   * Section is locked/unlocked.
   * @return locked
  **/
  @Schema(description = "Section is locked/unlocked.")
  public Boolean isLocked() {
    return locked;
  }

  public FirewallSection tcpStrict(Boolean tcpStrict) {
    this.tcpStrict = tcpStrict;
    return this;
  }

   /**
   * If TCP strict is enabled on a section and a packet matches rule in it, the following check will be performed. If the packet does not belong to an existing session, the kernel will check to see if the SYN flag of the packet is set. If it is not, then it will drop the packet.
   * @return tcpStrict
  **/
  @Schema(description = "If TCP strict is enabled on a section and a packet matches rule in it, the following check will be performed. If the packet does not belong to an existing session, the kernel will check to see if the SYN flag of the packet is set. If it is not, then it will drop the packet.")
  public Boolean isTcpStrict() {
    return tcpStrict;
  }

  public void setTcpStrict(Boolean tcpStrict) {
    this.tcpStrict = tcpStrict;
  }

   /**
   * ID of the user who last modified the lock for the section.
   * @return lockModifiedBy
  **/
  @Schema(description = "ID of the user who last modified the lock for the section.")
  public String getLockModifiedBy() {
    return lockModifiedBy;
  }

   /**
   * Section locked/unlocked time in epoch milliseconds.
   * @return lockModifiedTime
  **/
  @Schema(description = "Section locked/unlocked time in epoch milliseconds.")
  public Long getLockModifiedTime() {
    return lockModifiedTime;
  }

   /**
   * Comments for section lock/unlock.
   * @return comments
  **/
  @Schema(description = "Comments for section lock/unlock.")
  public String getComments() {
    return comments;
  }

   /**
   * This flag indicates whether it is an auto-plumbed section that is associated to a LogicalRouter. Auto-plumbed sections are system owned and cannot be updated via the API.
   * @return autoplumbed
  **/
  @Schema(description = "This flag indicates whether it is an auto-plumbed section that is associated to a LogicalRouter. Auto-plumbed sections are system owned and cannot be updated via the API.")
  public Boolean isAutoplumbed() {
    return autoplumbed;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FirewallSection firewallSection = (FirewallSection) o;
    return Objects.equals(this.priority, firewallSection.priority) &&
        Objects.equals(this.enforcedOn, firewallSection.enforcedOn) &&
        Objects.equals(this.locked, firewallSection.locked) &&
        Objects.equals(this.tcpStrict, firewallSection.tcpStrict) &&
        Objects.equals(this.lockModifiedBy, firewallSection.lockModifiedBy) &&
        Objects.equals(this.lockModifiedTime, firewallSection.lockModifiedTime) &&
        Objects.equals(this.comments, firewallSection.comments) &&
        Objects.equals(this.autoplumbed, firewallSection.autoplumbed) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(priority, enforcedOn, locked, tcpStrict, lockModifiedBy, lockModifiedTime, comments, autoplumbed, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FirewallSection {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    enforcedOn: ").append(toIndentedString(enforcedOn)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    tcpStrict: ").append(toIndentedString(tcpStrict)).append("\n");
    sb.append("    lockModifiedBy: ").append(toIndentedString(lockModifiedBy)).append("\n");
    sb.append("    lockModifiedTime: ").append(toIndentedString(lockModifiedTime)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    autoplumbed: ").append(toIndentedString(autoplumbed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
