/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.BaseSwitchingProfile;
import io.swagger.client.model.BpduFilter;
import io.swagger.client.model.DhcpFilter;
import io.swagger.client.model.RateLimits;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.List;
/**
 * SwitchSecuritySwitchingProfile
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class SwitchSecuritySwitchingProfile extends BaseSwitchingProfile {
  @SerializedName("bpdu_filter")
  private BpduFilter bpduFilter = null;

  @SerializedName("rate_limits")
  private RateLimits rateLimits = null;

  @SerializedName("ra_guard_enabled")
  private Boolean raGuardEnabled = true;

  @SerializedName("dhcp_filter")
  private DhcpFilter dhcpFilter = null;

  @SerializedName("block_non_ip_traffic")
  private Boolean blockNonIpTraffic = false;

  public SwitchSecuritySwitchingProfile bpduFilter(BpduFilter bpduFilter) {
    this.bpduFilter = bpduFilter;
    return this;
  }

   /**
   * Get bpduFilter
   * @return bpduFilter
  **/
  @Schema(description = "")
  public BpduFilter getBpduFilter() {
    return bpduFilter;
  }

  public void setBpduFilter(BpduFilter bpduFilter) {
    this.bpduFilter = bpduFilter;
  }

  public SwitchSecuritySwitchingProfile rateLimits(RateLimits rateLimits) {
    this.rateLimits = rateLimits;
    return this;
  }

   /**
   * Get rateLimits
   * @return rateLimits
  **/
  @Schema(description = "")
  public RateLimits getRateLimits() {
    return rateLimits;
  }

  public void setRateLimits(RateLimits rateLimits) {
    this.rateLimits = rateLimits;
  }

  public SwitchSecuritySwitchingProfile raGuardEnabled(Boolean raGuardEnabled) {
    this.raGuardEnabled = raGuardEnabled;
    return this;
  }

   /**
   * RA Guard when enabled blocks unauthorized/rogue Router Advertisement (RA) packets.
   * @return raGuardEnabled
  **/
  @Schema(description = "RA Guard when enabled blocks unauthorized/rogue Router Advertisement (RA) packets.")
  public Boolean isRaGuardEnabled() {
    return raGuardEnabled;
  }

  public void setRaGuardEnabled(Boolean raGuardEnabled) {
    this.raGuardEnabled = raGuardEnabled;
  }

  public SwitchSecuritySwitchingProfile dhcpFilter(DhcpFilter dhcpFilter) {
    this.dhcpFilter = dhcpFilter;
    return this;
  }

   /**
   * Get dhcpFilter
   * @return dhcpFilter
  **/
  @Schema(description = "")
  public DhcpFilter getDhcpFilter() {
    return dhcpFilter;
  }

  public void setDhcpFilter(DhcpFilter dhcpFilter) {
    this.dhcpFilter = dhcpFilter;
  }

  public SwitchSecuritySwitchingProfile blockNonIpTraffic(Boolean blockNonIpTraffic) {
    this.blockNonIpTraffic = blockNonIpTraffic;
    return this;
  }

   /**
   * A flag to block all traffic except IP/(G)ARP/BPDU
   * @return blockNonIpTraffic
  **/
  @Schema(description = "A flag to block all traffic except IP/(G)ARP/BPDU")
  public Boolean isBlockNonIpTraffic() {
    return blockNonIpTraffic;
  }

  public void setBlockNonIpTraffic(Boolean blockNonIpTraffic) {
    this.blockNonIpTraffic = blockNonIpTraffic;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SwitchSecuritySwitchingProfile switchSecuritySwitchingProfile = (SwitchSecuritySwitchingProfile) o;
    return Objects.equals(this.bpduFilter, switchSecuritySwitchingProfile.bpduFilter) &&
        Objects.equals(this.rateLimits, switchSecuritySwitchingProfile.rateLimits) &&
        Objects.equals(this.raGuardEnabled, switchSecuritySwitchingProfile.raGuardEnabled) &&
        Objects.equals(this.dhcpFilter, switchSecuritySwitchingProfile.dhcpFilter) &&
        Objects.equals(this.blockNonIpTraffic, switchSecuritySwitchingProfile.blockNonIpTraffic) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bpduFilter, rateLimits, raGuardEnabled, dhcpFilter, blockNonIpTraffic, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SwitchSecuritySwitchingProfile {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    bpduFilter: ").append(toIndentedString(bpduFilter)).append("\n");
    sb.append("    rateLimits: ").append(toIndentedString(rateLimits)).append("\n");
    sb.append("    raGuardEnabled: ").append(toIndentedString(raGuardEnabled)).append("\n");
    sb.append("    dhcpFilter: ").append(toIndentedString(dhcpFilter)).append("\n");
    sb.append("    blockNonIpTraffic: ").append(toIndentedString(blockNonIpTraffic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
