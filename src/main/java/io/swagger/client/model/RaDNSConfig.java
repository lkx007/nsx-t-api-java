/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * RaDNSConfig
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class RaDNSConfig {
  @SerializedName("domain_name_lifetime")
  private Long domainNameLifetime = 1800000l;

  @SerializedName("dns_server")
  private List<String> dnsServer = null;

  @SerializedName("domain_name")
  private List<String> domainName = null;

  @SerializedName("dns_server_lifetime")
  private Long dnsServerLifetime = 1800000l;

  public RaDNSConfig domainNameLifetime(Long domainNameLifetime) {
    this.domainNameLifetime = domainNameLifetime;
    return this;
  }

   /**
   * Lifetime of Domain names in milliseconds
   * minimum: 0
   * maximum: 4294967295
   * @return domainNameLifetime
  **/
  @Schema(description = "Lifetime of Domain names in milliseconds")
  public Long getDomainNameLifetime() {
    return domainNameLifetime;
  }

  public void setDomainNameLifetime(Long domainNameLifetime) {
    this.domainNameLifetime = domainNameLifetime;
  }

  public RaDNSConfig dnsServer(List<String> dnsServer) {
    this.dnsServer = dnsServer;
    return this;
  }

  public RaDNSConfig addDnsServerItem(String dnsServerItem) {
    if (this.dnsServer == null) {
      this.dnsServer = new ArrayList<String>();
    }
    this.dnsServer.add(dnsServerItem);
    return this;
  }

   /**
   * DNS server. 
   * @return dnsServer
  **/
  @Schema(description = "DNS server. ")
  public List<String> getDnsServer() {
    return dnsServer;
  }

  public void setDnsServer(List<String> dnsServer) {
    this.dnsServer = dnsServer;
  }

  public RaDNSConfig domainName(List<String> domainName) {
    this.domainName = domainName;
    return this;
  }

  public RaDNSConfig addDomainNameItem(String domainNameItem) {
    if (this.domainName == null) {
      this.domainName = new ArrayList<String>();
    }
    this.domainName.add(domainNameItem);
    return this;
  }

   /**
   * Domain name in RA message. 
   * @return domainName
  **/
  @Schema(description = "Domain name in RA message. ")
  public List<String> getDomainName() {
    return domainName;
  }

  public void setDomainName(List<String> domainName) {
    this.domainName = domainName;
  }

  public RaDNSConfig dnsServerLifetime(Long dnsServerLifetime) {
    this.dnsServerLifetime = dnsServerLifetime;
    return this;
  }

   /**
   * Lifetime of DNS server in milliseconds
   * minimum: 0
   * maximum: 4294967295
   * @return dnsServerLifetime
  **/
  @Schema(description = "Lifetime of DNS server in milliseconds")
  public Long getDnsServerLifetime() {
    return dnsServerLifetime;
  }

  public void setDnsServerLifetime(Long dnsServerLifetime) {
    this.dnsServerLifetime = dnsServerLifetime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RaDNSConfig raDNSConfig = (RaDNSConfig) o;
    return Objects.equals(this.domainNameLifetime, raDNSConfig.domainNameLifetime) &&
        Objects.equals(this.dnsServer, raDNSConfig.dnsServer) &&
        Objects.equals(this.domainName, raDNSConfig.domainName) &&
        Objects.equals(this.dnsServerLifetime, raDNSConfig.dnsServerLifetime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domainNameLifetime, dnsServer, domainName, dnsServerLifetime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RaDNSConfig {\n");
    
    sb.append("    domainNameLifetime: ").append(toIndentedString(domainNameLifetime)).append("\n");
    sb.append("    dnsServer: ").append(toIndentedString(dnsServer)).append("\n");
    sb.append("    domainName: ").append(toIndentedString(domainName)).append("\n");
    sb.append("    dnsServerLifetime: ").append(toIndentedString(dnsServerLifetime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
