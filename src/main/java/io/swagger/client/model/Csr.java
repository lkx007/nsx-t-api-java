/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ManagedResource;
import io.swagger.client.model.Principal;
import io.swagger.client.model.Tag;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.List;
/**
 * Csr
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class Csr extends ManagedResource {
  @SerializedName("key_size")
  private Long keySize = null;

  @SerializedName("pem_encoded")
  private String pemEncoded = null;

  /**
   * Cryptographic algorithm(asymmetric ) used by the public key for data encryption
   */
  @JsonAdapter(AlgorithmEnum.Adapter.class)
  public enum AlgorithmEnum {
    RSA("RSA"),
    DSA("DSA");

    private String value;

    AlgorithmEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static AlgorithmEnum fromValue(String text) {
      for (AlgorithmEnum b : AlgorithmEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<AlgorithmEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AlgorithmEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AlgorithmEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AlgorithmEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("algorithm")
  private AlgorithmEnum algorithm = null;

  @SerializedName("subject")
  private Principal subject = null;

  public Csr keySize(Long keySize) {
    this.keySize = keySize;
    return this;
  }

   /**
   * size measured in bits of the public key used in a cryptographic algorithm
   * @return keySize
  **/
  @Schema(required = true, description = "size measured in bits of the public key used in a cryptographic algorithm")
  public Long getKeySize() {
    return keySize;
  }

  public void setKeySize(Long keySize) {
    this.keySize = keySize;
  }

   /**
   * pem encoded certificate data
   * @return pemEncoded
  **/
  @Schema(description = "pem encoded certificate data")
  public String getPemEncoded() {
    return pemEncoded;
  }

  public Csr algorithm(AlgorithmEnum algorithm) {
    this.algorithm = algorithm;
    return this;
  }

   /**
   * Cryptographic algorithm(asymmetric ) used by the public key for data encryption
   * @return algorithm
  **/
  @Schema(required = true, description = "Cryptographic algorithm(asymmetric ) used by the public key for data encryption")
  public AlgorithmEnum getAlgorithm() {
    return algorithm;
  }

  public void setAlgorithm(AlgorithmEnum algorithm) {
    this.algorithm = algorithm;
  }

  public Csr subject(Principal subject) {
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @Schema(required = true, description = "")
  public Principal getSubject() {
    return subject;
  }

  public void setSubject(Principal subject) {
    this.subject = subject;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Csr csr = (Csr) o;
    return Objects.equals(this.keySize, csr.keySize) &&
        Objects.equals(this.pemEncoded, csr.pemEncoded) &&
        Objects.equals(this.algorithm, csr.algorithm) &&
        Objects.equals(this.subject, csr.subject) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(keySize, pemEncoded, algorithm, subject, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Csr {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    keySize: ").append(toIndentedString(keySize)).append("\n");
    sb.append("    pemEncoded: ").append(toIndentedString(pemEncoded)).append("\n");
    sb.append("    algorithm: ").append(toIndentedString(algorithm)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
