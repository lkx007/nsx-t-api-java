/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.TraceflowObservation;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * TraceflowObservationRelayedLogical
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class TraceflowObservationRelayedLogical extends TraceflowObservation {
  /**
   * This field specified the message type of the relay service REQUEST - The relay service will relay a request message to the destination server REPLY - The relay service will relay a reply message to the client
   */
  @JsonAdapter(MessageTypeEnum.Adapter.class)
  public enum MessageTypeEnum {
    REQUEST("REQUEST"),
    REPLY("REPLY");

    private String value;

    MessageTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static MessageTypeEnum fromValue(String text) {
      for (MessageTypeEnum b : MessageTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<MessageTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MessageTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MessageTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return MessageTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("message_type")
  private MessageTypeEnum messageType = MessageTypeEnum.REQUEST;

  @SerializedName("dst_server_address")
  private String dstServerAddress = null;

  @SerializedName("logical_comp_uuid")
  private String logicalCompUuid = null;

  @SerializedName("relay_server_address")
  private String relayServerAddress = null;

   /**
   * This field specified the message type of the relay service REQUEST - The relay service will relay a request message to the destination server REPLY - The relay service will relay a reply message to the client
   * @return messageType
  **/
  @Schema(description = "This field specified the message type of the relay service REQUEST - The relay service will relay a request message to the destination server REPLY - The relay service will relay a reply message to the client")
  public MessageTypeEnum getMessageType() {
    return messageType;
  }

   /**
   * This field specified the IP address of the destination which the packet will be relayed.
   * @return dstServerAddress
  **/
  @Schema(description = "This field specified the IP address of the destination which the packet will be relayed.")
  public String getDstServerAddress() {
    return dstServerAddress;
  }

   /**
   * This field specified the logical component that relay service located.
   * @return logicalCompUuid
  **/
  @Schema(description = "This field specified the logical component that relay service located.")
  public String getLogicalCompUuid() {
    return logicalCompUuid;
  }

   /**
   * This field specified the IP address of the relay service.
   * @return relayServerAddress
  **/
  @Schema(description = "This field specified the IP address of the relay service.")
  public String getRelayServerAddress() {
    return relayServerAddress;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TraceflowObservationRelayedLogical traceflowObservationRelayedLogical = (TraceflowObservationRelayedLogical) o;
    return Objects.equals(this.messageType, traceflowObservationRelayedLogical.messageType) &&
        Objects.equals(this.dstServerAddress, traceflowObservationRelayedLogical.dstServerAddress) &&
        Objects.equals(this.logicalCompUuid, traceflowObservationRelayedLogical.logicalCompUuid) &&
        Objects.equals(this.relayServerAddress, traceflowObservationRelayedLogical.relayServerAddress) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messageType, dstServerAddress, logicalCompUuid, relayServerAddress, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TraceflowObservationRelayedLogical {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    messageType: ").append(toIndentedString(messageType)).append("\n");
    sb.append("    dstServerAddress: ").append(toIndentedString(dstServerAddress)).append("\n");
    sb.append("    logicalCompUuid: ").append(toIndentedString(logicalCompUuid)).append("\n");
    sb.append("    relayServerAddress: ").append(toIndentedString(relayServerAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
