/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ManagedResource;
import io.swagger.client.model.Tag;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.List;
/**
 * DirectoryGroupMember
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class DirectoryGroupMember extends ManagedResource {
  @SerializedName("group_id")
  private String groupId = null;

  @SerializedName("member_group_distinguished_name")
  private String memberGroupDistinguishedName = null;

  @SerializedName("member_group_id")
  private String memberGroupId = null;

  @SerializedName("group_distinguished_name")
  private String groupDistinguishedName = null;

  @SerializedName("nested")
  private Boolean nested = null;

  public DirectoryGroupMember groupId(String groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * Directory group id this group member belongs to
   * @return groupId
  **/
  @Schema(required = true, description = "Directory group id this group member belongs to")
  public String getGroupId() {
    return groupId;
  }

  public void setGroupId(String groupId) {
    this.groupId = groupId;
  }

  public DirectoryGroupMember memberGroupDistinguishedName(String memberGroupDistinguishedName) {
    this.memberGroupDistinguishedName = memberGroupDistinguishedName;
    return this;
  }

   /**
   * Directory group name this group member owns
   * @return memberGroupDistinguishedName
  **/
  @Schema(required = true, description = "Directory group name this group member owns")
  public String getMemberGroupDistinguishedName() {
    return memberGroupDistinguishedName;
  }

  public void setMemberGroupDistinguishedName(String memberGroupDistinguishedName) {
    this.memberGroupDistinguishedName = memberGroupDistinguishedName;
  }

  public DirectoryGroupMember memberGroupId(String memberGroupId) {
    this.memberGroupId = memberGroupId;
    return this;
  }

   /**
   * Directory group id this group member owns
   * @return memberGroupId
  **/
  @Schema(required = true, description = "Directory group id this group member owns")
  public String getMemberGroupId() {
    return memberGroupId;
  }

  public void setMemberGroupId(String memberGroupId) {
    this.memberGroupId = memberGroupId;
  }

  public DirectoryGroupMember groupDistinguishedName(String groupDistinguishedName) {
    this.groupDistinguishedName = groupDistinguishedName;
    return this;
  }

   /**
   * Directory group distinguished name this group member belongs to.
   * @return groupDistinguishedName
  **/
  @Schema(required = true, description = "Directory group distinguished name this group member belongs to.")
  public String getGroupDistinguishedName() {
    return groupDistinguishedName;
  }

  public void setGroupDistinguishedName(String groupDistinguishedName) {
    this.groupDistinguishedName = groupDistinguishedName;
  }

  public DirectoryGroupMember nested(Boolean nested) {
    this.nested = nested;
    return this;
  }

   /**
   * Whether this member group is a directory member of the parent group speicified by group_id or a nested member group which parent group is also member group of the parent group speicified by group_id.
   * @return nested
  **/
  @Schema(required = true, description = "Whether this member group is a directory member of the parent group speicified by group_id or a nested member group which parent group is also member group of the parent group speicified by group_id.")
  public Boolean isNested() {
    return nested;
  }

  public void setNested(Boolean nested) {
    this.nested = nested;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DirectoryGroupMember directoryGroupMember = (DirectoryGroupMember) o;
    return Objects.equals(this.groupId, directoryGroupMember.groupId) &&
        Objects.equals(this.memberGroupDistinguishedName, directoryGroupMember.memberGroupDistinguishedName) &&
        Objects.equals(this.memberGroupId, directoryGroupMember.memberGroupId) &&
        Objects.equals(this.groupDistinguishedName, directoryGroupMember.groupDistinguishedName) &&
        Objects.equals(this.nested, directoryGroupMember.nested) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(groupId, memberGroupDistinguishedName, memberGroupId, groupDistinguishedName, nested, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DirectoryGroupMember {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    memberGroupDistinguishedName: ").append(toIndentedString(memberGroupDistinguishedName)).append("\n");
    sb.append("    memberGroupId: ").append(toIndentedString(memberGroupId)).append("\n");
    sb.append("    groupDistinguishedName: ").append(toIndentedString(groupDistinguishedName)).append("\n");
    sb.append("    nested: ").append(toIndentedString(nested)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
