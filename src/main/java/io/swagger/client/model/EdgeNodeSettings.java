/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * The settings are used during deployment and consequent update of an edge, unless indicated otherwise. The settings are preferred over the deprecated settings in VsphereDeploymentConfig. The settings reflect the current configuraton on an edge node. If the settings lag with actual state on the edge, these may be refreshed at NSX Manager using API POST api/v1/transport-nodes /&amp;lt;transport-node-id&amp;gt;?action&#x3D;refresh_node_configuration&amp;resource_type&#x3D; EdgeNode 
 */
@Schema(description = "The settings are used during deployment and consequent update of an edge, unless indicated otherwise. The settings are preferred over the deprecated settings in VsphereDeploymentConfig. The settings reflect the current configuraton on an edge node. If the settings lag with actual state on the edge, these may be refreshed at NSX Manager using API POST api/v1/transport-nodes /&lt;transport-node-id&gt;?action=refresh_node_configuration&resource_type= EdgeNode ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class EdgeNodeSettings {
  @SerializedName("search_domains")
  private List<String> searchDomains = null;

  @SerializedName("dns_servers")
  private List<String> dnsServers = null;

  @SerializedName("ntp_servers")
  private List<String> ntpServers = null;

  @SerializedName("hostname")
  private String hostname = null;

  @SerializedName("enable_ssh")
  private Boolean enableSsh = false;

  @SerializedName("allow_ssh_root_login")
  private Boolean allowSshRootLogin = false;

  public EdgeNodeSettings searchDomains(List<String> searchDomains) {
    this.searchDomains = searchDomains;
    return this;
  }

  public EdgeNodeSettings addSearchDomainsItem(String searchDomainsItem) {
    if (this.searchDomains == null) {
      this.searchDomains = new ArrayList<String>();
    }
    this.searchDomains.add(searchDomainsItem);
    return this;
  }

   /**
   * List of domain names that are used to complete unqualified host names. 
   * @return searchDomains
  **/
  @Schema(description = "List of domain names that are used to complete unqualified host names. ")
  public List<String> getSearchDomains() {
    return searchDomains;
  }

  public void setSearchDomains(List<String> searchDomains) {
    this.searchDomains = searchDomains;
  }

  public EdgeNodeSettings dnsServers(List<String> dnsServers) {
    this.dnsServers = dnsServers;
    return this;
  }

  public EdgeNodeSettings addDnsServersItem(String dnsServersItem) {
    if (this.dnsServers == null) {
      this.dnsServers = new ArrayList<String>();
    }
    this.dnsServers.add(dnsServersItem);
    return this;
  }

   /**
   * List of DNS servers. 
   * @return dnsServers
  **/
  @Schema(description = "List of DNS servers. ")
  public List<String> getDnsServers() {
    return dnsServers;
  }

  public void setDnsServers(List<String> dnsServers) {
    this.dnsServers = dnsServers;
  }

  public EdgeNodeSettings ntpServers(List<String> ntpServers) {
    this.ntpServers = ntpServers;
    return this;
  }

  public EdgeNodeSettings addNtpServersItem(String ntpServersItem) {
    if (this.ntpServers == null) {
      this.ntpServers = new ArrayList<String>();
    }
    this.ntpServers.add(ntpServersItem);
    return this;
  }

   /**
   * List of NTP servers. 
   * @return ntpServers
  **/
  @Schema(description = "List of NTP servers. ")
  public List<String> getNtpServers() {
    return ntpServers;
  }

  public void setNtpServers(List<String> ntpServers) {
    this.ntpServers = ntpServers;
  }

  public EdgeNodeSettings hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * Host name or FQDN for edge node.
   * @return hostname
  **/
  @Schema(description = "Host name or FQDN for edge node.")
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }

  public EdgeNodeSettings enableSsh(Boolean enableSsh) {
    this.enableSsh = enableSsh;
    return this;
  }

   /**
   * Enabling SSH service is not recommended for security reasons. 
   * @return enableSsh
  **/
  @Schema(description = "Enabling SSH service is not recommended for security reasons. ")
  public Boolean isEnableSsh() {
    return enableSsh;
  }

  public void setEnableSsh(Boolean enableSsh) {
    this.enableSsh = enableSsh;
  }

  public EdgeNodeSettings allowSshRootLogin(Boolean allowSshRootLogin) {
    this.allowSshRootLogin = allowSshRootLogin;
    return this;
  }

   /**
   * Allowing root SSH logins is not recommended for security reasons. Edit of this property is not supported when updating transport node. Use the CLI to change this property. 
   * @return allowSshRootLogin
  **/
  @Schema(description = "Allowing root SSH logins is not recommended for security reasons. Edit of this property is not supported when updating transport node. Use the CLI to change this property. ")
  public Boolean isAllowSshRootLogin() {
    return allowSshRootLogin;
  }

  public void setAllowSshRootLogin(Boolean allowSshRootLogin) {
    this.allowSshRootLogin = allowSshRootLogin;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdgeNodeSettings edgeNodeSettings = (EdgeNodeSettings) o;
    return Objects.equals(this.searchDomains, edgeNodeSettings.searchDomains) &&
        Objects.equals(this.dnsServers, edgeNodeSettings.dnsServers) &&
        Objects.equals(this.ntpServers, edgeNodeSettings.ntpServers) &&
        Objects.equals(this.hostname, edgeNodeSettings.hostname) &&
        Objects.equals(this.enableSsh, edgeNodeSettings.enableSsh) &&
        Objects.equals(this.allowSshRootLogin, edgeNodeSettings.allowSshRootLogin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(searchDomains, dnsServers, ntpServers, hostname, enableSsh, allowSshRootLogin);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdgeNodeSettings {\n");
    
    sb.append("    searchDomains: ").append(toIndentedString(searchDomains)).append("\n");
    sb.append("    dnsServers: ").append(toIndentedString(dnsServers)).append("\n");
    sb.append("    ntpServers: ").append(toIndentedString(ntpServers)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    enableSsh: ").append(toIndentedString(enableSsh)).append("\n");
    sb.append("    allowSshRootLogin: ").append(toIndentedString(allowSshRootLogin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
