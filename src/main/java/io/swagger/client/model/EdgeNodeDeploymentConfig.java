/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.DeploymentConfig;
import io.swagger.client.model.NodeUserSettings;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * EdgeNodeDeploymentConfig
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class EdgeNodeDeploymentConfig {
  @SerializedName("node_user_settings")
  private NodeUserSettings nodeUserSettings = null;

  @SerializedName("vm_deployment_config")
  private DeploymentConfig vmDeploymentConfig = null;

  /**
   * Supported edge form factor.
   */
  @JsonAdapter(FormFactorEnum.Adapter.class)
  public enum FormFactorEnum {
    SMALL("SMALL"),
    MEDIUM("MEDIUM"),
    LARGE("LARGE");

    private String value;

    FormFactorEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static FormFactorEnum fromValue(String text) {
      for (FormFactorEnum b : FormFactorEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<FormFactorEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FormFactorEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FormFactorEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return FormFactorEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("form_factor")
  private FormFactorEnum formFactor = FormFactorEnum.MEDIUM;

  public EdgeNodeDeploymentConfig nodeUserSettings(NodeUserSettings nodeUserSettings) {
    this.nodeUserSettings = nodeUserSettings;
    return this;
  }

   /**
   * Get nodeUserSettings
   * @return nodeUserSettings
  **/
  @Schema(required = true, description = "")
  public NodeUserSettings getNodeUserSettings() {
    return nodeUserSettings;
  }

  public void setNodeUserSettings(NodeUserSettings nodeUserSettings) {
    this.nodeUserSettings = nodeUserSettings;
  }

  public EdgeNodeDeploymentConfig vmDeploymentConfig(DeploymentConfig vmDeploymentConfig) {
    this.vmDeploymentConfig = vmDeploymentConfig;
    return this;
  }

   /**
   * Get vmDeploymentConfig
   * @return vmDeploymentConfig
  **/
  @Schema(required = true, description = "")
  public DeploymentConfig getVmDeploymentConfig() {
    return vmDeploymentConfig;
  }

  public void setVmDeploymentConfig(DeploymentConfig vmDeploymentConfig) {
    this.vmDeploymentConfig = vmDeploymentConfig;
  }

  public EdgeNodeDeploymentConfig formFactor(FormFactorEnum formFactor) {
    this.formFactor = formFactor;
    return this;
  }

   /**
   * Supported edge form factor.
   * @return formFactor
  **/
  @Schema(description = "Supported edge form factor.")
  public FormFactorEnum getFormFactor() {
    return formFactor;
  }

  public void setFormFactor(FormFactorEnum formFactor) {
    this.formFactor = formFactor;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdgeNodeDeploymentConfig edgeNodeDeploymentConfig = (EdgeNodeDeploymentConfig) o;
    return Objects.equals(this.nodeUserSettings, edgeNodeDeploymentConfig.nodeUserSettings) &&
        Objects.equals(this.vmDeploymentConfig, edgeNodeDeploymentConfig.vmDeploymentConfig) &&
        Objects.equals(this.formFactor, edgeNodeDeploymentConfig.formFactor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nodeUserSettings, vmDeploymentConfig, formFactor);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdgeNodeDeploymentConfig {\n");
    
    sb.append("    nodeUserSettings: ").append(toIndentedString(nodeUserSettings)).append("\n");
    sb.append("    vmDeploymentConfig: ").append(toIndentedString(vmDeploymentConfig)).append("\n");
    sb.append("    formFactor: ").append(toIndentedString(formFactor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
