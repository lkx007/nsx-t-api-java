/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ManagedResource;
import io.swagger.client.model.Tag;
import io.swagger.client.model.VlanTrunkSpec;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.List;
/**
 * A bridge endpoint can be created on a bridge cluster or on an edge cluster. Few of the properties of this class will not be used depending on the type of bridge endpoint being created. When creating a bridge endpoint on a bridge cluster, following propeties will be used: vlan, bridge_cluster_id and ha_enable. Similarly, for creating a bridge endpoint on an edge cluster following properties will be used: vlan, bridge_endpoint_profile_id and vlan_transport_zone_id. 
 */
@Schema(description = "A bridge endpoint can be created on a bridge cluster or on an edge cluster. Few of the properties of this class will not be used depending on the type of bridge endpoint being created. When creating a bridge endpoint on a bridge cluster, following propeties will be used: vlan, bridge_cluster_id and ha_enable. Similarly, for creating a bridge endpoint on an edge cluster following properties will be used: vlan, bridge_endpoint_profile_id and vlan_transport_zone_id. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class BridgeEndpoint extends ManagedResource {
  @SerializedName("ha_enable")
  private Boolean haEnable = true;

  @SerializedName("bridge_cluster_id")
  private String bridgeClusterId = null;

  @SerializedName("vlan_transport_zone_id")
  private String vlanTransportZoneId = null;

  @SerializedName("bridge_endpoint_profile_id")
  private String bridgeEndpointProfileId = null;

  @SerializedName("uplink_teaming_policy_name")
  private String uplinkTeamingPolicyName = null;

  @SerializedName("vlan_trunk_spec")
  private VlanTrunkSpec vlanTrunkSpec = null;

  @SerializedName("vlan")
  private Long vlan = null;

  public BridgeEndpoint haEnable(Boolean haEnable) {
    this.haEnable = haEnable;
    return this;
  }

   /**
   * This field will not be used if an edge cluster is being used for the bridge endpoint 
   * @return haEnable
  **/
  @Schema(description = "This field will not be used if an edge cluster is being used for the bridge endpoint ")
  public Boolean isHaEnable() {
    return haEnable;
  }

  public void setHaEnable(Boolean haEnable) {
    this.haEnable = haEnable;
  }

  public BridgeEndpoint bridgeClusterId(String bridgeClusterId) {
    this.bridgeClusterId = bridgeClusterId;
    return this;
  }

   /**
   * This field will not be used if an edge cluster is being used for the bridge endpoint 
   * @return bridgeClusterId
  **/
  @Schema(description = "This field will not be used if an edge cluster is being used for the bridge endpoint ")
  public String getBridgeClusterId() {
    return bridgeClusterId;
  }

  public void setBridgeClusterId(String bridgeClusterId) {
    this.bridgeClusterId = bridgeClusterId;
  }

  public BridgeEndpoint vlanTransportZoneId(String vlanTransportZoneId) {
    this.vlanTransportZoneId = vlanTransportZoneId;
    return this;
  }

   /**
   * This field will not be used if a bridge cluster is being used for the bridge endpoint 
   * @return vlanTransportZoneId
  **/
  @Schema(description = "This field will not be used if a bridge cluster is being used for the bridge endpoint ")
  public String getVlanTransportZoneId() {
    return vlanTransportZoneId;
  }

  public void setVlanTransportZoneId(String vlanTransportZoneId) {
    this.vlanTransportZoneId = vlanTransportZoneId;
  }

  public BridgeEndpoint bridgeEndpointProfileId(String bridgeEndpointProfileId) {
    this.bridgeEndpointProfileId = bridgeEndpointProfileId;
    return this;
  }

   /**
   * This field will not be used if a bridge cluster is being used for the bridge endpoint 
   * @return bridgeEndpointProfileId
  **/
  @Schema(description = "This field will not be used if a bridge cluster is being used for the bridge endpoint ")
  public String getBridgeEndpointProfileId() {
    return bridgeEndpointProfileId;
  }

  public void setBridgeEndpointProfileId(String bridgeEndpointProfileId) {
    this.bridgeEndpointProfileId = bridgeEndpointProfileId;
  }

  public BridgeEndpoint uplinkTeamingPolicyName(String uplinkTeamingPolicyName) {
    this.uplinkTeamingPolicyName = uplinkTeamingPolicyName;
    return this;
  }

   /**
   * This name has to be one of the switching uplink teaming policy names listed inside the TransportZone. If this field is not specified, bridge will use the first pnic in host-switch config. This field will not be used if a bridge cluster is being used for the bridge endpoint
   * @return uplinkTeamingPolicyName
  **/
  @Schema(description = "This name has to be one of the switching uplink teaming policy names listed inside the TransportZone. If this field is not specified, bridge will use the first pnic in host-switch config. This field will not be used if a bridge cluster is being used for the bridge endpoint")
  public String getUplinkTeamingPolicyName() {
    return uplinkTeamingPolicyName;
  }

  public void setUplinkTeamingPolicyName(String uplinkTeamingPolicyName) {
    this.uplinkTeamingPolicyName = uplinkTeamingPolicyName;
  }

  public BridgeEndpoint vlanTrunkSpec(VlanTrunkSpec vlanTrunkSpec) {
    this.vlanTrunkSpec = vlanTrunkSpec;
    return this;
  }

   /**
   * Get vlanTrunkSpec
   * @return vlanTrunkSpec
  **/
  @Schema(description = "")
  public VlanTrunkSpec getVlanTrunkSpec() {
    return vlanTrunkSpec;
  }

  public void setVlanTrunkSpec(VlanTrunkSpec vlanTrunkSpec) {
    this.vlanTrunkSpec = vlanTrunkSpec;
  }

  public BridgeEndpoint vlan(Long vlan) {
    this.vlan = vlan;
    return this;
  }

   /**
   * This property is used for VLAN specification of bridge endpoint. It&#x27;s mutually exclusive with &#x27;vlan_trunk_spec&#x27;, either &#x27;vlan&#x27; or &#x27;vlan_trunk_spec&#x27; should be specified. 
   * @return vlan
  **/
  @Schema(description = "This property is used for VLAN specification of bridge endpoint. It's mutually exclusive with 'vlan_trunk_spec', either 'vlan' or 'vlan_trunk_spec' should be specified. ")
  public Long getVlan() {
    return vlan;
  }

  public void setVlan(Long vlan) {
    this.vlan = vlan;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BridgeEndpoint bridgeEndpoint = (BridgeEndpoint) o;
    return Objects.equals(this.haEnable, bridgeEndpoint.haEnable) &&
        Objects.equals(this.bridgeClusterId, bridgeEndpoint.bridgeClusterId) &&
        Objects.equals(this.vlanTransportZoneId, bridgeEndpoint.vlanTransportZoneId) &&
        Objects.equals(this.bridgeEndpointProfileId, bridgeEndpoint.bridgeEndpointProfileId) &&
        Objects.equals(this.uplinkTeamingPolicyName, bridgeEndpoint.uplinkTeamingPolicyName) &&
        Objects.equals(this.vlanTrunkSpec, bridgeEndpoint.vlanTrunkSpec) &&
        Objects.equals(this.vlan, bridgeEndpoint.vlan) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(haEnable, bridgeClusterId, vlanTransportZoneId, bridgeEndpointProfileId, uplinkTeamingPolicyName, vlanTrunkSpec, vlan, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BridgeEndpoint {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    haEnable: ").append(toIndentedString(haEnable)).append("\n");
    sb.append("    bridgeClusterId: ").append(toIndentedString(bridgeClusterId)).append("\n");
    sb.append("    vlanTransportZoneId: ").append(toIndentedString(vlanTransportZoneId)).append("\n");
    sb.append("    bridgeEndpointProfileId: ").append(toIndentedString(bridgeEndpointProfileId)).append("\n");
    sb.append("    uplinkTeamingPolicyName: ").append(toIndentedString(uplinkTeamingPolicyName)).append("\n");
    sb.append("    vlanTrunkSpec: ").append(toIndentedString(vlanTrunkSpec)).append("\n");
    sb.append("    vlan: ").append(toIndentedString(vlan)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
