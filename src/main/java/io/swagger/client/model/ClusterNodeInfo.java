/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.NodeCertificateInfo;
import io.swagger.client.model.NodeEntityInfo;
import io.swagger.client.model.NodeMessagingClientInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ClusterNodeInfo
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class ClusterNodeInfo {
  /**
   * Node clustering status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    JOINING("JOINING"),
    JOINED("JOINED"),
    REMOVING("REMOVING"),
    REMOVED("REMOVED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("msg_clients")
  private List<NodeMessagingClientInfo> msgClients = null;

  @SerializedName("node_uuid")
  private String nodeUuid = null;

  @SerializedName("display_name")
  private String displayName = null;

  @SerializedName("entities")
  private List<NodeEntityInfo> entities = null;

  @SerializedName("certificates")
  private List<NodeCertificateInfo> certificates = null;

  @SerializedName("fqdn")
  private String fqdn = null;

   /**
   * Node clustering status
   * @return status
  **/
  @Schema(description = "Node clustering status")
  public StatusEnum getStatus() {
    return status;
  }

  public ClusterNodeInfo msgClients(List<NodeMessagingClientInfo> msgClients) {
    this.msgClients = msgClients;
    return this;
  }

  public ClusterNodeInfo addMsgClientsItem(NodeMessagingClientInfo msgClientsItem) {
    if (this.msgClients == null) {
      this.msgClients = new ArrayList<NodeMessagingClientInfo>();
    }
    this.msgClients.add(msgClientsItem);
    return this;
  }

   /**
   * Messaging client of all entities
   * @return msgClients
  **/
  @Schema(description = "Messaging client of all entities")
  public List<NodeMessagingClientInfo> getMsgClients() {
    return msgClients;
  }

  public void setMsgClients(List<NodeMessagingClientInfo> msgClients) {
    this.msgClients = msgClients;
  }

   /**
   * Unique identifier of this node
   * @return nodeUuid
  **/
  @Schema(description = "Unique identifier of this node")
  public String getNodeUuid() {
    return nodeUuid;
  }

  public ClusterNodeInfo displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * The display name of this node
   * @return displayName
  **/
  @Schema(description = "The display name of this node")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public ClusterNodeInfo entities(List<NodeEntityInfo> entities) {
    this.entities = entities;
    return this;
  }

  public ClusterNodeInfo addEntitiesItem(NodeEntityInfo entitiesItem) {
    if (this.entities == null) {
      this.entities = new ArrayList<NodeEntityInfo>();
    }
    this.entities.add(entitiesItem);
    return this;
  }

   /**
   * Service endpoint of all entities
   * @return entities
  **/
  @Schema(description = "Service endpoint of all entities")
  public List<NodeEntityInfo> getEntities() {
    return entities;
  }

  public void setEntities(List<NodeEntityInfo> entities) {
    this.entities = entities;
  }

  public ClusterNodeInfo certificates(List<NodeCertificateInfo> certificates) {
    this.certificates = certificates;
    return this;
  }

  public ClusterNodeInfo addCertificatesItem(NodeCertificateInfo certificatesItem) {
    if (this.certificates == null) {
      this.certificates = new ArrayList<NodeCertificateInfo>();
    }
    this.certificates.add(certificatesItem);
    return this;
  }

   /**
   * Certificate and thumbprint of all entities
   * @return certificates
  **/
  @Schema(description = "Certificate and thumbprint of all entities")
  public List<NodeCertificateInfo> getCertificates() {
    return certificates;
  }

  public void setCertificates(List<NodeCertificateInfo> certificates) {
    this.certificates = certificates;
  }

  public ClusterNodeInfo fqdn(String fqdn) {
    this.fqdn = fqdn;
    return this;
  }

   /**
   * The fqdn of this node
   * @return fqdn
  **/
  @Schema(description = "The fqdn of this node")
  public String getFqdn() {
    return fqdn;
  }

  public void setFqdn(String fqdn) {
    this.fqdn = fqdn;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClusterNodeInfo clusterNodeInfo = (ClusterNodeInfo) o;
    return Objects.equals(this.status, clusterNodeInfo.status) &&
        Objects.equals(this.msgClients, clusterNodeInfo.msgClients) &&
        Objects.equals(this.nodeUuid, clusterNodeInfo.nodeUuid) &&
        Objects.equals(this.displayName, clusterNodeInfo.displayName) &&
        Objects.equals(this.entities, clusterNodeInfo.entities) &&
        Objects.equals(this.certificates, clusterNodeInfo.certificates) &&
        Objects.equals(this.fqdn, clusterNodeInfo.fqdn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, msgClients, nodeUuid, displayName, entities, certificates, fqdn);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusterNodeInfo {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    msgClients: ").append(toIndentedString(msgClients)).append("\n");
    sb.append("    nodeUuid: ").append(toIndentedString(nodeUuid)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    entities: ").append(toIndentedString(entities)).append("\n");
    sb.append("    certificates: ").append(toIndentedString(certificates)).append("\n");
    sb.append("    fqdn: ").append(toIndentedString(fqdn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
