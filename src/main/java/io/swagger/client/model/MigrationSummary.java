/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ComponentTargetVersion;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * MigrationSummary
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class MigrationSummary {
  @SerializedName("target_version")
  private String targetVersion = null;

  /**
   * Status of migration
   */
  @JsonAdapter(MigrationStatusEnum.Adapter.class)
  public enum MigrationStatusEnum {
    SUCCESS("SUCCESS"),
    FAILED("FAILED"),
    IN_PROGRESS("IN_PROGRESS"),
    NOT_STARTED("NOT_STARTED"),
    PAUSED("PAUSED");

    private String value;

    MigrationStatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static MigrationStatusEnum fromValue(String text) {
      for (MigrationStatusEnum b : MigrationStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<MigrationStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MigrationStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MigrationStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return MigrationStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("migration_status")
  private MigrationStatusEnum migrationStatus = null;

  @SerializedName("migration_coordinator_version")
  private String migrationCoordinatorVersion = null;

  @SerializedName("system_version")
  private String systemVersion = null;

  @SerializedName("component_target_versions")
  private List<ComponentTargetVersion> componentTargetVersions = null;

   /**
   * Target system version
   * @return targetVersion
  **/
  @Schema(description = "Target system version")
  public String getTargetVersion() {
    return targetVersion;
  }

   /**
   * Status of migration
   * @return migrationStatus
  **/
  @Schema(description = "Status of migration")
  public MigrationStatusEnum getMigrationStatus() {
    return migrationStatus;
  }

   /**
   * Current version of migration coordinator
   * @return migrationCoordinatorVersion
  **/
  @Schema(description = "Current version of migration coordinator")
  public String getMigrationCoordinatorVersion() {
    return migrationCoordinatorVersion;
  }

   /**
   * Current system version
   * @return systemVersion
  **/
  @Schema(description = "Current system version")
  public String getSystemVersion() {
    return systemVersion;
  }

   /**
   * Get componentTargetVersions
   * @return componentTargetVersions
  **/
  @Schema(description = "")
  public List<ComponentTargetVersion> getComponentTargetVersions() {
    return componentTargetVersions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MigrationSummary migrationSummary = (MigrationSummary) o;
    return Objects.equals(this.targetVersion, migrationSummary.targetVersion) &&
        Objects.equals(this.migrationStatus, migrationSummary.migrationStatus) &&
        Objects.equals(this.migrationCoordinatorVersion, migrationSummary.migrationCoordinatorVersion) &&
        Objects.equals(this.systemVersion, migrationSummary.systemVersion) &&
        Objects.equals(this.componentTargetVersions, migrationSummary.componentTargetVersions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(targetVersion, migrationStatus, migrationCoordinatorVersion, systemVersion, componentTargetVersions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MigrationSummary {\n");
    
    sb.append("    targetVersion: ").append(toIndentedString(targetVersion)).append("\n");
    sb.append("    migrationStatus: ").append(toIndentedString(migrationStatus)).append("\n");
    sb.append("    migrationCoordinatorVersion: ").append(toIndentedString(migrationCoordinatorVersion)).append("\n");
    sb.append("    systemVersion: ").append(toIndentedString(systemVersion)).append("\n");
    sb.append("    componentTargetVersions: ").append(toIndentedString(componentTargetVersions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
