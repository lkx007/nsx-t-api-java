/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Information about a management plane node this transport node is configured to communicate with
 */
@Schema(description = "Information about a management plane node this transport node is configured to communicate with")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class BrokerProperties {
  @SerializedName("BrokerIsMaster")
  private String brokerIsMaster = null;

  @SerializedName("BrokerIpAddress")
  private String brokerIpAddress = null;

  @SerializedName("BrokerVirtualHost")
  private String brokerVirtualHost = null;

  @SerializedName("BrokerSslCertThumbprint")
  private String brokerSslCertThumbprint = null;

  @SerializedName("BrokerPort")
  private String brokerPort = null;

  @SerializedName("BrokerFqdn")
  private String brokerFqdn = null;

  public BrokerProperties brokerIsMaster(String brokerIsMaster) {
    this.brokerIsMaster = brokerIsMaster;
    return this;
  }

   /**
   * Indicates whether this broker is the master.
   * @return brokerIsMaster
  **/
  @Schema(description = "Indicates whether this broker is the master.")
  public String getBrokerIsMaster() {
    return brokerIsMaster;
  }

  public void setBrokerIsMaster(String brokerIsMaster) {
    this.brokerIsMaster = brokerIsMaster;
  }

  public BrokerProperties brokerIpAddress(String brokerIpAddress) {
    this.brokerIpAddress = brokerIpAddress;
    return this;
  }

   /**
   * IP address or hostname of the message bus broker on the management plane node.
   * @return brokerIpAddress
  **/
  @Schema(required = true, description = "IP address or hostname of the message bus broker on the management plane node.")
  public String getBrokerIpAddress() {
    return brokerIpAddress;
  }

  public void setBrokerIpAddress(String brokerIpAddress) {
    this.brokerIpAddress = brokerIpAddress;
  }

  public BrokerProperties brokerVirtualHost(String brokerVirtualHost) {
    this.brokerVirtualHost = brokerVirtualHost;
    return this;
  }

   /**
   * Type of host running the broker.
   * @return brokerVirtualHost
  **/
  @Schema(description = "Type of host running the broker.")
  public String getBrokerVirtualHost() {
    return brokerVirtualHost;
  }

  public void setBrokerVirtualHost(String brokerVirtualHost) {
    this.brokerVirtualHost = brokerVirtualHost;
  }

  public BrokerProperties brokerSslCertThumbprint(String brokerSslCertThumbprint) {
    this.brokerSslCertThumbprint = brokerSslCertThumbprint;
    return this;
  }

   /**
   * Certificate thumbprint of the message bus broker on the management plane node.
   * @return brokerSslCertThumbprint
  **/
  @Schema(required = true, description = "Certificate thumbprint of the message bus broker on the management plane node.")
  public String getBrokerSslCertThumbprint() {
    return brokerSslCertThumbprint;
  }

  public void setBrokerSslCertThumbprint(String brokerSslCertThumbprint) {
    this.brokerSslCertThumbprint = brokerSslCertThumbprint;
  }

  public BrokerProperties brokerPort(String brokerPort) {
    this.brokerPort = brokerPort;
    return this;
  }

   /**
   * Port number of the message bus broker on the management plane node.
   * @return brokerPort
  **/
  @Schema(description = "Port number of the message bus broker on the management plane node.")
  public String getBrokerPort() {
    return brokerPort;
  }

  public void setBrokerPort(String brokerPort) {
    this.brokerPort = brokerPort;
  }

  public BrokerProperties brokerFqdn(String brokerFqdn) {
    this.brokerFqdn = brokerFqdn;
    return this;
  }

   /**
   * Fully qualified domain name of the message bus broker on the management plane node.
   * @return brokerFqdn
  **/
  @Schema(description = "Fully qualified domain name of the message bus broker on the management plane node.")
  public String getBrokerFqdn() {
    return brokerFqdn;
  }

  public void setBrokerFqdn(String brokerFqdn) {
    this.brokerFqdn = brokerFqdn;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BrokerProperties brokerProperties = (BrokerProperties) o;
    return Objects.equals(this.brokerIsMaster, brokerProperties.brokerIsMaster) &&
        Objects.equals(this.brokerIpAddress, brokerProperties.brokerIpAddress) &&
        Objects.equals(this.brokerVirtualHost, brokerProperties.brokerVirtualHost) &&
        Objects.equals(this.brokerSslCertThumbprint, brokerProperties.brokerSslCertThumbprint) &&
        Objects.equals(this.brokerPort, brokerProperties.brokerPort) &&
        Objects.equals(this.brokerFqdn, brokerProperties.brokerFqdn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(brokerIsMaster, brokerIpAddress, brokerVirtualHost, brokerSslCertThumbprint, brokerPort, brokerFqdn);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BrokerProperties {\n");
    
    sb.append("    brokerIsMaster: ").append(toIndentedString(brokerIsMaster)).append("\n");
    sb.append("    brokerIpAddress: ").append(toIndentedString(brokerIpAddress)).append("\n");
    sb.append("    brokerVirtualHost: ").append(toIndentedString(brokerVirtualHost)).append("\n");
    sb.append("    brokerSslCertThumbprint: ").append(toIndentedString(brokerSslCertThumbprint)).append("\n");
    sb.append("    brokerPort: ").append(toIndentedString(brokerPort)).append("\n");
    sb.append("    brokerFqdn: ").append(toIndentedString(brokerFqdn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
