/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Role
 */
@Schema(description = "Role")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class NsxRole {
  /**
   * Role name
   */
  @JsonAdapter(RoleEnum.Adapter.class)
  public enum RoleEnum {
    READ_ONLY_API_USERS("read_only_api_users"),
    READ_WRITE_API_USERS("read_write_api_users"),
    ENTERPRISE_ADMIN("enterprise_admin"),
    AUDITOR("auditor"),
    NETWORK_ENGINEER("network_engineer"),
    NETWORK_OP("network_op"),
    SECURITY_ENGINEER("security_engineer"),
    SECURITY_OP("security_op"),
    LB_ADMIN("lb_admin"),
    LB_AUDITOR("lb_auditor"),
    CLOUD_SERVICE_ADMIN("cloud_service_admin"),
    CLOUD_SERVICE_AUDITOR("cloud_service_auditor"),
    SITE_RELIABILITY_ENGINEER("site_reliability_engineer"),
    SITE_RELIABILITY_AUDITOR("site_reliability_auditor"),
    CLOUD_ADMIN("cloud_admin"),
    CLOUD_AUDITOR("cloud_auditor");

    private String value;

    RoleEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static RoleEnum fromValue(String text) {
      for (RoleEnum b : RoleEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<RoleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RoleEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RoleEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RoleEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("role")
  private RoleEnum role = null;

  /**
   * Gets or Sets permissions
   */
  @JsonAdapter(PermissionsEnum.Adapter.class)
  public enum PermissionsEnum {
    READ_API("read-api"),
    READ_WRITE_API("read-write-api"),
    CRUD("crud"),
    READ("read"),
    EXECUTE("execute"),
    NONE("none");

    private String value;

    PermissionsEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static PermissionsEnum fromValue(String text) {
      for (PermissionsEnum b : PermissionsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<PermissionsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PermissionsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PermissionsEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PermissionsEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("permissions")
  private List<PermissionsEnum> permissions = null;

  public NsxRole role(RoleEnum role) {
    this.role = role;
    return this;
  }

   /**
   * Role name
   * @return role
  **/
  @Schema(required = true, description = "Role name")
  public RoleEnum getRole() {
    return role;
  }

  public void setRole(RoleEnum role) {
    this.role = role;
  }

  public NsxRole permissions(List<PermissionsEnum> permissions) {
    this.permissions = permissions;
    return this;
  }

  public NsxRole addPermissionsItem(PermissionsEnum permissionsItem) {
    if (this.permissions == null) {
      this.permissions = new ArrayList<PermissionsEnum>();
    }
    this.permissions.add(permissionsItem);
    return this;
  }

   /**
   * Please use the /user-info/permissions api to get the permission that the user has on each feature.
   * @return permissions
  **/
  @Schema(description = "Please use the /user-info/permissions api to get the permission that the user has on each feature.")
  public List<PermissionsEnum> getPermissions() {
    return permissions;
  }

  public void setPermissions(List<PermissionsEnum> permissions) {
    this.permissions = permissions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NsxRole nsxRole = (NsxRole) o;
    return Objects.equals(this.role, nsxRole.role) &&
        Objects.equals(this.permissions, nsxRole.permissions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(role, permissions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NsxRole {\n");
    
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
