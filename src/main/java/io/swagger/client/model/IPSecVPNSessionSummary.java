/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.IPSecVPNSessionTrafficSummary;
import io.swagger.client.model.IPSecVPNTrafficCounters;
import io.swagger.client.model.IPsecVPNIKESessionSummary;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Summarized view of all selected IPSec VPN sessions.
 */
@Schema(description = "Summarized view of all selected IPSec VPN sessions.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class IPSecVPNSessionSummary {
  @SerializedName("traffic_summary_per_session")
  private List<IPSecVPNSessionTrafficSummary> trafficSummaryPerSession = null;

  @SerializedName("last_update_timestamp")
  private Long lastUpdateTimestamp = null;

  @SerializedName("session_summary")
  private IPsecVPNIKESessionSummary sessionSummary = null;

  @SerializedName("aggregate_traffic_counters")
  private IPSecVPNTrafficCounters aggregateTrafficCounters = null;

  public IPSecVPNSessionSummary trafficSummaryPerSession(List<IPSecVPNSessionTrafficSummary> trafficSummaryPerSession) {
    this.trafficSummaryPerSession = trafficSummaryPerSession;
    return this;
  }

  public IPSecVPNSessionSummary addTrafficSummaryPerSessionItem(IPSecVPNSessionTrafficSummary trafficSummaryPerSessionItem) {
    if (this.trafficSummaryPerSession == null) {
      this.trafficSummaryPerSession = new ArrayList<IPSecVPNSessionTrafficSummary>();
    }
    this.trafficSummaryPerSession.add(trafficSummaryPerSessionItem);
    return this;
  }

   /**
   * Traffic summary per session.
   * @return trafficSummaryPerSession
  **/
  @Schema(description = "Traffic summary per session.")
  public List<IPSecVPNSessionTrafficSummary> getTrafficSummaryPerSession() {
    return trafficSummaryPerSession;
  }

  public void setTrafficSummaryPerSession(List<IPSecVPNSessionTrafficSummary> trafficSummaryPerSession) {
    this.trafficSummaryPerSession = trafficSummaryPerSession;
  }

   /**
   * Timestamp when the data was last updated.
   * @return lastUpdateTimestamp
  **/
  @Schema(description = "Timestamp when the data was last updated.")
  public Long getLastUpdateTimestamp() {
    return lastUpdateTimestamp;
  }

  public IPSecVPNSessionSummary sessionSummary(IPsecVPNIKESessionSummary sessionSummary) {
    this.sessionSummary = sessionSummary;
    return this;
  }

   /**
   * Get sessionSummary
   * @return sessionSummary
  **/
  @Schema(description = "")
  public IPsecVPNIKESessionSummary getSessionSummary() {
    return sessionSummary;
  }

  public void setSessionSummary(IPsecVPNIKESessionSummary sessionSummary) {
    this.sessionSummary = sessionSummary;
  }

  public IPSecVPNSessionSummary aggregateTrafficCounters(IPSecVPNTrafficCounters aggregateTrafficCounters) {
    this.aggregateTrafficCounters = aggregateTrafficCounters;
    return this;
  }

   /**
   * Get aggregateTrafficCounters
   * @return aggregateTrafficCounters
  **/
  @Schema(description = "")
  public IPSecVPNTrafficCounters getAggregateTrafficCounters() {
    return aggregateTrafficCounters;
  }

  public void setAggregateTrafficCounters(IPSecVPNTrafficCounters aggregateTrafficCounters) {
    this.aggregateTrafficCounters = aggregateTrafficCounters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IPSecVPNSessionSummary ipSecVPNSessionSummary = (IPSecVPNSessionSummary) o;
    return Objects.equals(this.trafficSummaryPerSession, ipSecVPNSessionSummary.trafficSummaryPerSession) &&
        Objects.equals(this.lastUpdateTimestamp, ipSecVPNSessionSummary.lastUpdateTimestamp) &&
        Objects.equals(this.sessionSummary, ipSecVPNSessionSummary.sessionSummary) &&
        Objects.equals(this.aggregateTrafficCounters, ipSecVPNSessionSummary.aggregateTrafficCounters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(trafficSummaryPerSession, lastUpdateTimestamp, sessionSummary, aggregateTrafficCounters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IPSecVPNSessionSummary {\n");
    
    sb.append("    trafficSummaryPerSession: ").append(toIndentedString(trafficSummaryPerSession)).append("\n");
    sb.append("    lastUpdateTimestamp: ").append(toIndentedString(lastUpdateTimestamp)).append("\n");
    sb.append("    sessionSummary: ").append(toIndentedString(sessionSummary)).append("\n");
    sb.append("    aggregateTrafficCounters: ").append(toIndentedString(aggregateTrafficCounters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
