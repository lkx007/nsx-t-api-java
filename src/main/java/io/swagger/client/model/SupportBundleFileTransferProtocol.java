/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.SupportBundleFileTransferAuthenticationScheme;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * SupportBundleFileTransferProtocol
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class SupportBundleFileTransferProtocol {
  @SerializedName("ssh_fingerprint")
  private String sshFingerprint = null;

  /**
   * Protocol name
   */
  @JsonAdapter(NameEnum.Adapter.class)
  public enum NameEnum {
    SCP("SCP"),
    SFTP("SFTP");

    private String value;

    NameEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static NameEnum fromValue(String text) {
      for (NameEnum b : NameEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<NameEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final NameEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public NameEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return NameEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("name")
  private NameEnum name = null;

  @SerializedName("authentication_scheme")
  private SupportBundleFileTransferAuthenticationScheme authenticationScheme = null;

  public SupportBundleFileTransferProtocol sshFingerprint(String sshFingerprint) {
    this.sshFingerprint = sshFingerprint;
    return this;
  }

   /**
   * SSH fingerprint of server
   * @return sshFingerprint
  **/
  @Schema(required = true, description = "SSH fingerprint of server")
  public String getSshFingerprint() {
    return sshFingerprint;
  }

  public void setSshFingerprint(String sshFingerprint) {
    this.sshFingerprint = sshFingerprint;
  }

  public SupportBundleFileTransferProtocol name(NameEnum name) {
    this.name = name;
    return this;
  }

   /**
   * Protocol name
   * @return name
  **/
  @Schema(required = true, description = "Protocol name")
  public NameEnum getName() {
    return name;
  }

  public void setName(NameEnum name) {
    this.name = name;
  }

  public SupportBundleFileTransferProtocol authenticationScheme(SupportBundleFileTransferAuthenticationScheme authenticationScheme) {
    this.authenticationScheme = authenticationScheme;
    return this;
  }

   /**
   * Get authenticationScheme
   * @return authenticationScheme
  **/
  @Schema(required = true, description = "")
  public SupportBundleFileTransferAuthenticationScheme getAuthenticationScheme() {
    return authenticationScheme;
  }

  public void setAuthenticationScheme(SupportBundleFileTransferAuthenticationScheme authenticationScheme) {
    this.authenticationScheme = authenticationScheme;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SupportBundleFileTransferProtocol supportBundleFileTransferProtocol = (SupportBundleFileTransferProtocol) o;
    return Objects.equals(this.sshFingerprint, supportBundleFileTransferProtocol.sshFingerprint) &&
        Objects.equals(this.name, supportBundleFileTransferProtocol.name) &&
        Objects.equals(this.authenticationScheme, supportBundleFileTransferProtocol.authenticationScheme);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sshFingerprint, name, authenticationScheme);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SupportBundleFileTransferProtocol {\n");
    
    sb.append("    sshFingerprint: ").append(toIndentedString(sshFingerprint)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    authenticationScheme: ").append(toIndentedString(authenticationScheme)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
