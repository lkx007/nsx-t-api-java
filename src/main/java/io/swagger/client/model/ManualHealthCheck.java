/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.HealthCheckResult;
import io.swagger.client.model.HealthCheckSpecVlans;
import io.swagger.client.model.ManagedResource;
import io.swagger.client.model.Tag;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.List;
/**
 * Describes a manual check to evaluate the status of a transport zone. 
 */
@Schema(description = "Describes a manual check to evaluate the status of a transport zone. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class ManualHealthCheck extends ManagedResource {
  @SerializedName("transport_zone_id")
  private String transportZoneId = null;

  @SerializedName("vlans")
  private HealthCheckSpecVlans vlans = null;

  /**
   * The operation status for health check 
   */
  @JsonAdapter(OperationStatusEnum.Adapter.class)
  public enum OperationStatusEnum {
    IN_PROGRESS("IN_PROGRESS"),
    FINISHED("FINISHED");

    private String value;

    OperationStatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static OperationStatusEnum fromValue(String text) {
      for (OperationStatusEnum b : OperationStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<OperationStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OperationStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OperationStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return OperationStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("operation_status")
  private OperationStatusEnum operationStatus = null;

  @SerializedName("result")
  private HealthCheckResult result = null;

  public ManualHealthCheck transportZoneId(String transportZoneId) {
    this.transportZoneId = transportZoneId;
    return this;
  }

   /**
   * The entity ID works as a filter param. Entity ID and entity type should   be both provided or not at a query. 
   * @return transportZoneId
  **/
  @Schema(required = true, description = "The entity ID works as a filter param. Entity ID and entity type should   be both provided or not at a query. ")
  public String getTransportZoneId() {
    return transportZoneId;
  }

  public void setTransportZoneId(String transportZoneId) {
    this.transportZoneId = transportZoneId;
  }

  public ManualHealthCheck vlans(HealthCheckSpecVlans vlans) {
    this.vlans = vlans;
    return this;
  }

   /**
   * Get vlans
   * @return vlans
  **/
  @Schema(required = true, description = "")
  public HealthCheckSpecVlans getVlans() {
    return vlans;
  }

  public void setVlans(HealthCheckSpecVlans vlans) {
    this.vlans = vlans;
  }

   /**
   * The operation status for health check 
   * @return operationStatus
  **/
  @Schema(description = "The operation status for health check ")
  public OperationStatusEnum getOperationStatus() {
    return operationStatus;
  }

  public ManualHealthCheck result(HealthCheckResult result) {
    this.result = result;
    return this;
  }

   /**
   * Get result
   * @return result
  **/
  @Schema(description = "")
  public HealthCheckResult getResult() {
    return result;
  }

  public void setResult(HealthCheckResult result) {
    this.result = result;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManualHealthCheck manualHealthCheck = (ManualHealthCheck) o;
    return Objects.equals(this.transportZoneId, manualHealthCheck.transportZoneId) &&
        Objects.equals(this.vlans, manualHealthCheck.vlans) &&
        Objects.equals(this.operationStatus, manualHealthCheck.operationStatus) &&
        Objects.equals(this.result, manualHealthCheck.result) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transportZoneId, vlans, operationStatus, result, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManualHealthCheck {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    transportZoneId: ").append(toIndentedString(transportZoneId)).append("\n");
    sb.append("    vlans: ").append(toIndentedString(vlans)).append("\n");
    sb.append("    operationStatus: ").append(toIndentedString(operationStatus)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
