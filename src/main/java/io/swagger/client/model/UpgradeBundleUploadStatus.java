/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * Upload status of upgrade bundle uploaded from url
 */
@Schema(description = "Upload status of upgrade bundle uploaded from url")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class UpgradeBundleUploadStatus {
  @SerializedName("url")
  private String url = null;

  /**
   * Current status of upgrade bundle upload
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    UPLOADING("UPLOADING"),
    VERIFYING("VERIFYING"),
    SUCCESS("SUCCESS"),
    FAILED("FAILED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("detailed_status")
  private String detailedStatus = null;

  @SerializedName("percent")
  private BigDecimal percent = null;

   /**
   * URL for uploading upgrade bundle
   * @return url
  **/
  @Schema(description = "URL for uploading upgrade bundle")
  public String getUrl() {
    return url;
  }

   /**
   * Current status of upgrade bundle upload
   * @return status
  **/
  @Schema(description = "Current status of upgrade bundle upload")
  public StatusEnum getStatus() {
    return status;
  }

   /**
   * Detailed status of upgrade bundle upload
   * @return detailedStatus
  **/
  @Schema(description = "Detailed status of upgrade bundle upload")
  public String getDetailedStatus() {
    return detailedStatus;
  }

   /**
   * Percent of bundle uploaded from URL
   * @return percent
  **/
  @Schema(description = "Percent of bundle uploaded from URL")
  public BigDecimal getPercent() {
    return percent;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpgradeBundleUploadStatus upgradeBundleUploadStatus = (UpgradeBundleUploadStatus) o;
    return Objects.equals(this.url, upgradeBundleUploadStatus.url) &&
        Objects.equals(this.status, upgradeBundleUploadStatus.status) &&
        Objects.equals(this.detailedStatus, upgradeBundleUploadStatus.detailedStatus) &&
        Objects.equals(this.percent, upgradeBundleUploadStatus.percent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, status, detailedStatus, percent);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpgradeBundleUploadStatus {\n");
    
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    detailedStatus: ").append(toIndentedString(detailedStatus)).append("\n");
    sb.append("    percent: ").append(toIndentedString(percent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
