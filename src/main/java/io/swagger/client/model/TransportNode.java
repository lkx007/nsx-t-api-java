/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.HostSwitch;
import io.swagger.client.model.HostSwitchSpec;
import io.swagger.client.model.ManagedResource;
import io.swagger.client.model.Node;
import io.swagger.client.model.Tag;
import io.swagger.client.model.TransportZoneEndPoint;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Transport Node
 */
@Schema(description = "Transport Node")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class TransportNode extends ManagedResource {
  @SerializedName("host_switch_spec")
  private HostSwitchSpec hostSwitchSpec = null;

  @SerializedName("node_id")
  private String nodeId = null;

  @SerializedName("node_deployment_info")
  private Node nodeDeploymentInfo = null;

  @SerializedName("host_switches")
  private List<HostSwitch> hostSwitches = null;

  /**
   * The property is read-only, used for querying result. User could update transport node maintenance mode by UpdateTransportNodeMaintenanceMode call.
   */
  @JsonAdapter(MaintenanceModeEnum.Adapter.class)
  public enum MaintenanceModeEnum {
    ENABLED("ENABLED"),
    FORCE_ENABLED("FORCE_ENABLED"),
    DISABLED("DISABLED");

    private String value;

    MaintenanceModeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static MaintenanceModeEnum fromValue(String text) {
      for (MaintenanceModeEnum b : MaintenanceModeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<MaintenanceModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MaintenanceModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MaintenanceModeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return MaintenanceModeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("maintenance_mode")
  private MaintenanceModeEnum maintenanceMode = null;

  @SerializedName("failure_domain_id")
  private String failureDomainId = null;

  @SerializedName("is_overridden")
  private Boolean isOverridden = null;

  @SerializedName("transport_zone_endpoints")
  private List<TransportZoneEndPoint> transportZoneEndpoints = null;

  public TransportNode hostSwitchSpec(HostSwitchSpec hostSwitchSpec) {
    this.hostSwitchSpec = hostSwitchSpec;
    return this;
  }

   /**
   * Get hostSwitchSpec
   * @return hostSwitchSpec
  **/
  @Schema(description = "")
  public HostSwitchSpec getHostSwitchSpec() {
    return hostSwitchSpec;
  }

  public void setHostSwitchSpec(HostSwitchSpec hostSwitchSpec) {
    this.hostSwitchSpec = hostSwitchSpec;
  }

  public TransportNode nodeId(String nodeId) {
    this.nodeId = nodeId;
    return this;
  }

   /**
   * Unique Id of the fabric node
   * @return nodeId
  **/
  @Schema(description = "Unique Id of the fabric node")
  public String getNodeId() {
    return nodeId;
  }

  public void setNodeId(String nodeId) {
    this.nodeId = nodeId;
  }

  public TransportNode nodeDeploymentInfo(Node nodeDeploymentInfo) {
    this.nodeDeploymentInfo = nodeDeploymentInfo;
    return this;
  }

   /**
   * Get nodeDeploymentInfo
   * @return nodeDeploymentInfo
  **/
  @Schema(description = "")
  public Node getNodeDeploymentInfo() {
    return nodeDeploymentInfo;
  }

  public void setNodeDeploymentInfo(Node nodeDeploymentInfo) {
    this.nodeDeploymentInfo = nodeDeploymentInfo;
  }

  public TransportNode hostSwitches(List<HostSwitch> hostSwitches) {
    this.hostSwitches = hostSwitches;
    return this;
  }

  public TransportNode addHostSwitchesItem(HostSwitch hostSwitchesItem) {
    if (this.hostSwitches == null) {
      this.hostSwitches = new ArrayList<HostSwitch>();
    }
    this.hostSwitches.add(hostSwitchesItem);
    return this;
  }

   /**
   * This property is deprecated in favor of &#x27;host_switch_spec&#x27;. Property &#x27;host_switches&#x27; can only be used for NSX managed transport nodes. &#x27;host_switch_spec&#x27; can be used for both NSX managed or manually preconfigured host switches.
   * @return hostSwitches
  **/
  @Schema(description = "This property is deprecated in favor of 'host_switch_spec'. Property 'host_switches' can only be used for NSX managed transport nodes. 'host_switch_spec' can be used for both NSX managed or manually preconfigured host switches.")
  public List<HostSwitch> getHostSwitches() {
    return hostSwitches;
  }

  public void setHostSwitches(List<HostSwitch> hostSwitches) {
    this.hostSwitches = hostSwitches;
  }

   /**
   * The property is read-only, used for querying result. User could update transport node maintenance mode by UpdateTransportNodeMaintenanceMode call.
   * @return maintenanceMode
  **/
  @Schema(description = "The property is read-only, used for querying result. User could update transport node maintenance mode by UpdateTransportNodeMaintenanceMode call.")
  public MaintenanceModeEnum getMaintenanceMode() {
    return maintenanceMode;
  }

  public TransportNode failureDomainId(String failureDomainId) {
    this.failureDomainId = failureDomainId;
    return this;
  }

   /**
   * Set failure domain of edge transport node which will help in auto placement of TIER1 logical routers, DHCP Servers and MDProxies, if failure domain based allocation is enabled in edge cluster API. It is only supported for edge transport node and not for host transport node. In case failure domain is not set by user explicitly, it will be always assigned with default system created failure domain. 
   * @return failureDomainId
  **/
  @Schema(description = "Set failure domain of edge transport node which will help in auto placement of TIER1 logical routers, DHCP Servers and MDProxies, if failure domain based allocation is enabled in edge cluster API. It is only supported for edge transport node and not for host transport node. In case failure domain is not set by user explicitly, it will be always assigned with default system created failure domain. ")
  public String getFailureDomainId() {
    return failureDomainId;
  }

  public void setFailureDomainId(String failureDomainId) {
    this.failureDomainId = failureDomainId;
  }

   /**
   * This flag is relevant to only those hosts which are part of a compute collection which has transport node profile (TNP) applied on it. If you change the transport node configuration and it is different than cluster level TNP then this flag will be set to true 
   * @return isOverridden
  **/
  @Schema(description = "This flag is relevant to only those hosts which are part of a compute collection which has transport node profile (TNP) applied on it. If you change the transport node configuration and it is different than cluster level TNP then this flag will be set to true ")
  public Boolean isIsOverridden() {
    return isOverridden;
  }

  public TransportNode transportZoneEndpoints(List<TransportZoneEndPoint> transportZoneEndpoints) {
    this.transportZoneEndpoints = transportZoneEndpoints;
    return this;
  }

  public TransportNode addTransportZoneEndpointsItem(TransportZoneEndPoint transportZoneEndpointsItem) {
    if (this.transportZoneEndpoints == null) {
      this.transportZoneEndpoints = new ArrayList<TransportZoneEndPoint>();
    }
    this.transportZoneEndpoints.add(transportZoneEndpointsItem);
    return this;
  }

   /**
   * Transport zone endpoints.
   * @return transportZoneEndpoints
  **/
  @Schema(description = "Transport zone endpoints.")
  public List<TransportZoneEndPoint> getTransportZoneEndpoints() {
    return transportZoneEndpoints;
  }

  public void setTransportZoneEndpoints(List<TransportZoneEndPoint> transportZoneEndpoints) {
    this.transportZoneEndpoints = transportZoneEndpoints;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransportNode transportNode = (TransportNode) o;
    return Objects.equals(this.hostSwitchSpec, transportNode.hostSwitchSpec) &&
        Objects.equals(this.nodeId, transportNode.nodeId) &&
        Objects.equals(this.nodeDeploymentInfo, transportNode.nodeDeploymentInfo) &&
        Objects.equals(this.hostSwitches, transportNode.hostSwitches) &&
        Objects.equals(this.maintenanceMode, transportNode.maintenanceMode) &&
        Objects.equals(this.failureDomainId, transportNode.failureDomainId) &&
        Objects.equals(this.isOverridden, transportNode.isOverridden) &&
        Objects.equals(this.transportZoneEndpoints, transportNode.transportZoneEndpoints) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hostSwitchSpec, nodeId, nodeDeploymentInfo, hostSwitches, maintenanceMode, failureDomainId, isOverridden, transportZoneEndpoints, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransportNode {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    hostSwitchSpec: ").append(toIndentedString(hostSwitchSpec)).append("\n");
    sb.append("    nodeId: ").append(toIndentedString(nodeId)).append("\n");
    sb.append("    nodeDeploymentInfo: ").append(toIndentedString(nodeDeploymentInfo)).append("\n");
    sb.append("    hostSwitches: ").append(toIndentedString(hostSwitches)).append("\n");
    sb.append("    maintenanceMode: ").append(toIndentedString(maintenanceMode)).append("\n");
    sb.append("    failureDomainId: ").append(toIndentedString(failureDomainId)).append("\n");
    sb.append("    isOverridden: ").append(toIndentedString(isOverridden)).append("\n");
    sb.append("    transportZoneEndpoints: ").append(toIndentedString(transportZoneEndpoints)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
