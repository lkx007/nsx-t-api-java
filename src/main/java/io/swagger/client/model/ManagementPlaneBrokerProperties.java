/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Information about a management plane node this controller is configured to communicate with
 */
@Schema(description = "Information about a management plane node this controller is configured to communicate with")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class ManagementPlaneBrokerProperties {
  @SerializedName("host")
  private String host = null;

  @SerializedName("port")
  private Long port = 5671l;

  @SerializedName("thumbprint")
  private String thumbprint = null;

  public ManagementPlaneBrokerProperties host(String host) {
    this.host = host;
    return this;
  }

   /**
   * IP address or hostname of the message bus broker on the management plane node.
   * @return host
  **/
  @Schema(required = true, description = "IP address or hostname of the message bus broker on the management plane node.")
  public String getHost() {
    return host;
  }

  public void setHost(String host) {
    this.host = host;
  }

  public ManagementPlaneBrokerProperties port(Long port) {
    this.port = port;
    return this;
  }

   /**
   * Port number of the message bus broker on the management plane node.
   * minimum: 0
   * maximum: 65535
   * @return port
  **/
  @Schema(description = "Port number of the message bus broker on the management plane node.")
  public Long getPort() {
    return port;
  }

  public void setPort(Long port) {
    this.port = port;
  }

  public ManagementPlaneBrokerProperties thumbprint(String thumbprint) {
    this.thumbprint = thumbprint;
    return this;
  }

   /**
   * Certificate thumbprint of the message bus broker on the management plane node.
   * @return thumbprint
  **/
  @Schema(required = true, description = "Certificate thumbprint of the message bus broker on the management plane node.")
  public String getThumbprint() {
    return thumbprint;
  }

  public void setThumbprint(String thumbprint) {
    this.thumbprint = thumbprint;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManagementPlaneBrokerProperties managementPlaneBrokerProperties = (ManagementPlaneBrokerProperties) o;
    return Objects.equals(this.host, managementPlaneBrokerProperties.host) &&
        Objects.equals(this.port, managementPlaneBrokerProperties.port) &&
        Objects.equals(this.thumbprint, managementPlaneBrokerProperties.thumbprint);
  }

  @Override
  public int hashCode() {
    return Objects.hash(host, port, thumbprint);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManagementPlaneBrokerProperties {\n");
    
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    thumbprint: ").append(toIndentedString(thumbprint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
