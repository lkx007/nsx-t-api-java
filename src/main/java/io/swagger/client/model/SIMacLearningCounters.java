/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * SIMacLearningCounters
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class SIMacLearningCounters {
  @SerializedName("macs_learned")
  private Long macsLearned = null;

  @SerializedName("mac_not_learned_packets_dropped")
  private Long macNotLearnedPacketsDropped = null;

  @SerializedName("mac_not_learned_packets_allowed")
  private Long macNotLearnedPacketsAllowed = null;

  public SIMacLearningCounters macsLearned(Long macsLearned) {
    this.macsLearned = macsLearned;
    return this;
  }

   /**
   * Number of MACs learned
   * @return macsLearned
  **/
  @Schema(description = "Number of MACs learned")
  public Long getMacsLearned() {
    return macsLearned;
  }

  public void setMacsLearned(Long macsLearned) {
    this.macsLearned = macsLearned;
  }

  public SIMacLearningCounters macNotLearnedPacketsDropped(Long macNotLearnedPacketsDropped) {
    this.macNotLearnedPacketsDropped = macNotLearnedPacketsDropped;
    return this;
  }

   /**
   * The number of packets with unknown source MAC address that are dropped without learning the source MAC address. Applicable only when the MAC limit is reached and MAC Limit policy is MAC_LEARNING_LIMIT_POLICY_DROP.
   * @return macNotLearnedPacketsDropped
  **/
  @Schema(description = "The number of packets with unknown source MAC address that are dropped without learning the source MAC address. Applicable only when the MAC limit is reached and MAC Limit policy is MAC_LEARNING_LIMIT_POLICY_DROP.")
  public Long getMacNotLearnedPacketsDropped() {
    return macNotLearnedPacketsDropped;
  }

  public void setMacNotLearnedPacketsDropped(Long macNotLearnedPacketsDropped) {
    this.macNotLearnedPacketsDropped = macNotLearnedPacketsDropped;
  }

  public SIMacLearningCounters macNotLearnedPacketsAllowed(Long macNotLearnedPacketsAllowed) {
    this.macNotLearnedPacketsAllowed = macNotLearnedPacketsAllowed;
    return this;
  }

   /**
   * The number of packets with unknown source MAC address that are dispatched without learning the source MAC address. Applicable only when the MAC limit is reached and MAC Limit policy is MAC_LEARNING_LIMIT_POLICY_ALLOW.
   * @return macNotLearnedPacketsAllowed
  **/
  @Schema(description = "The number of packets with unknown source MAC address that are dispatched without learning the source MAC address. Applicable only when the MAC limit is reached and MAC Limit policy is MAC_LEARNING_LIMIT_POLICY_ALLOW.")
  public Long getMacNotLearnedPacketsAllowed() {
    return macNotLearnedPacketsAllowed;
  }

  public void setMacNotLearnedPacketsAllowed(Long macNotLearnedPacketsAllowed) {
    this.macNotLearnedPacketsAllowed = macNotLearnedPacketsAllowed;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SIMacLearningCounters siMacLearningCounters = (SIMacLearningCounters) o;
    return Objects.equals(this.macsLearned, siMacLearningCounters.macsLearned) &&
        Objects.equals(this.macNotLearnedPacketsDropped, siMacLearningCounters.macNotLearnedPacketsDropped) &&
        Objects.equals(this.macNotLearnedPacketsAllowed, siMacLearningCounters.macNotLearnedPacketsAllowed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(macsLearned, macNotLearnedPacketsDropped, macNotLearnedPacketsAllowed);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SIMacLearningCounters {\n");
    
    sb.append("    macsLearned: ").append(toIndentedString(macsLearned)).append("\n");
    sb.append("    macNotLearnedPacketsDropped: ").append(toIndentedString(macNotLearnedPacketsDropped)).append("\n");
    sb.append("    macNotLearnedPacketsAllowed: ").append(toIndentedString(macNotLearnedPacketsAllowed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
