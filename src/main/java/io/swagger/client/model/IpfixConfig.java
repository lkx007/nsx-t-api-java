/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ManagedResource;
import io.swagger.client.model.ResourceReference;
import io.swagger.client.model.Tag;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * IPFIX Config base representation
 */
@Schema(description = "IPFIX Config base representation")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")

public class IpfixConfig extends ManagedResource {
  @SerializedName("applied_tos")
  private List<ResourceReference> appliedTos = null;

  /**
   * Supported IPFIX Config Types.
   */
  @JsonAdapter(ResourceTypeEnum.Adapter.class)
  public enum ResourceTypeEnum {
    IPFIXSWITCHCONFIG("IpfixSwitchConfig"),
    IPFIXDFWCONFIG("IpfixDfwConfig");

    private String value;

    ResourceTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ResourceTypeEnum fromValue(String text) {
      for (ResourceTypeEnum b : ResourceTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ResourceTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResourceTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ResourceTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ResourceTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("resource_type")
  private ResourceTypeEnum resourceType = null;

  public IpfixConfig() {
    this.resource_type = this.getClass().getSimpleName();
  }
  public IpfixConfig appliedTos(List<ResourceReference> appliedTos) {
    this.appliedTos = appliedTos;
    return this;
  }

  public IpfixConfig addAppliedTosItem(ResourceReference appliedTosItem) {
    if (this.appliedTos == null) {
      this.appliedTos = new ArrayList<ResourceReference>();
    }
    this.appliedTos.add(appliedTosItem);
    return this;
  }

   /**
   * List of objects where the IPFIX Config will be enabled.
   * @return appliedTos
  **/
  @Schema(description = "List of objects where the IPFIX Config will be enabled.")
  public List<ResourceReference> getAppliedTos() {
    return appliedTos;
  }

  public void setAppliedTos(List<ResourceReference> appliedTos) {
    this.appliedTos = appliedTos;
  }

  public IpfixConfig resourceType(ResourceTypeEnum resourceType) {
    this.resourceType = resourceType;
    return this;
  }

   /**
   * Supported IPFIX Config Types.
   * @return resourceType
  **/
  @Schema(required = true, description = "Supported IPFIX Config Types.")
  public ResourceTypeEnum getResourceType() {
    return resourceType;
  }

  public void setResourceType(ResourceTypeEnum resourceType) {
    this.resourceType = resourceType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IpfixConfig ipfixConfig = (IpfixConfig) o;
    return Objects.equals(this.appliedTos, ipfixConfig.appliedTos) &&
        Objects.equals(this.resourceType, ipfixConfig.resourceType) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appliedTos, resourceType, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IpfixConfig {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    appliedTos: ").append(toIndentedString(appliedTos)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
