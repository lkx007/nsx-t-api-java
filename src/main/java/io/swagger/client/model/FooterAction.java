/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Label;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Action specified at the footer of a widget to provide additional information or to provide a clickable url for navigation. An example usage of footer action is provided under the &#x27;example_request&#x27; section of &#x27;CreateWidgetConfiguration&#x27; API.
 */
@Schema(description = "Action specified at the footer of a widget to provide additional information or to provide a clickable url for navigation. An example usage of footer action is provided under the 'example_request' section of 'CreateWidgetConfiguration' API.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class FooterAction {
  @SerializedName("url")
  private String url = null;

  @SerializedName("dock_to_container_footer")
  private Boolean dockToContainerFooter = true;

  @SerializedName("label")
  private Label label = null;

  public FooterAction url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Hyperlink to the UI page that provides details of action.
   * @return url
  **/
  @Schema(description = "Hyperlink to the UI page that provides details of action.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public FooterAction dockToContainerFooter(Boolean dockToContainerFooter) {
    this.dockToContainerFooter = dockToContainerFooter;
    return this;
  }

   /**
   * If true, the footer will appear in the underlying container that holds the widget.
   * @return dockToContainerFooter
  **/
  @Schema(description = "If true, the footer will appear in the underlying container that holds the widget.")
  public Boolean isDockToContainerFooter() {
    return dockToContainerFooter;
  }

  public void setDockToContainerFooter(Boolean dockToContainerFooter) {
    this.dockToContainerFooter = dockToContainerFooter;
  }

  public FooterAction label(Label label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @Schema(required = true, description = "")
  public Label getLabel() {
    return label;
  }

  public void setLabel(Label label) {
    this.label = label;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FooterAction footerAction = (FooterAction) o;
    return Objects.equals(this.url, footerAction.url) &&
        Objects.equals(this.dockToContainerFooter, footerAction.dockToContainerFooter) &&
        Objects.equals(this.label, footerAction.label);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, dockToContainerFooter, label);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FooterAction {\n");
    
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    dockToContainerFooter: ").append(toIndentedString(dockToContainerFooter)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
