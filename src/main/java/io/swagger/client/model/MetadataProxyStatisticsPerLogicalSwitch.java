/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * MetadataProxyStatisticsPerLogicalSwitch
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class MetadataProxyStatisticsPerLogicalSwitch {
  @SerializedName("requests_to_nova_server")
  private Long requestsToNovaServer = null;

  @SerializedName("responses_to_clients")
  private Long responsesToClients = null;

  @SerializedName("succeeded_responses_from_nova_server")
  private Long succeededResponsesFromNovaServer = null;

  @SerializedName("logical_switch_id")
  private String logicalSwitchId = null;

  @SerializedName("requests_from_clients")
  private Long requestsFromClients = null;

  @SerializedName("error_responses_from_nova_server")
  private Long errorResponsesFromNovaServer = null;

  public MetadataProxyStatisticsPerLogicalSwitch requestsToNovaServer(Long requestsToNovaServer) {
    this.requestsToNovaServer = requestsToNovaServer;
    return this;
  }

   /**
   * requests to nova server
   * @return requestsToNovaServer
  **/
  @Schema(required = true, description = "requests to nova server")
  public Long getRequestsToNovaServer() {
    return requestsToNovaServer;
  }

  public void setRequestsToNovaServer(Long requestsToNovaServer) {
    this.requestsToNovaServer = requestsToNovaServer;
  }

  public MetadataProxyStatisticsPerLogicalSwitch responsesToClients(Long responsesToClients) {
    this.responsesToClients = responsesToClients;
    return this;
  }

   /**
   * responses to clients
   * @return responsesToClients
  **/
  @Schema(required = true, description = "responses to clients")
  public Long getResponsesToClients() {
    return responsesToClients;
  }

  public void setResponsesToClients(Long responsesToClients) {
    this.responsesToClients = responsesToClients;
  }

  public MetadataProxyStatisticsPerLogicalSwitch succeededResponsesFromNovaServer(Long succeededResponsesFromNovaServer) {
    this.succeededResponsesFromNovaServer = succeededResponsesFromNovaServer;
    return this;
  }

   /**
   * succeeded responses from  nova server
   * @return succeededResponsesFromNovaServer
  **/
  @Schema(required = true, description = "succeeded responses from  nova server")
  public Long getSucceededResponsesFromNovaServer() {
    return succeededResponsesFromNovaServer;
  }

  public void setSucceededResponsesFromNovaServer(Long succeededResponsesFromNovaServer) {
    this.succeededResponsesFromNovaServer = succeededResponsesFromNovaServer;
  }

  public MetadataProxyStatisticsPerLogicalSwitch logicalSwitchId(String logicalSwitchId) {
    this.logicalSwitchId = logicalSwitchId;
    return this;
  }

   /**
   * uuid of attached logical switch
   * @return logicalSwitchId
  **/
  @Schema(required = true, description = "uuid of attached logical switch")
  public String getLogicalSwitchId() {
    return logicalSwitchId;
  }

  public void setLogicalSwitchId(String logicalSwitchId) {
    this.logicalSwitchId = logicalSwitchId;
  }

  public MetadataProxyStatisticsPerLogicalSwitch requestsFromClients(Long requestsFromClients) {
    this.requestsFromClients = requestsFromClients;
    return this;
  }

   /**
   * requests from clients
   * @return requestsFromClients
  **/
  @Schema(required = true, description = "requests from clients")
  public Long getRequestsFromClients() {
    return requestsFromClients;
  }

  public void setRequestsFromClients(Long requestsFromClients) {
    this.requestsFromClients = requestsFromClients;
  }

  public MetadataProxyStatisticsPerLogicalSwitch errorResponsesFromNovaServer(Long errorResponsesFromNovaServer) {
    this.errorResponsesFromNovaServer = errorResponsesFromNovaServer;
    return this;
  }

   /**
   * error responses from  nova server
   * @return errorResponsesFromNovaServer
  **/
  @Schema(required = true, description = "error responses from  nova server")
  public Long getErrorResponsesFromNovaServer() {
    return errorResponsesFromNovaServer;
  }

  public void setErrorResponsesFromNovaServer(Long errorResponsesFromNovaServer) {
    this.errorResponsesFromNovaServer = errorResponsesFromNovaServer;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetadataProxyStatisticsPerLogicalSwitch metadataProxyStatisticsPerLogicalSwitch = (MetadataProxyStatisticsPerLogicalSwitch) o;
    return Objects.equals(this.requestsToNovaServer, metadataProxyStatisticsPerLogicalSwitch.requestsToNovaServer) &&
        Objects.equals(this.responsesToClients, metadataProxyStatisticsPerLogicalSwitch.responsesToClients) &&
        Objects.equals(this.succeededResponsesFromNovaServer, metadataProxyStatisticsPerLogicalSwitch.succeededResponsesFromNovaServer) &&
        Objects.equals(this.logicalSwitchId, metadataProxyStatisticsPerLogicalSwitch.logicalSwitchId) &&
        Objects.equals(this.requestsFromClients, metadataProxyStatisticsPerLogicalSwitch.requestsFromClients) &&
        Objects.equals(this.errorResponsesFromNovaServer, metadataProxyStatisticsPerLogicalSwitch.errorResponsesFromNovaServer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestsToNovaServer, responsesToClients, succeededResponsesFromNovaServer, logicalSwitchId, requestsFromClients, errorResponsesFromNovaServer);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetadataProxyStatisticsPerLogicalSwitch {\n");
    
    sb.append("    requestsToNovaServer: ").append(toIndentedString(requestsToNovaServer)).append("\n");
    sb.append("    responsesToClients: ").append(toIndentedString(responsesToClients)).append("\n");
    sb.append("    succeededResponsesFromNovaServer: ").append(toIndentedString(succeededResponsesFromNovaServer)).append("\n");
    sb.append("    logicalSwitchId: ").append(toIndentedString(logicalSwitchId)).append("\n");
    sb.append("    requestsFromClients: ").append(toIndentedString(requestsFromClients)).append("\n");
    sb.append("    errorResponsesFromNovaServer: ").append(toIndentedString(errorResponsesFromNovaServer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
