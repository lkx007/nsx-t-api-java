/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.TraceflowObservation;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * TraceflowObservationReplicationLogical
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class TraceflowObservationReplicationLogical extends TraceflowObservation {
  @SerializedName("vtep_label")
  private Long vtepLabel = null;

  /**
   * This field specifies the type of replication message TX_VTEP - Transmit replication to all VTEPs TX_MTEP - Transmit replication to all MTEPs RX - Receive replication
   */
  @JsonAdapter(ReplicationTypeEnum.Adapter.class)
  public enum ReplicationTypeEnum {
    TX_VTEP("TX_VTEP"),
    TX_MTEP("TX_MTEP"),
    RX("RX");

    private String value;

    ReplicationTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ReplicationTypeEnum fromValue(String text) {
      for (ReplicationTypeEnum b : ReplicationTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ReplicationTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ReplicationTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ReplicationTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ReplicationTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("replication_type")
  private ReplicationTypeEnum replicationType = null;

  @SerializedName("local_ip_address")
  private String localIpAddress = null;

  @SerializedName("uplink_name")
  private String uplinkName = null;

   /**
   * The label of VTEP
   * @return vtepLabel
  **/
  @Schema(description = "The label of VTEP")
  public Long getVtepLabel() {
    return vtepLabel;
  }

   /**
   * This field specifies the type of replication message TX_VTEP - Transmit replication to all VTEPs TX_MTEP - Transmit replication to all MTEPs RX - Receive replication
   * @return replicationType
  **/
  @Schema(description = "This field specifies the type of replication message TX_VTEP - Transmit replication to all VTEPs TX_MTEP - Transmit replication to all MTEPs RX - Receive replication")
  public ReplicationTypeEnum getReplicationType() {
    return replicationType;
  }

   /**
   * Local IP address of the component that replicates the packet.
   * @return localIpAddress
  **/
  @Schema(description = "Local IP address of the component that replicates the packet.")
  public String getLocalIpAddress() {
    return localIpAddress;
  }

   /**
   * The name of uplink
   * @return uplinkName
  **/
  @Schema(description = "The name of uplink")
  public String getUplinkName() {
    return uplinkName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TraceflowObservationReplicationLogical traceflowObservationReplicationLogical = (TraceflowObservationReplicationLogical) o;
    return Objects.equals(this.vtepLabel, traceflowObservationReplicationLogical.vtepLabel) &&
        Objects.equals(this.replicationType, traceflowObservationReplicationLogical.replicationType) &&
        Objects.equals(this.localIpAddress, traceflowObservationReplicationLogical.localIpAddress) &&
        Objects.equals(this.uplinkName, traceflowObservationReplicationLogical.uplinkName) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vtepLabel, replicationType, localIpAddress, uplinkName, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TraceflowObservationReplicationLogical {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    vtepLabel: ").append(toIndentedString(vtepLabel)).append("\n");
    sb.append("    replicationType: ").append(toIndentedString(replicationType)).append("\n");
    sb.append("    localIpAddress: ").append(toIndentedString(localIpAddress)).append("\n");
    sb.append("    uplinkName: ").append(toIndentedString(uplinkName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
