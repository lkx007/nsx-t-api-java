/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * LbServiceStatisticsCounter
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class LbServiceStatisticsCounter {
  @SerializedName("l4_total_sessions")
  private Long l4TotalSessions = null;

  @SerializedName("l7_current_sessions")
  private Long l7CurrentSessions = null;

  @SerializedName("l4_max_sessions")
  private Long l4MaxSessions = null;

  @SerializedName("l4_current_sessions")
  private Long l4CurrentSessions = null;

  @SerializedName("l7_total_sessions")
  private Long l7TotalSessions = null;

  @SerializedName("l4_current_session_rate")
  private BigDecimal l4CurrentSessionRate = null;

  @SerializedName("l7_current_session_rate")
  private BigDecimal l7CurrentSessionRate = null;

  @SerializedName("l7_max_sessions")
  private Long l7MaxSessions = null;

  public LbServiceStatisticsCounter l4TotalSessions(Long l4TotalSessions) {
    this.l4TotalSessions = l4TotalSessions;
    return this;
  }

   /**
   * Number of l4 total sessions
   * @return l4TotalSessions
  **/
  @Schema(description = "Number of l4 total sessions")
  public Long getL4TotalSessions() {
    return l4TotalSessions;
  }

  public void setL4TotalSessions(Long l4TotalSessions) {
    this.l4TotalSessions = l4TotalSessions;
  }

  public LbServiceStatisticsCounter l7CurrentSessions(Long l7CurrentSessions) {
    this.l7CurrentSessions = l7CurrentSessions;
    return this;
  }

   /**
   * Number of l7 current sessions
   * @return l7CurrentSessions
  **/
  @Schema(description = "Number of l7 current sessions")
  public Long getL7CurrentSessions() {
    return l7CurrentSessions;
  }

  public void setL7CurrentSessions(Long l7CurrentSessions) {
    this.l7CurrentSessions = l7CurrentSessions;
  }

  public LbServiceStatisticsCounter l4MaxSessions(Long l4MaxSessions) {
    this.l4MaxSessions = l4MaxSessions;
    return this;
  }

   /**
   * L4 max sessions is used to show the peak L4 max session data since load balancer starts to provide service. 
   * @return l4MaxSessions
  **/
  @Schema(description = "L4 max sessions is used to show the peak L4 max session data since load balancer starts to provide service. ")
  public Long getL4MaxSessions() {
    return l4MaxSessions;
  }

  public void setL4MaxSessions(Long l4MaxSessions) {
    this.l4MaxSessions = l4MaxSessions;
  }

  public LbServiceStatisticsCounter l4CurrentSessions(Long l4CurrentSessions) {
    this.l4CurrentSessions = l4CurrentSessions;
    return this;
  }

   /**
   * Number of l4 current sessions
   * @return l4CurrentSessions
  **/
  @Schema(description = "Number of l4 current sessions")
  public Long getL4CurrentSessions() {
    return l4CurrentSessions;
  }

  public void setL4CurrentSessions(Long l4CurrentSessions) {
    this.l4CurrentSessions = l4CurrentSessions;
  }

  public LbServiceStatisticsCounter l7TotalSessions(Long l7TotalSessions) {
    this.l7TotalSessions = l7TotalSessions;
    return this;
  }

   /**
   * Number of l7 total sessions
   * @return l7TotalSessions
  **/
  @Schema(description = "Number of l7 total sessions")
  public Long getL7TotalSessions() {
    return l7TotalSessions;
  }

  public void setL7TotalSessions(Long l7TotalSessions) {
    this.l7TotalSessions = l7TotalSessions;
  }

  public LbServiceStatisticsCounter l4CurrentSessionRate(BigDecimal l4CurrentSessionRate) {
    this.l4CurrentSessionRate = l4CurrentSessionRate;
    return this;
  }

   /**
   * The average number of l4 current sessions per second, the number is averaged over the last 5 one-second intervals. 
   * @return l4CurrentSessionRate
  **/
  @Schema(description = "The average number of l4 current sessions per second, the number is averaged over the last 5 one-second intervals. ")
  public BigDecimal getL4CurrentSessionRate() {
    return l4CurrentSessionRate;
  }

  public void setL4CurrentSessionRate(BigDecimal l4CurrentSessionRate) {
    this.l4CurrentSessionRate = l4CurrentSessionRate;
  }

  public LbServiceStatisticsCounter l7CurrentSessionRate(BigDecimal l7CurrentSessionRate) {
    this.l7CurrentSessionRate = l7CurrentSessionRate;
    return this;
  }

   /**
   * The average number of l7 current requests per second, the number is averaged over the last 5 one-second intervals. 
   * @return l7CurrentSessionRate
  **/
  @Schema(description = "The average number of l7 current requests per second, the number is averaged over the last 5 one-second intervals. ")
  public BigDecimal getL7CurrentSessionRate() {
    return l7CurrentSessionRate;
  }

  public void setL7CurrentSessionRate(BigDecimal l7CurrentSessionRate) {
    this.l7CurrentSessionRate = l7CurrentSessionRate;
  }

  public LbServiceStatisticsCounter l7MaxSessions(Long l7MaxSessions) {
    this.l7MaxSessions = l7MaxSessions;
    return this;
  }

   /**
   * L7 max sessions is used to show the peak L7 max session data since load balancer starts to provide service. 
   * @return l7MaxSessions
  **/
  @Schema(description = "L7 max sessions is used to show the peak L7 max session data since load balancer starts to provide service. ")
  public Long getL7MaxSessions() {
    return l7MaxSessions;
  }

  public void setL7MaxSessions(Long l7MaxSessions) {
    this.l7MaxSessions = l7MaxSessions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LbServiceStatisticsCounter lbServiceStatisticsCounter = (LbServiceStatisticsCounter) o;
    return Objects.equals(this.l4TotalSessions, lbServiceStatisticsCounter.l4TotalSessions) &&
        Objects.equals(this.l7CurrentSessions, lbServiceStatisticsCounter.l7CurrentSessions) &&
        Objects.equals(this.l4MaxSessions, lbServiceStatisticsCounter.l4MaxSessions) &&
        Objects.equals(this.l4CurrentSessions, lbServiceStatisticsCounter.l4CurrentSessions) &&
        Objects.equals(this.l7TotalSessions, lbServiceStatisticsCounter.l7TotalSessions) &&
        Objects.equals(this.l4CurrentSessionRate, lbServiceStatisticsCounter.l4CurrentSessionRate) &&
        Objects.equals(this.l7CurrentSessionRate, lbServiceStatisticsCounter.l7CurrentSessionRate) &&
        Objects.equals(this.l7MaxSessions, lbServiceStatisticsCounter.l7MaxSessions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(l4TotalSessions, l7CurrentSessions, l4MaxSessions, l4CurrentSessions, l7TotalSessions, l4CurrentSessionRate, l7CurrentSessionRate, l7MaxSessions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LbServiceStatisticsCounter {\n");
    
    sb.append("    l4TotalSessions: ").append(toIndentedString(l4TotalSessions)).append("\n");
    sb.append("    l7CurrentSessions: ").append(toIndentedString(l7CurrentSessions)).append("\n");
    sb.append("    l4MaxSessions: ").append(toIndentedString(l4MaxSessions)).append("\n");
    sb.append("    l4CurrentSessions: ").append(toIndentedString(l4CurrentSessions)).append("\n");
    sb.append("    l7TotalSessions: ").append(toIndentedString(l7TotalSessions)).append("\n");
    sb.append("    l4CurrentSessionRate: ").append(toIndentedString(l4CurrentSessionRate)).append("\n");
    sb.append("    l7CurrentSessionRate: ").append(toIndentedString(l7CurrentSessionRate)).append("\n");
    sb.append("    l7MaxSessions: ").append(toIndentedString(l7MaxSessions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
