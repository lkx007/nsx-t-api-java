/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Status of the Identity Firewall Compute Collection&#x27;s transport node. 
 */
@Schema(description = "Status of the Identity Firewall Compute Collection's transport node. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class IdfwTransportNodeCondition {
  /**
   * Transport node status for IDFW compute collection.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    UNKNOWN("UNKNOWN"),
    UP("UP"),
    DOWN("DOWN"),
    NOT_PREPARED("NOT_PREPARED"),
    IDFW_COMPONENT_NOT_INSTALLED("IDFW_COMPONENT_NOT_INSTALLED"),
    DFW_DISABLED("DFW_DISABLED"),
    IDFW_DISABLED("IDFW_DISABLED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("status_detail")
  private String statusDetail = null;

  public IdfwTransportNodeCondition status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Transport node status for IDFW compute collection.
   * @return status
  **/
  @Schema(required = true, description = "Transport node status for IDFW compute collection.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public IdfwTransportNodeCondition statusDetail(String statusDetail) {
    this.statusDetail = statusDetail;
    return this;
  }

   /**
   * IDFW Compute collection&#x27;s transport node condition.
   * @return statusDetail
  **/
  @Schema(description = "IDFW Compute collection's transport node condition.")
  public String getStatusDetail() {
    return statusDetail;
  }

  public void setStatusDetail(String statusDetail) {
    this.statusDetail = statusDetail;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdfwTransportNodeCondition idfwTransportNodeCondition = (IdfwTransportNodeCondition) o;
    return Objects.equals(this.status, idfwTransportNodeCondition.status) &&
        Objects.equals(this.statusDetail, idfwTransportNodeCondition.statusDetail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, statusDetail);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdfwTransportNodeCondition {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDetail: ").append(toIndentedString(statusDetail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
