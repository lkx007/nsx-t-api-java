/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.IdfwUserSessionData;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Identity Firewall user login/session data for a single VM.
 */
@Schema(description = "Identity Firewall user login/session data for a single VM.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class IdfwVmStats {
  @SerializedName("vm_ext_id")
  private String vmExtId = null;

  @SerializedName("active_sessions")
  private List<IdfwUserSessionData> activeSessions = new ArrayList<IdfwUserSessionData>();

  @SerializedName("archived_sessions")
  private List<IdfwUserSessionData> archivedSessions = null;

  public IdfwVmStats vmExtId(String vmExtId) {
    this.vmExtId = vmExtId;
    return this;
  }

   /**
   * Virtual machine (external ID or BIOS UUID) where login/logout event occurred.
   * @return vmExtId
  **/
  @Schema(required = true, description = "Virtual machine (external ID or BIOS UUID) where login/logout event occurred.")
  public String getVmExtId() {
    return vmExtId;
  }

  public void setVmExtId(String vmExtId) {
    this.vmExtId = vmExtId;
  }

  public IdfwVmStats activeSessions(List<IdfwUserSessionData> activeSessions) {
    this.activeSessions = activeSessions;
    return this;
  }

  public IdfwVmStats addActiveSessionsItem(IdfwUserSessionData activeSessionsItem) {
    this.activeSessions.add(activeSessionsItem);
    return this;
  }

   /**
   * List of active (still logged in) user login/sessions data (no limit)
   * @return activeSessions
  **/
  @Schema(required = true, description = "List of active (still logged in) user login/sessions data (no limit)")
  public List<IdfwUserSessionData> getActiveSessions() {
    return activeSessions;
  }

  public void setActiveSessions(List<IdfwUserSessionData> activeSessions) {
    this.activeSessions = activeSessions;
  }

  public IdfwVmStats archivedSessions(List<IdfwUserSessionData> archivedSessions) {
    this.archivedSessions = archivedSessions;
    return this;
  }

  public IdfwVmStats addArchivedSessionsItem(IdfwUserSessionData archivedSessionsItem) {
    if (this.archivedSessions == null) {
      this.archivedSessions = new ArrayList<IdfwUserSessionData>();
    }
    this.archivedSessions.add(archivedSessionsItem);
    return this;
  }

   /**
   * Optional list of up to 5 most recent archived (previously logged in) user login/session data.
   * @return archivedSessions
  **/
  @Schema(description = "Optional list of up to 5 most recent archived (previously logged in) user login/session data.")
  public List<IdfwUserSessionData> getArchivedSessions() {
    return archivedSessions;
  }

  public void setArchivedSessions(List<IdfwUserSessionData> archivedSessions) {
    this.archivedSessions = archivedSessions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdfwVmStats idfwVmStats = (IdfwVmStats) o;
    return Objects.equals(this.vmExtId, idfwVmStats.vmExtId) &&
        Objects.equals(this.activeSessions, idfwVmStats.activeSessions) &&
        Objects.equals(this.archivedSessions, idfwVmStats.archivedSessions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vmExtId, activeSessions, archivedSessions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdfwVmStats {\n");
    
    sb.append("    vmExtId: ").append(toIndentedString(vmExtId)).append("\n");
    sb.append("    activeSessions: ").append(toIndentedString(activeSessions)).append("\n");
    sb.append("    archivedSessions: ").append(toIndentedString(archivedSessions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
