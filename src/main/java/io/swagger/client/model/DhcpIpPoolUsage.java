/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * DhcpIpPoolUsage
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class DhcpIpPoolUsage {
  @SerializedName("allocated_percentage")
  private Long allocatedPercentage = null;

  @SerializedName("pool_size")
  private Long poolSize = null;

  @SerializedName("allocated_number")
  private Long allocatedNumber = null;

  @SerializedName("dhcp_ip_pool_id")
  private String dhcpIpPoolId = null;

  public DhcpIpPoolUsage allocatedPercentage(Long allocatedPercentage) {
    this.allocatedPercentage = allocatedPercentage;
    return this;
  }

   /**
   * allocated percentage. COULD BE INACCURATE, REFERENCE ONLY.
   * @return allocatedPercentage
  **/
  @Schema(required = true, description = "allocated percentage. COULD BE INACCURATE, REFERENCE ONLY.")
  public Long getAllocatedPercentage() {
    return allocatedPercentage;
  }

  public void setAllocatedPercentage(Long allocatedPercentage) {
    this.allocatedPercentage = allocatedPercentage;
  }

  public DhcpIpPoolUsage poolSize(Long poolSize) {
    this.poolSize = poolSize;
    return this;
  }

   /**
   * pool size
   * @return poolSize
  **/
  @Schema(required = true, description = "pool size")
  public Long getPoolSize() {
    return poolSize;
  }

  public void setPoolSize(Long poolSize) {
    this.poolSize = poolSize;
  }

  public DhcpIpPoolUsage allocatedNumber(Long allocatedNumber) {
    this.allocatedNumber = allocatedNumber;
    return this;
  }

   /**
   * allocated number. COULD BE INACCURATE, REFERENCE ONLY.
   * @return allocatedNumber
  **/
  @Schema(required = true, description = "allocated number. COULD BE INACCURATE, REFERENCE ONLY.")
  public Long getAllocatedNumber() {
    return allocatedNumber;
  }

  public void setAllocatedNumber(Long allocatedNumber) {
    this.allocatedNumber = allocatedNumber;
  }

  public DhcpIpPoolUsage dhcpIpPoolId(String dhcpIpPoolId) {
    this.dhcpIpPoolId = dhcpIpPoolId;
    return this;
  }

   /**
   * uuid of dhcp ip pool
   * @return dhcpIpPoolId
  **/
  @Schema(required = true, description = "uuid of dhcp ip pool")
  public String getDhcpIpPoolId() {
    return dhcpIpPoolId;
  }

  public void setDhcpIpPoolId(String dhcpIpPoolId) {
    this.dhcpIpPoolId = dhcpIpPoolId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DhcpIpPoolUsage dhcpIpPoolUsage = (DhcpIpPoolUsage) o;
    return Objects.equals(this.allocatedPercentage, dhcpIpPoolUsage.allocatedPercentage) &&
        Objects.equals(this.poolSize, dhcpIpPoolUsage.poolSize) &&
        Objects.equals(this.allocatedNumber, dhcpIpPoolUsage.allocatedNumber) &&
        Objects.equals(this.dhcpIpPoolId, dhcpIpPoolUsage.dhcpIpPoolId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allocatedPercentage, poolSize, allocatedNumber, dhcpIpPoolId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DhcpIpPoolUsage {\n");
    
    sb.append("    allocatedPercentage: ").append(toIndentedString(allocatedPercentage)).append("\n");
    sb.append("    poolSize: ").append(toIndentedString(poolSize)).append("\n");
    sb.append("    allocatedNumber: ").append(toIndentedString(allocatedNumber)).append("\n");
    sb.append("    dhcpIpPoolId: ").append(toIndentedString(dhcpIpPoolId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
