/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Resource;
import io.swagger.client.model.ResourceLink;
import io.swagger.client.model.SelfResourceLink;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.List;
/**
 * Configuration of authentication policies for the NSX node
 */
@Schema(description = "Configuration of authentication policies for the NSX node")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class AuthenticationPolicyProperties extends Resource {
  @SerializedName("api_failed_auth_reset_period")
  private Long apiFailedAuthResetPeriod = 900l;

  @SerializedName("minimum_password_length")
  private Long minimumPasswordLength = 8l;

  @SerializedName("cli_failed_auth_lockout_period")
  private Long cliFailedAuthLockoutPeriod = 900l;

  @SerializedName("api_max_auth_failures")
  private Long apiMaxAuthFailures = 5l;

  @SerializedName("api_failed_auth_lockout_period")
  private Long apiFailedAuthLockoutPeriod = 900l;

  @SerializedName("cli_max_auth_failures")
  private Long cliMaxAuthFailures = 5l;

  public AuthenticationPolicyProperties apiFailedAuthResetPeriod(Long apiFailedAuthResetPeriod) {
    this.apiFailedAuthResetPeriod = apiFailedAuthResetPeriod;
    return this;
  }

   /**
   * In order to trigger an account lockout, all authentication failures must occur in this time window. If the reset period expires, the failed login count is reset to zero. Only applies to NSX Manager nodes. Ignored on other node types.
   * minimum: 0
   * @return apiFailedAuthResetPeriod
  **/
  @Schema(description = "In order to trigger an account lockout, all authentication failures must occur in this time window. If the reset period expires, the failed login count is reset to zero. Only applies to NSX Manager nodes. Ignored on other node types.")
  public Long getApiFailedAuthResetPeriod() {
    return apiFailedAuthResetPeriod;
  }

  public void setApiFailedAuthResetPeriod(Long apiFailedAuthResetPeriod) {
    this.apiFailedAuthResetPeriod = apiFailedAuthResetPeriod;
  }

  public AuthenticationPolicyProperties minimumPasswordLength(Long minimumPasswordLength) {
    this.minimumPasswordLength = minimumPasswordLength;
    return this;
  }

   /**
   * Minimum number of characters required in account passwords
   * minimum: 8
   * @return minimumPasswordLength
  **/
  @Schema(description = "Minimum number of characters required in account passwords")
  public Long getMinimumPasswordLength() {
    return minimumPasswordLength;
  }

  public void setMinimumPasswordLength(Long minimumPasswordLength) {
    this.minimumPasswordLength = minimumPasswordLength;
  }

  public AuthenticationPolicyProperties cliFailedAuthLockoutPeriod(Long cliFailedAuthLockoutPeriod) {
    this.cliFailedAuthLockoutPeriod = cliFailedAuthLockoutPeriod;
    return this;
  }

   /**
   * Once a lockout occurs, the account remains locked out of the CLI for this time period. While the lockout period is in effect, additional authentication attempts restart the lockout period, even if a valid password is specified.
   * minimum: 0
   * @return cliFailedAuthLockoutPeriod
  **/
  @Schema(description = "Once a lockout occurs, the account remains locked out of the CLI for this time period. While the lockout period is in effect, additional authentication attempts restart the lockout period, even if a valid password is specified.")
  public Long getCliFailedAuthLockoutPeriod() {
    return cliFailedAuthLockoutPeriod;
  }

  public void setCliFailedAuthLockoutPeriod(Long cliFailedAuthLockoutPeriod) {
    this.cliFailedAuthLockoutPeriod = cliFailedAuthLockoutPeriod;
  }

  public AuthenticationPolicyProperties apiMaxAuthFailures(Long apiMaxAuthFailures) {
    this.apiMaxAuthFailures = apiMaxAuthFailures;
    return this;
  }

   /**
   * Only applies to NSX Manager nodes. Ignored on other node types.
   * minimum: 0
   * @return apiMaxAuthFailures
  **/
  @Schema(description = "Only applies to NSX Manager nodes. Ignored on other node types.")
  public Long getApiMaxAuthFailures() {
    return apiMaxAuthFailures;
  }

  public void setApiMaxAuthFailures(Long apiMaxAuthFailures) {
    this.apiMaxAuthFailures = apiMaxAuthFailures;
  }

  public AuthenticationPolicyProperties apiFailedAuthLockoutPeriod(Long apiFailedAuthLockoutPeriod) {
    this.apiFailedAuthLockoutPeriod = apiFailedAuthLockoutPeriod;
    return this;
  }

   /**
   * Once a lockout occurs, the account remains locked out of the API for this time period. Only applies to NSX Manager nodes. Ignored on other node types.
   * minimum: 0
   * @return apiFailedAuthLockoutPeriod
  **/
  @Schema(description = "Once a lockout occurs, the account remains locked out of the API for this time period. Only applies to NSX Manager nodes. Ignored on other node types.")
  public Long getApiFailedAuthLockoutPeriod() {
    return apiFailedAuthLockoutPeriod;
  }

  public void setApiFailedAuthLockoutPeriod(Long apiFailedAuthLockoutPeriod) {
    this.apiFailedAuthLockoutPeriod = apiFailedAuthLockoutPeriod;
  }

  public AuthenticationPolicyProperties cliMaxAuthFailures(Long cliMaxAuthFailures) {
    this.cliMaxAuthFailures = cliMaxAuthFailures;
    return this;
  }

   /**
   * Number of authentication failures that trigger CLI lockout
   * minimum: 0
   * @return cliMaxAuthFailures
  **/
  @Schema(description = "Number of authentication failures that trigger CLI lockout")
  public Long getCliMaxAuthFailures() {
    return cliMaxAuthFailures;
  }

  public void setCliMaxAuthFailures(Long cliMaxAuthFailures) {
    this.cliMaxAuthFailures = cliMaxAuthFailures;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthenticationPolicyProperties authenticationPolicyProperties = (AuthenticationPolicyProperties) o;
    return Objects.equals(this.apiFailedAuthResetPeriod, authenticationPolicyProperties.apiFailedAuthResetPeriod) &&
        Objects.equals(this.minimumPasswordLength, authenticationPolicyProperties.minimumPasswordLength) &&
        Objects.equals(this.cliFailedAuthLockoutPeriod, authenticationPolicyProperties.cliFailedAuthLockoutPeriod) &&
        Objects.equals(this.apiMaxAuthFailures, authenticationPolicyProperties.apiMaxAuthFailures) &&
        Objects.equals(this.apiFailedAuthLockoutPeriod, authenticationPolicyProperties.apiFailedAuthLockoutPeriod) &&
        Objects.equals(this.cliMaxAuthFailures, authenticationPolicyProperties.cliMaxAuthFailures) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiFailedAuthResetPeriod, minimumPasswordLength, cliFailedAuthLockoutPeriod, apiMaxAuthFailures, apiFailedAuthLockoutPeriod, cliMaxAuthFailures, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthenticationPolicyProperties {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    apiFailedAuthResetPeriod: ").append(toIndentedString(apiFailedAuthResetPeriod)).append("\n");
    sb.append("    minimumPasswordLength: ").append(toIndentedString(minimumPasswordLength)).append("\n");
    sb.append("    cliFailedAuthLockoutPeriod: ").append(toIndentedString(cliFailedAuthLockoutPeriod)).append("\n");
    sb.append("    apiMaxAuthFailures: ").append(toIndentedString(apiMaxAuthFailures)).append("\n");
    sb.append("    apiFailedAuthLockoutPeriod: ").append(toIndentedString(apiFailedAuthLockoutPeriod)).append("\n");
    sb.append("    cliMaxAuthFailures: ").append(toIndentedString(cliMaxAuthFailures)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
