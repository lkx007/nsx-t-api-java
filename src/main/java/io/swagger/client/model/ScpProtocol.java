/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.PasswordAuthenticationScheme;
import io.swagger.client.model.Protocol;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ScpProtocol
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class ScpProtocol extends Protocol {
  @SerializedName("ssh_fingerprint")
  private String sshFingerprint = null;

  @SerializedName("authentication_scheme")
  private PasswordAuthenticationScheme authenticationScheme = null;

  public ScpProtocol sshFingerprint(String sshFingerprint) {
    this.sshFingerprint = sshFingerprint;
    return this;
  }

   /**
   * SSH fingerprint of server
   * @return sshFingerprint
  **/
  @Schema(required = true, description = "SSH fingerprint of server")
  public String getSshFingerprint() {
    return sshFingerprint;
  }

  public void setSshFingerprint(String sshFingerprint) {
    this.sshFingerprint = sshFingerprint;
  }

  public ScpProtocol authenticationScheme(PasswordAuthenticationScheme authenticationScheme) {
    this.authenticationScheme = authenticationScheme;
    return this;
  }

   /**
   * Get authenticationScheme
   * @return authenticationScheme
  **/
  @Schema(required = true, description = "")
  public PasswordAuthenticationScheme getAuthenticationScheme() {
    return authenticationScheme;
  }

  public void setAuthenticationScheme(PasswordAuthenticationScheme authenticationScheme) {
    this.authenticationScheme = authenticationScheme;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScpProtocol scpProtocol = (ScpProtocol) o;
    return Objects.equals(this.sshFingerprint, scpProtocol.sshFingerprint) &&
        Objects.equals(this.authenticationScheme, scpProtocol.authenticationScheme) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sshFingerprint, authenticationScheme, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScpProtocol {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    sshFingerprint: ").append(toIndentedString(sshFingerprint)).append("\n");
    sb.append("    authenticationScheme: ").append(toIndentedString(authenticationScheme)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
