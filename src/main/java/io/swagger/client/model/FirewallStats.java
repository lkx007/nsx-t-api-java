/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Resource;
import io.swagger.client.model.ResourceLink;
import io.swagger.client.model.SelfResourceLink;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.List;
/**
 * FirewallStats
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class FirewallStats extends Resource {
  @SerializedName("total_session_count")
  private Long totalSessionCount = null;

  @SerializedName("packet_count")
  private Long packetCount = null;

  @SerializedName("popularity_index")
  private Long popularityIndex = null;

  @SerializedName("max_session_count")
  private Long maxSessionCount = null;

  @SerializedName("byte_count")
  private Long byteCount = null;

  @SerializedName("max_popularity_index")
  private Long maxPopularityIndex = null;

  @SerializedName("hit_count")
  private Long hitCount = null;

  @SerializedName("session_count")
  private Long sessionCount = null;

  @SerializedName("rule_id")
  private String ruleId = null;

   /**
   * Aggregated number of sessions processed by the all firewall rules. This is aggregated statistic which are computed with lower frequency compared to individual generic rule statistics. It may have a computation delay up to 15 minutes in response to this API.
   * @return totalSessionCount
  **/
  @Schema(description = "Aggregated number of sessions processed by the all firewall rules. This is aggregated statistic which are computed with lower frequency compared to individual generic rule statistics. It may have a computation delay up to 15 minutes in response to this API.")
  public Long getTotalSessionCount() {
    return totalSessionCount;
  }

   /**
   * Aggregated number of packets processed by the rule.
   * @return packetCount
  **/
  @Schema(description = "Aggregated number of packets processed by the rule.")
  public Long getPacketCount() {
    return packetCount;
  }

   /**
   * This is calculated by sessions count divided by age of the rule.
   * @return popularityIndex
  **/
  @Schema(description = "This is calculated by sessions count divided by age of the rule.")
  public Long getPopularityIndex() {
    return popularityIndex;
  }

   /**
   * Maximum value of sessions count of all firewall rules of the type. This is aggregated statistic which are computed with lower frequency compared to generic rule statistics. It may have a computation delay up to 15 minutes in response to this API.
   * @return maxSessionCount
  **/
  @Schema(description = "Maximum value of sessions count of all firewall rules of the type. This is aggregated statistic which are computed with lower frequency compared to generic rule statistics. It may have a computation delay up to 15 minutes in response to this API.")
  public Long getMaxSessionCount() {
    return maxSessionCount;
  }

   /**
   * Aggregated number of bytes processed by the rule.
   * @return byteCount
  **/
  @Schema(description = "Aggregated number of bytes processed by the rule.")
  public Long getByteCount() {
    return byteCount;
  }

   /**
   * Maximum value of popularity index of all firewall rules of the type. This is aggregated statistic which are computed with lower frequency compared to individual generic rule statistics. It may have a computation delay up to 15 minutes in response to this API.
   * @return maxPopularityIndex
  **/
  @Schema(description = "Maximum value of popularity index of all firewall rules of the type. This is aggregated statistic which are computed with lower frequency compared to individual generic rule statistics. It may have a computation delay up to 15 minutes in response to this API.")
  public Long getMaxPopularityIndex() {
    return maxPopularityIndex;
  }

   /**
   * Aggregated number of hits received by the rule.
   * @return hitCount
  **/
  @Schema(description = "Aggregated number of hits received by the rule.")
  public Long getHitCount() {
    return hitCount;
  }

   /**
   * Aggregated number of sessions processed by the rule.
   * @return sessionCount
  **/
  @Schema(description = "Aggregated number of sessions processed by the rule.")
  public Long getSessionCount() {
    return sessionCount;
  }

   /**
   * Rule Identifier of the Firewall rule. This is a globally unique number.
   * @return ruleId
  **/
  @Schema(description = "Rule Identifier of the Firewall rule. This is a globally unique number.")
  public String getRuleId() {
    return ruleId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FirewallStats firewallStats = (FirewallStats) o;
    return Objects.equals(this.totalSessionCount, firewallStats.totalSessionCount) &&
        Objects.equals(this.packetCount, firewallStats.packetCount) &&
        Objects.equals(this.popularityIndex, firewallStats.popularityIndex) &&
        Objects.equals(this.maxSessionCount, firewallStats.maxSessionCount) &&
        Objects.equals(this.byteCount, firewallStats.byteCount) &&
        Objects.equals(this.maxPopularityIndex, firewallStats.maxPopularityIndex) &&
        Objects.equals(this.hitCount, firewallStats.hitCount) &&
        Objects.equals(this.sessionCount, firewallStats.sessionCount) &&
        Objects.equals(this.ruleId, firewallStats.ruleId) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalSessionCount, packetCount, popularityIndex, maxSessionCount, byteCount, maxPopularityIndex, hitCount, sessionCount, ruleId, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FirewallStats {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    totalSessionCount: ").append(toIndentedString(totalSessionCount)).append("\n");
    sb.append("    packetCount: ").append(toIndentedString(packetCount)).append("\n");
    sb.append("    popularityIndex: ").append(toIndentedString(popularityIndex)).append("\n");
    sb.append("    maxSessionCount: ").append(toIndentedString(maxSessionCount)).append("\n");
    sb.append("    byteCount: ").append(toIndentedString(byteCount)).append("\n");
    sb.append("    maxPopularityIndex: ").append(toIndentedString(maxPopularityIndex)).append("\n");
    sb.append("    hitCount: ").append(toIndentedString(hitCount)).append("\n");
    sb.append("    sessionCount: ").append(toIndentedString(sessionCount)).append("\n");
    sb.append("    ruleId: ").append(toIndentedString(ruleId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
