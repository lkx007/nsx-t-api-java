/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Tcp Mss Clamping Direction and value
 */
@Schema(description = "Tcp Mss Clamping Direction and value")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class TcpMssClamping {
  @SerializedName("max_segment_size")
  private Long maxSegmentSize = null;

  /**
   * Specifies the traffic direction for which to apply MSS Clamping.
   */
  @JsonAdapter(DirectionEnum.Adapter.class)
  public enum DirectionEnum {
    NONE("NONE"),
    INBOUND_CONNECTION("INBOUND_CONNECTION"),
    OUTBOUND_CONNECTION("OUTBOUND_CONNECTION"),
    BOTH("BOTH");

    private String value;

    DirectionEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static DirectionEnum fromValue(String text) {
      for (DirectionEnum b : DirectionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<DirectionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DirectionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DirectionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DirectionEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("direction")
  private DirectionEnum direction = DirectionEnum.NONE;

  public TcpMssClamping maxSegmentSize(Long maxSegmentSize) {
    this.maxSegmentSize = maxSegmentSize;
    return this;
  }

   /**
   * It defines the maximum amount of data that a host is willing to accept in a single TCP segment. This field is set in TCP header during connection establishment. To avoid packet fragmentation, you can set this field depending on uplink MTU and VPN overhead. This is optional field and in case it is left unconfigured, best possible MSS value will be calculated based on effective mtu of uplink interface. Supported MSS range is 108 to 8852.
   * minimum: 108
   * maximum: 8852
   * @return maxSegmentSize
  **/
  @Schema(description = "It defines the maximum amount of data that a host is willing to accept in a single TCP segment. This field is set in TCP header during connection establishment. To avoid packet fragmentation, you can set this field depending on uplink MTU and VPN overhead. This is optional field and in case it is left unconfigured, best possible MSS value will be calculated based on effective mtu of uplink interface. Supported MSS range is 108 to 8852.")
  public Long getMaxSegmentSize() {
    return maxSegmentSize;
  }

  public void setMaxSegmentSize(Long maxSegmentSize) {
    this.maxSegmentSize = maxSegmentSize;
  }

  public TcpMssClamping direction(DirectionEnum direction) {
    this.direction = direction;
    return this;
  }

   /**
   * Specifies the traffic direction for which to apply MSS Clamping.
   * @return direction
  **/
  @Schema(description = "Specifies the traffic direction for which to apply MSS Clamping.")
  public DirectionEnum getDirection() {
    return direction;
  }

  public void setDirection(DirectionEnum direction) {
    this.direction = direction;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TcpMssClamping tcpMssClamping = (TcpMssClamping) o;
    return Objects.equals(this.maxSegmentSize, tcpMssClamping.maxSegmentSize) &&
        Objects.equals(this.direction, tcpMssClamping.direction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxSegmentSize, direction);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TcpMssClamping {\n");
    
    sb.append("    maxSegmentSize: ").append(toIndentedString(maxSegmentSize)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
