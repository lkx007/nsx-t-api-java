/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.UnidirectionalServicePath;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * An instance of service chain that consists of forward and reverse service paths.
 */
@Schema(description = "An instance of service chain that consists of forward and reverse service paths.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class ServicePath {
  @SerializedName("reverse_path")
  private UnidirectionalServicePath reversePath = null;

  @SerializedName("service_chain_uuid")
  private String serviceChainUuid = null;

  @SerializedName("forward_path")
  private UnidirectionalServicePath forwardPath = null;

  @SerializedName("service_path_id")
  private Long servicePathId = null;

  @SerializedName("service_chain_id")
  private Long serviceChainId = null;

  public ServicePath reversePath(UnidirectionalServicePath reversePath) {
    this.reversePath = reversePath;
    return this;
  }

   /**
   * Get reversePath
   * @return reversePath
  **/
  @Schema(description = "")
  public UnidirectionalServicePath getReversePath() {
    return reversePath;
  }

  public void setReversePath(UnidirectionalServicePath reversePath) {
    this.reversePath = reversePath;
  }

   /**
   * Uuid of a service chain.
   * @return serviceChainUuid
  **/
  @Schema(description = "Uuid of a service chain.")
  public String getServiceChainUuid() {
    return serviceChainUuid;
  }

  public ServicePath forwardPath(UnidirectionalServicePath forwardPath) {
    this.forwardPath = forwardPath;
    return this;
  }

   /**
   * Get forwardPath
   * @return forwardPath
  **/
  @Schema(description = "")
  public UnidirectionalServicePath getForwardPath() {
    return forwardPath;
  }

  public void setForwardPath(UnidirectionalServicePath forwardPath) {
    this.forwardPath = forwardPath;
  }

   /**
   * Unique identifier of a service path.
   * @return servicePathId
  **/
  @Schema(description = "Unique identifier of a service path.")
  public Long getServicePathId() {
    return servicePathId;
  }

   /**
   * A unique id of a service chain.
   * @return serviceChainId
  **/
  @Schema(description = "A unique id of a service chain.")
  public Long getServiceChainId() {
    return serviceChainId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServicePath servicePath = (ServicePath) o;
    return Objects.equals(this.reversePath, servicePath.reversePath) &&
        Objects.equals(this.serviceChainUuid, servicePath.serviceChainUuid) &&
        Objects.equals(this.forwardPath, servicePath.forwardPath) &&
        Objects.equals(this.servicePathId, servicePath.servicePathId) &&
        Objects.equals(this.serviceChainId, servicePath.serviceChainId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reversePath, serviceChainUuid, forwardPath, servicePathId, serviceChainId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServicePath {\n");
    
    sb.append("    reversePath: ").append(toIndentedString(reversePath)).append("\n");
    sb.append("    serviceChainUuid: ").append(toIndentedString(serviceChainUuid)).append("\n");
    sb.append("    forwardPath: ").append(toIndentedString(forwardPath)).append("\n");
    sb.append("    servicePathId: ").append(toIndentedString(servicePathId)).append("\n");
    sb.append("    serviceChainId: ").append(toIndentedString(serviceChainId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
