/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ForwarderZone
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class ForwarderZone {
  @SerializedName("upstream_servers")
  private List<String> upstreamServers = new ArrayList<String>();

  @SerializedName("source_ip")
  private String sourceIp = null;

  public ForwarderZone upstreamServers(List<String> upstreamServers) {
    this.upstreamServers = upstreamServers;
    return this;
  }

  public ForwarderZone addUpstreamServersItem(String upstreamServersItem) {
    this.upstreamServers.add(upstreamServersItem);
    return this;
  }

   /**
   * Ip address of the upstream DNS servers the DNS forwarder accesses. 
   * @return upstreamServers
  **/
  @Schema(required = true, description = "Ip address of the upstream DNS servers the DNS forwarder accesses. ")
  public List<String> getUpstreamServers() {
    return upstreamServers;
  }

  public void setUpstreamServers(List<String> upstreamServers) {
    this.upstreamServers = upstreamServers;
  }

  public ForwarderZone sourceIp(String sourceIp) {
    this.sourceIp = sourceIp;
    return this;
  }

   /**
   * The source ip used by the fowarder of the zone. If no source ip specified, the ip address of listener of the DNS forwarder will be used. 
   * @return sourceIp
  **/
  @Schema(description = "The source ip used by the fowarder of the zone. If no source ip specified, the ip address of listener of the DNS forwarder will be used. ")
  public String getSourceIp() {
    return sourceIp;
  }

  public void setSourceIp(String sourceIp) {
    this.sourceIp = sourceIp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ForwarderZone forwarderZone = (ForwarderZone) o;
    return Objects.equals(this.upstreamServers, forwarderZone.upstreamServers) &&
        Objects.equals(this.sourceIp, forwarderZone.sourceIp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(upstreamServers, sourceIp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ForwarderZone {\n");
    
    sb.append("    upstreamServers: ").append(toIndentedString(upstreamServers)).append("\n");
    sb.append("    sourceIp: ").append(toIndentedString(sourceIp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
