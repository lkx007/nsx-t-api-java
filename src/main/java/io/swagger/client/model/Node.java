/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ManagedResource;
import io.swagger.client.model.Tag;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Node
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")

public class Node extends ManagedResource {
  @SerializedName("discovered_ip_addresses")
  private List<String> discoveredIpAddresses = null;

  @SerializedName("ip_addresses")
  private List<String> ipAddresses = null;

  @SerializedName("external_id")
  private String externalId = null;

  @SerializedName("fqdn")
  private String fqdn = null;

  @SerializedName("resource_type")
  private String resourceType = null;

  public Node() {
    this.resource_type = this.getClass().getSimpleName();
  }
   /**
   * Discovered IP Addresses of the fabric node, version 4 or 6
   * @return discoveredIpAddresses
  **/
  @Schema(description = "Discovered IP Addresses of the fabric node, version 4 or 6")
  public List<String> getDiscoveredIpAddresses() {
    return discoveredIpAddresses;
  }

  public Node ipAddresses(List<String> ipAddresses) {
    this.ipAddresses = ipAddresses;
    return this;
  }

  public Node addIpAddressesItem(String ipAddressesItem) {
    if (this.ipAddresses == null) {
      this.ipAddresses = new ArrayList<String>();
    }
    this.ipAddresses.add(ipAddressesItem);
    return this;
  }

   /**
   * IP Addresses of the Node, version 4 or 6. This property is mandatory for all nodes except for automatic deployment of edge virtual machine node. For automatic deployment, the ip address from management_port_subnets property will be considered. 
   * @return ipAddresses
  **/
  @Schema(description = "IP Addresses of the Node, version 4 or 6. This property is mandatory for all nodes except for automatic deployment of edge virtual machine node. For automatic deployment, the ip address from management_port_subnets property will be considered. ")
  public List<String> getIpAddresses() {
    return ipAddresses;
  }

  public void setIpAddresses(List<String> ipAddresses) {
    this.ipAddresses = ipAddresses;
  }

  public Node externalId(String externalId) {
    this.externalId = externalId;
    return this;
  }

   /**
   * ID of the Node maintained on the Node and used to recognize the Node
   * @return externalId
  **/
  @Schema(description = "ID of the Node maintained on the Node and used to recognize the Node")
  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }

   /**
   * Fully qualified domain name of the fabric node
   * @return fqdn
  **/
  @Schema(description = "Fully qualified domain name of the fabric node")
  public String getFqdn() {
    return fqdn;
  }

  public Node resourceType(String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

   /**
   * Fabric node type, for example &#x27;HostNode&#x27;, &#x27;EdgeNode&#x27; or &#x27;PublicCloudGatewayNode&#x27;
   * @return resourceType
  **/
  @Schema(required = true, description = "Fabric node type, for example 'HostNode', 'EdgeNode' or 'PublicCloudGatewayNode'")
  public String getResourceType() {
    return resourceType;
  }

  public void setResourceType(String resourceType) {
    this.resourceType = resourceType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Node node = (Node) o;
    return Objects.equals(this.discoveredIpAddresses, node.discoveredIpAddresses) &&
        Objects.equals(this.ipAddresses, node.ipAddresses) &&
        Objects.equals(this.externalId, node.externalId) &&
        Objects.equals(this.fqdn, node.fqdn) &&
        Objects.equals(this.resourceType, node.resourceType) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(discoveredIpAddresses, ipAddresses, externalId, fqdn, resourceType, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Node {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    discoveredIpAddresses: ").append(toIndentedString(discoveredIpAddresses)).append("\n");
    sb.append("    ipAddresses: ").append(toIndentedString(ipAddresses)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    fqdn: ").append(toIndentedString(fqdn)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
