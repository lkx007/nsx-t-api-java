/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ManagedResource;
import io.swagger.client.model.NSAttributes;
import io.swagger.client.model.Tag;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * An entity that encapsulates attributes and sub-attributes of various network services (ex. L7 services,domain name,encryption algorithm) The entity will be consumed in DFW rules and can be added in new tuple called profile in DFW rules. This entity is design to be generic and can be consumed at other places as well where attributes and sub-attributes collection can be used. To get a list of supported attributes and sub-attributes fire the following REST API GET https://&amp;lt;nsx-mgr&amp;gt;/api/v1/ns-profiles/attributes 
 */
@Schema(description = "An entity that encapsulates attributes and sub-attributes of various network services (ex. L7 services,domain name,encryption algorithm) The entity will be consumed in DFW rules and can be added in new tuple called profile in DFW rules. This entity is design to be generic and can be consumed at other places as well where attributes and sub-attributes collection can be used. To get a list of supported attributes and sub-attributes fire the following REST API GET https://&lt;nsx-mgr&gt;/api/v1/ns-profiles/attributes ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class NSProfile extends ManagedResource {
  @SerializedName("nsprofile_attribute")
  private List<NSAttributes> nsprofileAttribute = new ArrayList<NSAttributes>();

  @SerializedName("is_valid")
  private Boolean isValid = true;

  public NSProfile nsprofileAttribute(List<NSAttributes> nsprofileAttribute) {
    this.nsprofileAttribute = nsprofileAttribute;
    return this;
  }

  public NSProfile addNsprofileAttributeItem(NSAttributes nsprofileAttributeItem) {
    this.nsprofileAttribute.add(nsprofileAttributeItem);
    return this;
  }

   /**
   * Reference to the encapsulating object of attributes/sub-attributes for NSProfile. 
   * @return nsprofileAttribute
  **/
  @Schema(required = true, description = "Reference to the encapsulating object of attributes/sub-attributes for NSProfile. ")
  public List<NSAttributes> getNsprofileAttribute() {
    return nsprofileAttribute;
  }

  public void setNsprofileAttribute(List<NSAttributes> nsprofileAttribute) {
    this.nsprofileAttribute = nsprofileAttribute;
  }

   /**
   * If set to false, the NSProfile has some app ids which are unsupported. Those were allowed to be added in previous releases but in testing in later phases found that those app ids could not be detected. 
   * @return isValid
  **/
  @Schema(description = "If set to false, the NSProfile has some app ids which are unsupported. Those were allowed to be added in previous releases but in testing in later phases found that those app ids could not be detected. ")
  public Boolean isIsValid() {
    return isValid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NSProfile nsProfile = (NSProfile) o;
    return Objects.equals(this.nsprofileAttribute, nsProfile.nsprofileAttribute) &&
        Objects.equals(this.isValid, nsProfile.isValid) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nsprofileAttribute, isValid, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NSProfile {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    nsprofileAttribute: ").append(toIndentedString(nsprofileAttribute)).append("\n");
    sb.append("    isValid: ").append(toIndentedString(isValid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
