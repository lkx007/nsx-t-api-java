/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Identity Firewall user session data on a client machine (typically a VM). Multiple entries for the same user can be returned if the user logins to multiple sessions on the same VM. 
 */
@Schema(description = "Identity Firewall user session data on a client machine (typically a VM). Multiple entries for the same user can be returned if the user logins to multiple sessions on the same VM. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class IdfwUserSessionData {
  @SerializedName("user_id")
  private String userId = null;

  @SerializedName("user_session_id")
  private Integer userSessionId = null;

  @SerializedName("vm_ext_id")
  private String vmExtId = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("login_time")
  private Long loginTime = null;

  @SerializedName("user_name")
  private String userName = null;

  @SerializedName("logout_time")
  private Long logoutTime = null;

  @SerializedName("domain_name")
  private String domainName = null;

   /**
   * AD user ID (may not exist).
   * @return userId
  **/
  @Schema(description = "AD user ID (may not exist).")
  public String getUserId() {
    return userId;
  }

  public IdfwUserSessionData userSessionId(Integer userSessionId) {
    this.userSessionId = userSessionId;
    return this;
  }

   /**
   * User session ID.  This also indicates whether this is VDI / RDSH.
   * @return userSessionId
  **/
  @Schema(required = true, description = "User session ID.  This also indicates whether this is VDI / RDSH.")
  public Integer getUserSessionId() {
    return userSessionId;
  }

  public void setUserSessionId(Integer userSessionId) {
    this.userSessionId = userSessionId;
  }

   /**
   * Virtual machine (external ID or BIOS UUID) where login/logout events occurred.
   * @return vmExtId
  **/
  @Schema(description = "Virtual machine (external ID or BIOS UUID) where login/logout events occurred.")
  public String getVmExtId() {
    return vmExtId;
  }

   /**
   * Identifier of user session data.
   * @return id
  **/
  @Schema(description = "Identifier of user session data.")
  public String getId() {
    return id;
  }

  public IdfwUserSessionData loginTime(Long loginTime) {
    this.loginTime = loginTime;
    return this;
  }

   /**
   * Login time.
   * @return loginTime
  **/
  @Schema(required = true, description = "Login time.")
  public Long getLoginTime() {
    return loginTime;
  }

  public void setLoginTime(Long loginTime) {
    this.loginTime = loginTime;
  }

  public IdfwUserSessionData userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * AD user name.
   * @return userName
  **/
  @Schema(required = true, description = "AD user name.")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }

  public IdfwUserSessionData logoutTime(Long logoutTime) {
    this.logoutTime = logoutTime;
    return this;
  }

   /**
   * Logout time if applicable.  An active user session has no logout time. Non-active user session is stored (up to last 5 most recent entries) per VM and per user. 
   * @return logoutTime
  **/
  @Schema(description = "Logout time if applicable.  An active user session has no logout time. Non-active user session is stored (up to last 5 most recent entries) per VM and per user. ")
  public Long getLogoutTime() {
    return logoutTime;
  }

  public void setLogoutTime(Long logoutTime) {
    this.logoutTime = logoutTime;
  }

  public IdfwUserSessionData domainName(String domainName) {
    this.domainName = domainName;
    return this;
  }

   /**
   * AD Domain of user.
   * @return domainName
  **/
  @Schema(required = true, description = "AD Domain of user.")
  public String getDomainName() {
    return domainName;
  }

  public void setDomainName(String domainName) {
    this.domainName = domainName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdfwUserSessionData idfwUserSessionData = (IdfwUserSessionData) o;
    return Objects.equals(this.userId, idfwUserSessionData.userId) &&
        Objects.equals(this.userSessionId, idfwUserSessionData.userSessionId) &&
        Objects.equals(this.vmExtId, idfwUserSessionData.vmExtId) &&
        Objects.equals(this.id, idfwUserSessionData.id) &&
        Objects.equals(this.loginTime, idfwUserSessionData.loginTime) &&
        Objects.equals(this.userName, idfwUserSessionData.userName) &&
        Objects.equals(this.logoutTime, idfwUserSessionData.logoutTime) &&
        Objects.equals(this.domainName, idfwUserSessionData.domainName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, userSessionId, vmExtId, id, loginTime, userName, logoutTime, domainName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdfwUserSessionData {\n");
    
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userSessionId: ").append(toIndentedString(userSessionId)).append("\n");
    sb.append("    vmExtId: ").append(toIndentedString(vmExtId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    loginTime: ").append(toIndentedString(loginTime)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    logoutTime: ").append(toIndentedString(logoutTime)).append("\n");
    sb.append("    domainName: ").append(toIndentedString(domainName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
