/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.DiscoveredResource;
import io.swagger.client.model.KeyValuePair;
import io.swagger.client.model.Tag;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Network policy applied to container.
 */
@Schema(description = "Network policy applied to container.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class ContainerNetworkPolicy extends DiscoveredResource {
  @SerializedName("container_cluster_id")
  private String containerClusterId = null;

  /**
   * Type e.g. Network Policy, ASG.
   */
  @JsonAdapter(PolicyTypeEnum.Adapter.class)
  public enum PolicyTypeEnum {
    NETWORK_POLICY("NETWORK_POLICY"),
    ASG("ASG");

    private String value;

    PolicyTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static PolicyTypeEnum fromValue(String text) {
      for (PolicyTypeEnum b : PolicyTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<PolicyTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PolicyTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PolicyTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PolicyTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("policy_type")
  private PolicyTypeEnum policyType = null;

  @SerializedName("origin_properties")
  private List<KeyValuePair> originProperties = null;

  @SerializedName("external_id")
  private String externalId = null;

  @SerializedName("spec")
  private String spec = null;

  @SerializedName("container_project_id")
  private String containerProjectId = null;

  public ContainerNetworkPolicy containerClusterId(String containerClusterId) {
    this.containerClusterId = containerClusterId;
    return this;
  }

   /**
   * Identifier of the container cluster this network policy belongs to.
   * @return containerClusterId
  **/
  @Schema(description = "Identifier of the container cluster this network policy belongs to.")
  public String getContainerClusterId() {
    return containerClusterId;
  }

  public void setContainerClusterId(String containerClusterId) {
    this.containerClusterId = containerClusterId;
  }

  public ContainerNetworkPolicy policyType(PolicyTypeEnum policyType) {
    this.policyType = policyType;
    return this;
  }

   /**
   * Type e.g. Network Policy, ASG.
   * @return policyType
  **/
  @Schema(description = "Type e.g. Network Policy, ASG.")
  public PolicyTypeEnum getPolicyType() {
    return policyType;
  }

  public void setPolicyType(PolicyTypeEnum policyType) {
    this.policyType = policyType;
  }

  public ContainerNetworkPolicy originProperties(List<KeyValuePair> originProperties) {
    this.originProperties = originProperties;
    return this;
  }

  public ContainerNetworkPolicy addOriginPropertiesItem(KeyValuePair originPropertiesItem) {
    if (this.originProperties == null) {
      this.originProperties = new ArrayList<KeyValuePair>();
    }
    this.originProperties.add(originPropertiesItem);
    return this;
  }

   /**
   * Array of additional specific properties of container network policy in key-value format. 
   * @return originProperties
  **/
  @Schema(description = "Array of additional specific properties of container network policy in key-value format. ")
  public List<KeyValuePair> getOriginProperties() {
    return originProperties;
  }

  public void setOriginProperties(List<KeyValuePair> originProperties) {
    this.originProperties = originProperties;
  }

  public ContainerNetworkPolicy externalId(String externalId) {
    this.externalId = externalId;
    return this;
  }

   /**
   * Identifier of the container network policy.
   * @return externalId
  **/
  @Schema(required = true, description = "Identifier of the container network policy.")
  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }

  public ContainerNetworkPolicy spec(String spec) {
    this.spec = spec;
    return this;
  }

   /**
   * Container network policy specification.
   * @return spec
  **/
  @Schema(description = "Container network policy specification.")
  public String getSpec() {
    return spec;
  }

  public void setSpec(String spec) {
    this.spec = spec;
  }

  public ContainerNetworkPolicy containerProjectId(String containerProjectId) {
    this.containerProjectId = containerProjectId;
    return this;
  }

   /**
   * Identifier of the project which this network policy belongs to.
   * @return containerProjectId
  **/
  @Schema(description = "Identifier of the project which this network policy belongs to.")
  public String getContainerProjectId() {
    return containerProjectId;
  }

  public void setContainerProjectId(String containerProjectId) {
    this.containerProjectId = containerProjectId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContainerNetworkPolicy containerNetworkPolicy = (ContainerNetworkPolicy) o;
    return Objects.equals(this.containerClusterId, containerNetworkPolicy.containerClusterId) &&
        Objects.equals(this.policyType, containerNetworkPolicy.policyType) &&
        Objects.equals(this.originProperties, containerNetworkPolicy.originProperties) &&
        Objects.equals(this.externalId, containerNetworkPolicy.externalId) &&
        Objects.equals(this.spec, containerNetworkPolicy.spec) &&
        Objects.equals(this.containerProjectId, containerNetworkPolicy.containerProjectId) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(containerClusterId, policyType, originProperties, externalId, spec, containerProjectId, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContainerNetworkPolicy {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    containerClusterId: ").append(toIndentedString(containerClusterId)).append("\n");
    sb.append("    policyType: ").append(toIndentedString(policyType)).append("\n");
    sb.append("    originProperties: ").append(toIndentedString(originProperties)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    spec: ").append(toIndentedString(spec)).append("\n");
    sb.append("    containerProjectId: ").append(toIndentedString(containerProjectId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
