/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ManagedResource;
import io.swagger.client.model.NSXProfileReference;
import io.swagger.client.model.ResourceReference;
import io.swagger.client.model.Tag;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Service configs are groupings of profiles (i.e switch profiles) and configurations applied to resources or collection of resources(NSGroups).
 */
@Schema(description = "Service configs are groupings of profiles (i.e switch profiles) and configurations applied to resources or collection of resources(NSGroups).")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class ServiceConfig extends ManagedResource {
  @SerializedName("applied_to")
  private List<ResourceReference> appliedTo = null;

  @SerializedName("precedence")
  private Long precedence = null;

  @SerializedName("profiles")
  private List<NSXProfileReference> profiles = new ArrayList<NSXProfileReference>();

  public ServiceConfig appliedTo(List<ResourceReference> appliedTo) {
    this.appliedTo = appliedTo;
    return this;
  }

  public ServiceConfig addAppliedToItem(ResourceReference appliedToItem) {
    if (this.appliedTo == null) {
      this.appliedTo = new ArrayList<ResourceReference>();
    }
    this.appliedTo.add(appliedToItem);
    return this;
  }

   /**
   * The list of entities that the configurations should be applied to. This can either be a NSGroup or any other entity like TransportNode, LogicalPorts etc. 
   * @return appliedTo
  **/
  @Schema(description = "The list of entities that the configurations should be applied to. This can either be a NSGroup or any other entity like TransportNode, LogicalPorts etc. ")
  public List<ResourceReference> getAppliedTo() {
    return appliedTo;
  }

  public void setAppliedTo(List<ResourceReference> appliedTo) {
    this.appliedTo = appliedTo;
  }

  public ServiceConfig precedence(Long precedence) {
    this.precedence = precedence;
    return this;
  }

   /**
   * Every ServiceConfig has a priority based upon its precedence value. Lower the value of precedence, higher will be its priority. If user doesnt specify the precedence, it is generated automatically by system. The precedence is generated based upon the type of profile used in ServiceConfig. Precedence are auto-generated in decreasing order with difference of 100. Automatically generated precedence value will be 100 less than the current minimum value of precedence of ServiceConfig of a given profile type in system.There cannot be duplicate precedence for ServiceConfig of same profile type. 
   * minimum: 0
   * maximum: 4294967295
   * @return precedence
  **/
  @Schema(description = "Every ServiceConfig has a priority based upon its precedence value. Lower the value of precedence, higher will be its priority. If user doesnt specify the precedence, it is generated automatically by system. The precedence is generated based upon the type of profile used in ServiceConfig. Precedence are auto-generated in decreasing order with difference of 100. Automatically generated precedence value will be 100 less than the current minimum value of precedence of ServiceConfig of a given profile type in system.There cannot be duplicate precedence for ServiceConfig of same profile type. ")
  public Long getPrecedence() {
    return precedence;
  }

  public void setPrecedence(Long precedence) {
    this.precedence = precedence;
  }

  public ServiceConfig profiles(List<NSXProfileReference> profiles) {
    this.profiles = profiles;
    return this;
  }

  public ServiceConfig addProfilesItem(NSXProfileReference profilesItem) {
    this.profiles.add(profilesItem);
    return this;
  }

   /**
   * These are the NSX Profiles which will be added to service config, which will be applied to entities/groups provided to applied_to field of service config. 
   * @return profiles
  **/
  @Schema(required = true, description = "These are the NSX Profiles which will be added to service config, which will be applied to entities/groups provided to applied_to field of service config. ")
  public List<NSXProfileReference> getProfiles() {
    return profiles;
  }

  public void setProfiles(List<NSXProfileReference> profiles) {
    this.profiles = profiles;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceConfig serviceConfig = (ServiceConfig) o;
    return Objects.equals(this.appliedTo, serviceConfig.appliedTo) &&
        Objects.equals(this.precedence, serviceConfig.precedence) &&
        Objects.equals(this.profiles, serviceConfig.profiles) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appliedTo, precedence, profiles, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceConfig {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    appliedTo: ").append(toIndentedString(appliedTo)).append("\n");
    sb.append("    precedence: ").append(toIndentedString(precedence)).append("\n");
    sb.append("    profiles: ").append(toIndentedString(profiles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
