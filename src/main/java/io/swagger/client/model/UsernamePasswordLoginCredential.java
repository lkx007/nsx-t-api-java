/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.LoginCredential;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * A login credential specifying a username and password
 */
@Schema(description = "A login credential specifying a username and password")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class UsernamePasswordLoginCredential extends LoginCredential {
  @SerializedName("username")
  private String username = null;

  @SerializedName("password")
  private String password = null;

  @SerializedName("thumbprint")
  private String thumbprint = null;

  public UsernamePasswordLoginCredential username(String username) {
    this.username = username;
    return this;
  }

   /**
   * The username for login
   * @return username
  **/
  @Schema(description = "The username for login")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public UsernamePasswordLoginCredential password(String password) {
    this.password = password;
    return this;
  }

   /**
   * The authentication password for login
   * @return password
  **/
  @Schema(description = "The authentication password for login")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public UsernamePasswordLoginCredential thumbprint(String thumbprint) {
    this.thumbprint = thumbprint;
    return this;
  }

   /**
   * Thumbprint of the login server
   * @return thumbprint
  **/
  @Schema(description = "Thumbprint of the login server")
  public String getThumbprint() {
    return thumbprint;
  }

  public void setThumbprint(String thumbprint) {
    this.thumbprint = thumbprint;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsernamePasswordLoginCredential usernamePasswordLoginCredential = (UsernamePasswordLoginCredential) o;
    return Objects.equals(this.username, usernamePasswordLoginCredential.username) &&
        Objects.equals(this.password, usernamePasswordLoginCredential.password) &&
        Objects.equals(this.thumbprint, usernamePasswordLoginCredential.thumbprint) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(username, password, thumbprint, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsernamePasswordLoginCredential {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    thumbprint: ").append(toIndentedString(thumbprint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
