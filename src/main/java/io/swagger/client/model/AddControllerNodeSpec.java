/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ClusteringInfo;
import io.swagger.client.model.MsgClientInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * AddControllerNodeSpec
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class AddControllerNodeSpec {
  @SerializedName("mpa_msg_client_info")
  private MsgClientInfo mpaMsgClientInfo = null;

  @SerializedName("host_msg_client_info")
  private MsgClientInfo hostMsgClientInfo = null;

  @SerializedName("clustering_params")
  private ClusteringInfo clusteringParams = null;

  @SerializedName("node_id")
  private String nodeId = null;

  @SerializedName("control_plane_server_certificate")
  private String controlPlaneServerCertificate = null;

  /**
   * must be set to AddControllerNodeSpec
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    ADDCONTROLLERNODESPEC("AddControllerNodeSpec");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = null;

  public AddControllerNodeSpec mpaMsgClientInfo(MsgClientInfo mpaMsgClientInfo) {
    this.mpaMsgClientInfo = mpaMsgClientInfo;
    return this;
  }

   /**
   * Get mpaMsgClientInfo
   * @return mpaMsgClientInfo
  **/
  @Schema(required = true, description = "")
  public MsgClientInfo getMpaMsgClientInfo() {
    return mpaMsgClientInfo;
  }

  public void setMpaMsgClientInfo(MsgClientInfo mpaMsgClientInfo) {
    this.mpaMsgClientInfo = mpaMsgClientInfo;
  }

  public AddControllerNodeSpec hostMsgClientInfo(MsgClientInfo hostMsgClientInfo) {
    this.hostMsgClientInfo = hostMsgClientInfo;
    return this;
  }

   /**
   * Get hostMsgClientInfo
   * @return hostMsgClientInfo
  **/
  @Schema(required = true, description = "")
  public MsgClientInfo getHostMsgClientInfo() {
    return hostMsgClientInfo;
  }

  public void setHostMsgClientInfo(MsgClientInfo hostMsgClientInfo) {
    this.hostMsgClientInfo = hostMsgClientInfo;
  }

  public AddControllerNodeSpec clusteringParams(ClusteringInfo clusteringParams) {
    this.clusteringParams = clusteringParams;
    return this;
  }

   /**
   * Get clusteringParams
   * @return clusteringParams
  **/
  @Schema(description = "")
  public ClusteringInfo getClusteringParams() {
    return clusteringParams;
  }

  public void setClusteringParams(ClusteringInfo clusteringParams) {
    this.clusteringParams = clusteringParams;
  }

  public AddControllerNodeSpec nodeId(String nodeId) {
    this.nodeId = nodeId;
    return this;
  }

   /**
   * Only use this if an id for the node already exists with MP. If not specified, then the node_id will be set to a random id.
   * @return nodeId
  **/
  @Schema(description = "Only use this if an id for the node already exists with MP. If not specified, then the node_id will be set to a random id.")
  public String getNodeId() {
    return nodeId;
  }

  public void setNodeId(String nodeId) {
    this.nodeId = nodeId;
  }

  public AddControllerNodeSpec controlPlaneServerCertificate(String controlPlaneServerCertificate) {
    this.controlPlaneServerCertificate = controlPlaneServerCertificate;
    return this;
  }

   /**
   * Deprecated. Do not supply a value for this property.
   * @return controlPlaneServerCertificate
  **/
  @Schema(description = "Deprecated. Do not supply a value for this property.")
  public String getControlPlaneServerCertificate() {
    return controlPlaneServerCertificate;
  }

  public void setControlPlaneServerCertificate(String controlPlaneServerCertificate) {
    this.controlPlaneServerCertificate = controlPlaneServerCertificate;
  }

  public AddControllerNodeSpec type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * must be set to AddControllerNodeSpec
   * @return type
  **/
  @Schema(required = true, description = "must be set to AddControllerNodeSpec")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddControllerNodeSpec addControllerNodeSpec = (AddControllerNodeSpec) o;
    return Objects.equals(this.mpaMsgClientInfo, addControllerNodeSpec.mpaMsgClientInfo) &&
        Objects.equals(this.hostMsgClientInfo, addControllerNodeSpec.hostMsgClientInfo) &&
        Objects.equals(this.clusteringParams, addControllerNodeSpec.clusteringParams) &&
        Objects.equals(this.nodeId, addControllerNodeSpec.nodeId) &&
        Objects.equals(this.controlPlaneServerCertificate, addControllerNodeSpec.controlPlaneServerCertificate) &&
        Objects.equals(this.type, addControllerNodeSpec.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mpaMsgClientInfo, hostMsgClientInfo, clusteringParams, nodeId, controlPlaneServerCertificate, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddControllerNodeSpec {\n");
    
    sb.append("    mpaMsgClientInfo: ").append(toIndentedString(mpaMsgClientInfo)).append("\n");
    sb.append("    hostMsgClientInfo: ").append(toIndentedString(hostMsgClientInfo)).append("\n");
    sb.append("    clusteringParams: ").append(toIndentedString(clusteringParams)).append("\n");
    sb.append("    nodeId: ").append(toIndentedString(nodeId)).append("\n");
    sb.append("    controlPlaneServerCertificate: ").append(toIndentedString(controlPlaneServerCertificate)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
