/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.EmbeddedResource;
import io.swagger.client.model.OwnerResourceLink;
import io.swagger.client.model.PBRService;
import io.swagger.client.model.ResourceReference;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * PBRRule
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class PBRRule extends EmbeddedResource {
  @SerializedName("disabled")
  private Boolean disabled = false;

  @SerializedName("sources")
  private List<ResourceReference> sources = null;

  @SerializedName("rule_tag")
  private String ruleTag = null;

  @SerializedName("services")
  private List<PBRService> services = null;

  @SerializedName("notes")
  private String notes = null;

  @SerializedName("applied_tos")
  private List<ResourceReference> appliedTos = null;

  @SerializedName("logged")
  private Boolean logged = false;

  /**
   * Action enforced on the packets which matches the PBR rule.
   */
  @JsonAdapter(ActionEnum.Adapter.class)
  public enum ActionEnum {
    TO_UNDERLAY_NAT("ROUTE_TO_UNDERLAY_NAT"),
    TO_OVERLAY_NAT("ROUTE_TO_OVERLAY_NAT"),
    TO_UNDERLAY("ROUTE_TO_UNDERLAY"),
    TO_OVERLAY("ROUTE_TO_OVERLAY"),
    FROM_OVERLAY("ROUTE_FROM_OVERLAY"),
    FROM_UNDERLAY("ROUTE_FROM_UNDERLAY");

    private String value;

    ActionEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ActionEnum fromValue(String text) {
      for (ActionEnum b : ActionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ActionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ActionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ActionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ActionEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("action")
  private ActionEnum action = null;

  @SerializedName("destinations")
  private List<ResourceReference> destinations = null;

  public PBRRule disabled(Boolean disabled) {
    this.disabled = disabled;
    return this;
  }

   /**
   * Flag to disable rule. Disabled will only be persisted but never provisioned/realized.
   * @return disabled
  **/
  @Schema(description = "Flag to disable rule. Disabled will only be persisted but never provisioned/realized.")
  public Boolean isDisabled() {
    return disabled;
  }

  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }

  public PBRRule sources(List<ResourceReference> sources) {
    this.sources = sources;
    return this;
  }

  public PBRRule addSourcesItem(ResourceReference sourcesItem) {
    if (this.sources == null) {
      this.sources = new ArrayList<ResourceReference>();
    }
    this.sources.add(sourcesItem);
    return this;
  }

   /**
   * List of sources. Null will be treated as any.
   * @return sources
  **/
  @Schema(description = "List of sources. Null will be treated as any.")
  public List<ResourceReference> getSources() {
    return sources;
  }

  public void setSources(List<ResourceReference> sources) {
    this.sources = sources;
  }

  public PBRRule ruleTag(String ruleTag) {
    this.ruleTag = ruleTag;
    return this;
  }

   /**
   * User level field which will be printed in CLI and packet logs.
   * @return ruleTag
  **/
  @Schema(description = "User level field which will be printed in CLI and packet logs.")
  public String getRuleTag() {
    return ruleTag;
  }

  public void setRuleTag(String ruleTag) {
    this.ruleTag = ruleTag;
  }

  public PBRRule services(List<PBRService> services) {
    this.services = services;
    return this;
  }

  public PBRRule addServicesItem(PBRService servicesItem) {
    if (this.services == null) {
      this.services = new ArrayList<PBRService>();
    }
    this.services.add(servicesItem);
    return this;
  }

   /**
   * List of the services. Null will be treated as any.
   * @return services
  **/
  @Schema(description = "List of the services. Null will be treated as any.")
  public List<PBRService> getServices() {
    return services;
  }

  public void setServices(List<PBRService> services) {
    this.services = services;
  }

  public PBRRule notes(String notes) {
    this.notes = notes;
    return this;
  }

   /**
   * User notes specific to the rule.
   * @return notes
  **/
  @Schema(description = "User notes specific to the rule.")
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }

  public PBRRule appliedTos(List<ResourceReference> appliedTos) {
    this.appliedTos = appliedTos;
    return this;
  }

  public PBRRule addAppliedTosItem(ResourceReference appliedTosItem) {
    if (this.appliedTos == null) {
      this.appliedTos = new ArrayList<ResourceReference>();
    }
    this.appliedTos.add(appliedTosItem);
    return this;
  }

   /**
   * List of object where rule will be enforced. field overrides this one. Null will be treated as any.
   * @return appliedTos
  **/
  @Schema(description = "List of object where rule will be enforced. field overrides this one. Null will be treated as any.")
  public List<ResourceReference> getAppliedTos() {
    return appliedTos;
  }

  public void setAppliedTos(List<ResourceReference> appliedTos) {
    this.appliedTos = appliedTos;
  }

  public PBRRule logged(Boolean logged) {
    this.logged = logged;
    return this;
  }

   /**
   * Flag to enable packet logging. Default is disabled.
   * @return logged
  **/
  @Schema(description = "Flag to enable packet logging. Default is disabled.")
  public Boolean isLogged() {
    return logged;
  }

  public void setLogged(Boolean logged) {
    this.logged = logged;
  }

  public PBRRule action(ActionEnum action) {
    this.action = action;
    return this;
  }

   /**
   * Action enforced on the packets which matches the PBR rule.
   * @return action
  **/
  @Schema(required = true, description = "Action enforced on the packets which matches the PBR rule.")
  public ActionEnum getAction() {
    return action;
  }

  public void setAction(ActionEnum action) {
    this.action = action;
  }

  public PBRRule destinations(List<ResourceReference> destinations) {
    this.destinations = destinations;
    return this;
  }

  public PBRRule addDestinationsItem(ResourceReference destinationsItem) {
    if (this.destinations == null) {
      this.destinations = new ArrayList<ResourceReference>();
    }
    this.destinations.add(destinationsItem);
    return this;
  }

   /**
   * List of the destinations. Null will be treated as any.
   * @return destinations
  **/
  @Schema(description = "List of the destinations. Null will be treated as any.")
  public List<ResourceReference> getDestinations() {
    return destinations;
  }

  public void setDestinations(List<ResourceReference> destinations) {
    this.destinations = destinations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PBRRule pbRRule = (PBRRule) o;
    return Objects.equals(this.disabled, pbRRule.disabled) &&
        Objects.equals(this.sources, pbRRule.sources) &&
        Objects.equals(this.ruleTag, pbRRule.ruleTag) &&
        Objects.equals(this.services, pbRRule.services) &&
        Objects.equals(this.notes, pbRRule.notes) &&
        Objects.equals(this.appliedTos, pbRRule.appliedTos) &&
        Objects.equals(this.logged, pbRRule.logged) &&
        Objects.equals(this.action, pbRRule.action) &&
        Objects.equals(this.destinations, pbRRule.destinations) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(disabled, sources, ruleTag, services, notes, appliedTos, logged, action, destinations, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PBRRule {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    sources: ").append(toIndentedString(sources)).append("\n");
    sb.append("    ruleTag: ").append(toIndentedString(ruleTag)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    appliedTos: ").append(toIndentedString(appliedTos)).append("\n");
    sb.append("    logged: ").append(toIndentedString(logged)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    destinations: ").append(toIndentedString(destinations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
