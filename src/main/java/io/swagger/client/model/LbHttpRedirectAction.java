/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.LbRuleAction;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * This action is used to redirect HTTP request messages to a new URL. The reply_status value specified in this action is used as the status code of HTTP response message which is sent back to client (Normally a browser). The HTTP status code for redirection is 3xx, for example, 301, 302, 303, 307, etc. The redirect_url is the new URL that the HTTP request message is redirected to. Normally browser will send another HTTP request to the new URL after receiving a redirection response message. Captured variables and built-in variables can be used in redirect_url field. For example, to redirect all HTTP requests to HTTPS requests for a virtual server. We create an LbRule without any conditions, add an LbHttpRedirectAction to the rule. Set the redirect_url field of the LbHttpRedirectAction to:   https://$_host$_request_uri And set redirect_status to \&quot;302\&quot;, which means found. This rule will redirect all HTTP requests to HTTPS server port on the same host. 
 */
@Schema(description = "This action is used to redirect HTTP request messages to a new URL. The reply_status value specified in this action is used as the status code of HTTP response message which is sent back to client (Normally a browser). The HTTP status code for redirection is 3xx, for example, 301, 302, 303, 307, etc. The redirect_url is the new URL that the HTTP request message is redirected to. Normally browser will send another HTTP request to the new URL after receiving a redirection response message. Captured variables and built-in variables can be used in redirect_url field. For example, to redirect all HTTP requests to HTTPS requests for a virtual server. We create an LbRule without any conditions, add an LbHttpRedirectAction to the rule. Set the redirect_url field of the LbHttpRedirectAction to:   https://$_host$_request_uri And set redirect_status to \"302\", which means found. This rule will redirect all HTTP requests to HTTPS server port on the same host. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class LbHttpRedirectAction extends LbRuleAction {
  @SerializedName("redirect_status")
  private String redirectStatus = null;

  @SerializedName("redirect_url")
  private String redirectUrl = null;

  public LbHttpRedirectAction redirectStatus(String redirectStatus) {
    this.redirectStatus = redirectStatus;
    return this;
  }

   /**
   * HTTP response status code
   * @return redirectStatus
  **/
  @Schema(required = true, description = "HTTP response status code")
  public String getRedirectStatus() {
    return redirectStatus;
  }

  public void setRedirectStatus(String redirectStatus) {
    this.redirectStatus = redirectStatus;
  }

  public LbHttpRedirectAction redirectUrl(String redirectUrl) {
    this.redirectUrl = redirectUrl;
    return this;
  }

   /**
   * The URL that the HTTP request is redirected to
   * @return redirectUrl
  **/
  @Schema(required = true, description = "The URL that the HTTP request is redirected to")
  public String getRedirectUrl() {
    return redirectUrl;
  }

  public void setRedirectUrl(String redirectUrl) {
    this.redirectUrl = redirectUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LbHttpRedirectAction lbHttpRedirectAction = (LbHttpRedirectAction) o;
    return Objects.equals(this.redirectStatus, lbHttpRedirectAction.redirectStatus) &&
        Objects.equals(this.redirectUrl, lbHttpRedirectAction.redirectUrl) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(redirectStatus, redirectUrl, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LbHttpRedirectAction {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    redirectStatus: ").append(toIndentedString(redirectStatus)).append("\n");
    sb.append("    redirectUrl: ").append(toIndentedString(redirectUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
