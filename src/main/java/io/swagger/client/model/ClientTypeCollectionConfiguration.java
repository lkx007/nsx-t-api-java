/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.DataTypeCollectionConfiguration;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * HPM client data collection configuration
 */
@Schema(description = "HPM client data collection configuration")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class ClientTypeCollectionConfiguration {
  /**
   * The client type for which this data collection frequency setting applies
   */
  @JsonAdapter(ClientTypeEnum.Adapter.class)
  public enum ClientTypeEnum {
    HYPERVISOR("HYPERVISOR"),
    EDGE("EDGE"),
    CONTROL_PLANE("CONTROL_PLANE"),
    CONTROL_PLANE_PLATFORM("CONTROL_PLANE_PLATFORM"),
    MANAGEMENT_PLANE("MANAGEMENT_PLANE"),
    MANAGEMENT_PLANE_PLATFORM("MANAGEMENT_PLANE_PLATFORM");

    private String value;

    ClientTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ClientTypeEnum fromValue(String text) {
      for (ClientTypeEnum b : ClientTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ClientTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ClientTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ClientTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ClientTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("client_type")
  private ClientTypeEnum clientType = null;

  @SerializedName("data_type_configurations")
  private List<DataTypeCollectionConfiguration> dataTypeConfigurations = new ArrayList<DataTypeCollectionConfiguration>();

  public ClientTypeCollectionConfiguration clientType(ClientTypeEnum clientType) {
    this.clientType = clientType;
    return this;
  }

   /**
   * The client type for which this data collection frequency setting applies
   * @return clientType
  **/
  @Schema(required = true, description = "The client type for which this data collection frequency setting applies")
  public ClientTypeEnum getClientType() {
    return clientType;
  }

  public void setClientType(ClientTypeEnum clientType) {
    this.clientType = clientType;
  }

  public ClientTypeCollectionConfiguration dataTypeConfigurations(List<DataTypeCollectionConfiguration> dataTypeConfigurations) {
    this.dataTypeConfigurations = dataTypeConfigurations;
    return this;
  }

  public ClientTypeCollectionConfiguration addDataTypeConfigurationsItem(DataTypeCollectionConfiguration dataTypeConfigurationsItem) {
    this.dataTypeConfigurations.add(dataTypeConfigurationsItem);
    return this;
  }

   /**
   * The set of data collection type configurations, one for each data collection type
   * @return dataTypeConfigurations
  **/
  @Schema(required = true, description = "The set of data collection type configurations, one for each data collection type")
  public List<DataTypeCollectionConfiguration> getDataTypeConfigurations() {
    return dataTypeConfigurations;
  }

  public void setDataTypeConfigurations(List<DataTypeCollectionConfiguration> dataTypeConfigurations) {
    this.dataTypeConfigurations = dataTypeConfigurations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClientTypeCollectionConfiguration clientTypeCollectionConfiguration = (ClientTypeCollectionConfiguration) o;
    return Objects.equals(this.clientType, clientTypeCollectionConfiguration.clientType) &&
        Objects.equals(this.dataTypeConfigurations, clientTypeCollectionConfiguration.dataTypeConfigurations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientType, dataTypeConfigurations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClientTypeCollectionConfiguration {\n");
    
    sb.append("    clientType: ").append(toIndentedString(clientType)).append("\n");
    sb.append("    dataTypeConfigurations: ").append(toIndentedString(dataTypeConfigurations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
