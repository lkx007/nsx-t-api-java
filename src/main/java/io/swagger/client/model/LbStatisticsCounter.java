/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * LbStatisticsCounter
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class LbStatisticsCounter {
  @SerializedName("source_ip_persistence_entry_size")
  private Long sourceIpPersistenceEntrySize = null;

  @SerializedName("packets_out")
  private Long packetsOut = null;

  @SerializedName("bytes_out_rate")
  private BigDecimal bytesOutRate = null;

  @SerializedName("total_sessions")
  private Long totalSessions = null;

  @SerializedName("http_request_rate")
  private BigDecimal httpRequestRate = null;

  @SerializedName("bytes_out")
  private Long bytesOut = null;

  @SerializedName("packets_in_rate")
  private BigDecimal packetsInRate = null;

  @SerializedName("bytes_in_rate")
  private BigDecimal bytesInRate = null;

  @SerializedName("current_sessions")
  private Long currentSessions = null;

  @SerializedName("max_sessions")
  private Long maxSessions = null;

  @SerializedName("packets_out_rate")
  private BigDecimal packetsOutRate = null;

  @SerializedName("http_requests")
  private Long httpRequests = null;

  @SerializedName("bytes_in")
  private Long bytesIn = null;

  @SerializedName("current_session_rate")
  private BigDecimal currentSessionRate = null;

  @SerializedName("packets_in")
  private Long packetsIn = null;

  public LbStatisticsCounter sourceIpPersistenceEntrySize(Long sourceIpPersistenceEntrySize) {
    this.sourceIpPersistenceEntrySize = sourceIpPersistenceEntrySize;
    return this;
  }

   /**
   * Number of source IP persistence entries
   * @return sourceIpPersistenceEntrySize
  **/
  @Schema(description = "Number of source IP persistence entries")
  public Long getSourceIpPersistenceEntrySize() {
    return sourceIpPersistenceEntrySize;
  }

  public void setSourceIpPersistenceEntrySize(Long sourceIpPersistenceEntrySize) {
    this.sourceIpPersistenceEntrySize = sourceIpPersistenceEntrySize;
  }

  public LbStatisticsCounter packetsOut(Long packetsOut) {
    this.packetsOut = packetsOut;
    return this;
  }

   /**
   * Number of packets out
   * @return packetsOut
  **/
  @Schema(description = "Number of packets out")
  public Long getPacketsOut() {
    return packetsOut;
  }

  public void setPacketsOut(Long packetsOut) {
    this.packetsOut = packetsOut;
  }

  public LbStatisticsCounter bytesOutRate(BigDecimal bytesOutRate) {
    this.bytesOutRate = bytesOutRate;
    return this;
  }

   /**
   * The average number of outbound bytes per second, the number is averaged over the last 5 one-second intervals. 
   * @return bytesOutRate
  **/
  @Schema(description = "The average number of outbound bytes per second, the number is averaged over the last 5 one-second intervals. ")
  public BigDecimal getBytesOutRate() {
    return bytesOutRate;
  }

  public void setBytesOutRate(BigDecimal bytesOutRate) {
    this.bytesOutRate = bytesOutRate;
  }

  public LbStatisticsCounter totalSessions(Long totalSessions) {
    this.totalSessions = totalSessions;
    return this;
  }

   /**
   * Number of total sessions
   * @return totalSessions
  **/
  @Schema(required = true, description = "Number of total sessions")
  public Long getTotalSessions() {
    return totalSessions;
  }

  public void setTotalSessions(Long totalSessions) {
    this.totalSessions = totalSessions;
  }

  public LbStatisticsCounter httpRequestRate(BigDecimal httpRequestRate) {
    this.httpRequestRate = httpRequestRate;
    return this;
  }

   /**
   * The average number of http requests per second, the number is averaged over the last 5 one-second intervals. 
   * @return httpRequestRate
  **/
  @Schema(description = "The average number of http requests per second, the number is averaged over the last 5 one-second intervals. ")
  public BigDecimal getHttpRequestRate() {
    return httpRequestRate;
  }

  public void setHttpRequestRate(BigDecimal httpRequestRate) {
    this.httpRequestRate = httpRequestRate;
  }

  public LbStatisticsCounter bytesOut(Long bytesOut) {
    this.bytesOut = bytesOut;
    return this;
  }

   /**
   * Number of bytes out
   * @return bytesOut
  **/
  @Schema(required = true, description = "Number of bytes out")
  public Long getBytesOut() {
    return bytesOut;
  }

  public void setBytesOut(Long bytesOut) {
    this.bytesOut = bytesOut;
  }

  public LbStatisticsCounter packetsInRate(BigDecimal packetsInRate) {
    this.packetsInRate = packetsInRate;
    return this;
  }

   /**
   * The average number of inbound packets per second, the number is averaged over the last 5 one-second intervals. 
   * @return packetsInRate
  **/
  @Schema(description = "The average number of inbound packets per second, the number is averaged over the last 5 one-second intervals. ")
  public BigDecimal getPacketsInRate() {
    return packetsInRate;
  }

  public void setPacketsInRate(BigDecimal packetsInRate) {
    this.packetsInRate = packetsInRate;
  }

  public LbStatisticsCounter bytesInRate(BigDecimal bytesInRate) {
    this.bytesInRate = bytesInRate;
    return this;
  }

   /**
   * The average number of inbound bytes per second, the number is averaged over the last 5 one-second intervals. 
   * @return bytesInRate
  **/
  @Schema(description = "The average number of inbound bytes per second, the number is averaged over the last 5 one-second intervals. ")
  public BigDecimal getBytesInRate() {
    return bytesInRate;
  }

  public void setBytesInRate(BigDecimal bytesInRate) {
    this.bytesInRate = bytesInRate;
  }

  public LbStatisticsCounter currentSessions(Long currentSessions) {
    this.currentSessions = currentSessions;
    return this;
  }

   /**
   * Number of current sessions
   * @return currentSessions
  **/
  @Schema(required = true, description = "Number of current sessions")
  public Long getCurrentSessions() {
    return currentSessions;
  }

  public void setCurrentSessions(Long currentSessions) {
    this.currentSessions = currentSessions;
  }

  public LbStatisticsCounter maxSessions(Long maxSessions) {
    this.maxSessions = maxSessions;
    return this;
  }

   /**
   * Number of maximum sessions
   * @return maxSessions
  **/
  @Schema(required = true, description = "Number of maximum sessions")
  public Long getMaxSessions() {
    return maxSessions;
  }

  public void setMaxSessions(Long maxSessions) {
    this.maxSessions = maxSessions;
  }

  public LbStatisticsCounter packetsOutRate(BigDecimal packetsOutRate) {
    this.packetsOutRate = packetsOutRate;
    return this;
  }

   /**
   * The average number of outbound packets per second, the number is averaged over the last 5 one-second intervals. 
   * @return packetsOutRate
  **/
  @Schema(description = "The average number of outbound packets per second, the number is averaged over the last 5 one-second intervals. ")
  public BigDecimal getPacketsOutRate() {
    return packetsOutRate;
  }

  public void setPacketsOutRate(BigDecimal packetsOutRate) {
    this.packetsOutRate = packetsOutRate;
  }

  public LbStatisticsCounter httpRequests(Long httpRequests) {
    this.httpRequests = httpRequests;
    return this;
  }

   /**
   * The total number of http requests.
   * @return httpRequests
  **/
  @Schema(description = "The total number of http requests.")
  public Long getHttpRequests() {
    return httpRequests;
  }

  public void setHttpRequests(Long httpRequests) {
    this.httpRequests = httpRequests;
  }

  public LbStatisticsCounter bytesIn(Long bytesIn) {
    this.bytesIn = bytesIn;
    return this;
  }

   /**
   * Number of bytes in
   * @return bytesIn
  **/
  @Schema(required = true, description = "Number of bytes in")
  public Long getBytesIn() {
    return bytesIn;
  }

  public void setBytesIn(Long bytesIn) {
    this.bytesIn = bytesIn;
  }

  public LbStatisticsCounter currentSessionRate(BigDecimal currentSessionRate) {
    this.currentSessionRate = currentSessionRate;
    return this;
  }

   /**
   * The average number of current sessions per second, the number is averaged over the last 5 one-second intervals. 
   * @return currentSessionRate
  **/
  @Schema(description = "The average number of current sessions per second, the number is averaged over the last 5 one-second intervals. ")
  public BigDecimal getCurrentSessionRate() {
    return currentSessionRate;
  }

  public void setCurrentSessionRate(BigDecimal currentSessionRate) {
    this.currentSessionRate = currentSessionRate;
  }

  public LbStatisticsCounter packetsIn(Long packetsIn) {
    this.packetsIn = packetsIn;
    return this;
  }

   /**
   * Number of packets in
   * @return packetsIn
  **/
  @Schema(description = "Number of packets in")
  public Long getPacketsIn() {
    return packetsIn;
  }

  public void setPacketsIn(Long packetsIn) {
    this.packetsIn = packetsIn;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LbStatisticsCounter lbStatisticsCounter = (LbStatisticsCounter) o;
    return Objects.equals(this.sourceIpPersistenceEntrySize, lbStatisticsCounter.sourceIpPersistenceEntrySize) &&
        Objects.equals(this.packetsOut, lbStatisticsCounter.packetsOut) &&
        Objects.equals(this.bytesOutRate, lbStatisticsCounter.bytesOutRate) &&
        Objects.equals(this.totalSessions, lbStatisticsCounter.totalSessions) &&
        Objects.equals(this.httpRequestRate, lbStatisticsCounter.httpRequestRate) &&
        Objects.equals(this.bytesOut, lbStatisticsCounter.bytesOut) &&
        Objects.equals(this.packetsInRate, lbStatisticsCounter.packetsInRate) &&
        Objects.equals(this.bytesInRate, lbStatisticsCounter.bytesInRate) &&
        Objects.equals(this.currentSessions, lbStatisticsCounter.currentSessions) &&
        Objects.equals(this.maxSessions, lbStatisticsCounter.maxSessions) &&
        Objects.equals(this.packetsOutRate, lbStatisticsCounter.packetsOutRate) &&
        Objects.equals(this.httpRequests, lbStatisticsCounter.httpRequests) &&
        Objects.equals(this.bytesIn, lbStatisticsCounter.bytesIn) &&
        Objects.equals(this.currentSessionRate, lbStatisticsCounter.currentSessionRate) &&
        Objects.equals(this.packetsIn, lbStatisticsCounter.packetsIn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceIpPersistenceEntrySize, packetsOut, bytesOutRate, totalSessions, httpRequestRate, bytesOut, packetsInRate, bytesInRate, currentSessions, maxSessions, packetsOutRate, httpRequests, bytesIn, currentSessionRate, packetsIn);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LbStatisticsCounter {\n");
    
    sb.append("    sourceIpPersistenceEntrySize: ").append(toIndentedString(sourceIpPersistenceEntrySize)).append("\n");
    sb.append("    packetsOut: ").append(toIndentedString(packetsOut)).append("\n");
    sb.append("    bytesOutRate: ").append(toIndentedString(bytesOutRate)).append("\n");
    sb.append("    totalSessions: ").append(toIndentedString(totalSessions)).append("\n");
    sb.append("    httpRequestRate: ").append(toIndentedString(httpRequestRate)).append("\n");
    sb.append("    bytesOut: ").append(toIndentedString(bytesOut)).append("\n");
    sb.append("    packetsInRate: ").append(toIndentedString(packetsInRate)).append("\n");
    sb.append("    bytesInRate: ").append(toIndentedString(bytesInRate)).append("\n");
    sb.append("    currentSessions: ").append(toIndentedString(currentSessions)).append("\n");
    sb.append("    maxSessions: ").append(toIndentedString(maxSessions)).append("\n");
    sb.append("    packetsOutRate: ").append(toIndentedString(packetsOutRate)).append("\n");
    sb.append("    httpRequests: ").append(toIndentedString(httpRequests)).append("\n");
    sb.append("    bytesIn: ").append(toIndentedString(bytesIn)).append("\n");
    sb.append("    currentSessionRate: ").append(toIndentedString(currentSessionRate)).append("\n");
    sb.append("    packetsIn: ").append(toIndentedString(packetsIn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
