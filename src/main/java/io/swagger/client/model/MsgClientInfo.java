/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Information about a messaging client
 */
@Schema(description = "Information about a messaging client")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class MsgClientInfo {
  @SerializedName("software_version")
  private String softwareVersion = null;

  @SerializedName("account_name")
  private String accountName = null;

  @SerializedName("certificate")
  private String certificate = null;

  @SerializedName("shared_secret")
  private String sharedSecret = null;

   /**
   * Software version of the node.
   * @return softwareVersion
  **/
  @Schema(description = "Software version of the node.")
  public String getSoftwareVersion() {
    return softwareVersion;
  }

  public MsgClientInfo accountName(String accountName) {
    this.accountName = accountName;
    return this;
  }

   /**
   * Account name for the messaging client. Identifies the client on the management plane message bus.
   * @return accountName
  **/
  @Schema(description = "Account name for the messaging client. Identifies the client on the management plane message bus.")
  public String getAccountName() {
    return accountName;
  }

  public void setAccountName(String accountName) {
    this.accountName = accountName;
  }

  public MsgClientInfo certificate(String certificate) {
    this.certificate = certificate;
    return this;
  }

   /**
   * Messaging client&#x27;s certificate. Used to authenticate to the control plane messaging endpoint.
   * @return certificate
  **/
  @Schema(description = "Messaging client's certificate. Used to authenticate to the control plane messaging endpoint.")
  public String getCertificate() {
    return certificate;
  }

  public void setCertificate(String certificate) {
    this.certificate = certificate;
  }

  public MsgClientInfo sharedSecret(String sharedSecret) {
    this.sharedSecret = sharedSecret;
    return this;
  }

   /**
   * Messaging client&#x27;s secret. Used to authenticate to the management plane messaging broker.
   * @return sharedSecret
  **/
  @Schema(description = "Messaging client's secret. Used to authenticate to the management plane messaging broker.")
  public String getSharedSecret() {
    return sharedSecret;
  }

  public void setSharedSecret(String sharedSecret) {
    this.sharedSecret = sharedSecret;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MsgClientInfo msgClientInfo = (MsgClientInfo) o;
    return Objects.equals(this.softwareVersion, msgClientInfo.softwareVersion) &&
        Objects.equals(this.accountName, msgClientInfo.accountName) &&
        Objects.equals(this.certificate, msgClientInfo.certificate) &&
        Objects.equals(this.sharedSecret, msgClientInfo.sharedSecret);
  }

  @Override
  public int hashCode() {
    return Objects.hash(softwareVersion, accountName, certificate, sharedSecret);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MsgClientInfo {\n");
    
    sb.append("    softwareVersion: ").append(toIndentedString(softwareVersion)).append("\n");
    sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
    sb.append("    certificate: ").append(toIndentedString(certificate)).append("\n");
    sb.append("    sharedSecret: ").append(toIndentedString(sharedSecret)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
