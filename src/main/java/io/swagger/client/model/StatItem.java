/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Tooltip;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Displayed as a single number. It can be used to show the characteristics of entities such as Logical Switches, Firewall Rules, and so on. For example, number of logical switches and their admin states.
 */
@Schema(description = "Displayed as a single number. It can be used to show the characteristics of entities such as Logical Switches, Firewall Rules, and so on. For example, number of logical switches and their admin states.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class StatItem {
  @SerializedName("drilldown_id")
  private String drilldownId = null;

  @SerializedName("total")
  private String total = null;

  @SerializedName("tooltip")
  private List<Tooltip> tooltip = null;

  @SerializedName("value")
  private String value = null;

  public StatItem drilldownId(String drilldownId) {
    this.drilldownId = drilldownId;
    return this;
  }

   /**
   * Id of drilldown widget, if any. Id should be a valid id of an existing widget.
   * @return drilldownId
  **/
  @Schema(description = "Id of drilldown widget, if any. Id should be a valid id of an existing widget.")
  public String getDrilldownId() {
    return drilldownId;
  }

  public void setDrilldownId(String drilldownId) {
    this.drilldownId = drilldownId;
  }

  public StatItem total(String total) {
    this.total = total;
    return this;
  }

   /**
   * If expression for total is specified, it evaluates it. Total can be omitted if not needed to be shown.
   * @return total
  **/
  @Schema(description = "If expression for total is specified, it evaluates it. Total can be omitted if not needed to be shown.")
  public String getTotal() {
    return total;
  }

  public void setTotal(String total) {
    this.total = total;
  }

  public StatItem tooltip(List<Tooltip> tooltip) {
    this.tooltip = tooltip;
    return this;
  }

  public StatItem addTooltipItem(Tooltip tooltipItem) {
    if (this.tooltip == null) {
      this.tooltip = new ArrayList<Tooltip>();
    }
    this.tooltip.add(tooltipItem);
    return this;
  }

   /**
   * Multi-line text to be shown on tooltip while hovering over the stat.
   * @return tooltip
  **/
  @Schema(description = "Multi-line text to be shown on tooltip while hovering over the stat.")
  public List<Tooltip> getTooltip() {
    return tooltip;
  }

  public void setTooltip(List<Tooltip> tooltip) {
    this.tooltip = tooltip;
  }

  public StatItem value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Expression for stat to be displayed.
   * @return value
  **/
  @Schema(required = true, description = "Expression for stat to be displayed.")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatItem statItem = (StatItem) o;
    return Objects.equals(this.drilldownId, statItem.drilldownId) &&
        Objects.equals(this.total, statItem.total) &&
        Objects.equals(this.tooltip, statItem.tooltip) &&
        Objects.equals(this.value, statItem.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(drilldownId, total, tooltip, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatItem {\n");
    
    sb.append("    drilldownId: ").append(toIndentedString(drilldownId)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    tooltip: ").append(toIndentedString(tooltip)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
