/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Realization state of attaching or detaching Transport node profile on compute collection.
 */
@Schema(description = "Realization state of attaching or detaching Transport node profile on compute collection.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class TransportNodeCollectionState {
  /**
   * If the host preparation or transport node creation is going on for any host then state will be \&quot;IN_PROGRESS\&quot;.  If setting desired state of the transport node failed for any of the host then state will be \&quot;FAILED_TO_CREATE\&quot;  If realization of transport node failed for any of the host then state will be \&quot;FAILED_TO_REALIZE\&quot;  If Transport node is successfully created for all of the hosts in compute collection then state will be \&quot;SUCCESS\&quot;  You can override the configuration for one or more hosts in the compute collection by update TN(transport node) request on individual TN. If TN is successfully created for all hosts in compute collection and one or more hosts have overridden configuration then transport node collection state will be \&quot;PROFILE_MISMATCH\&quot;. 
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    FAILED_TO_CREATE("FAILED_TO_CREATE"),
    FAILED_TO_REALIZE("FAILED_TO_REALIZE"),
    IN_PROGRESS("IN_PROGRESS"),
    PROFILE_MISMATCH("PROFILE_MISMATCH"),
    SUCCESS("SUCCESS");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StateEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("state")
  private StateEnum state = null;

  @SerializedName("aggregate_progress_percentage")
  private Long aggregateProgressPercentage = null;

   /**
   * If the host preparation or transport node creation is going on for any host then state will be \&quot;IN_PROGRESS\&quot;.  If setting desired state of the transport node failed for any of the host then state will be \&quot;FAILED_TO_CREATE\&quot;  If realization of transport node failed for any of the host then state will be \&quot;FAILED_TO_REALIZE\&quot;  If Transport node is successfully created for all of the hosts in compute collection then state will be \&quot;SUCCESS\&quot;  You can override the configuration for one or more hosts in the compute collection by update TN(transport node) request on individual TN. If TN is successfully created for all hosts in compute collection and one or more hosts have overridden configuration then transport node collection state will be \&quot;PROFILE_MISMATCH\&quot;. 
   * @return state
  **/
  @Schema(description = "If the host preparation or transport node creation is going on for any host then state will be \"IN_PROGRESS\".  If setting desired state of the transport node failed for any of the host then state will be \"FAILED_TO_CREATE\"  If realization of transport node failed for any of the host then state will be \"FAILED_TO_REALIZE\"  If Transport node is successfully created for all of the hosts in compute collection then state will be \"SUCCESS\"  You can override the configuration for one or more hosts in the compute collection by update TN(transport node) request on individual TN. If TN is successfully created for all hosts in compute collection and one or more hosts have overridden configuration then transport node collection state will be \"PROFILE_MISMATCH\". ")
  public StateEnum getState() {
    return state;
  }

   /**
   * Average of all transport node deployment progress in a cluster. Applicable only if transport node profile is applied on a cluster.
   * @return aggregateProgressPercentage
  **/
  @Schema(description = "Average of all transport node deployment progress in a cluster. Applicable only if transport node profile is applied on a cluster.")
  public Long getAggregateProgressPercentage() {
    return aggregateProgressPercentage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransportNodeCollectionState transportNodeCollectionState = (TransportNodeCollectionState) o;
    return Objects.equals(this.state, transportNodeCollectionState.state) &&
        Objects.equals(this.aggregateProgressPercentage, transportNodeCollectionState.aggregateProgressPercentage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(state, aggregateProgressPercentage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransportNodeCollectionState {\n");
    
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    aggregateProgressPercentage: ").append(toIndentedString(aggregateProgressPercentage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
