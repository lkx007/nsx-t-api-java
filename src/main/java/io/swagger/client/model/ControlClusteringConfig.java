/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ClusteringConfig;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Config for joining cluster nodes VMs to a control cluster 
 */
@Schema(description = "Config for joining cluster nodes VMs to a control cluster ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class ControlClusteringConfig extends ClusteringConfig {
  @SerializedName("join_to_existing_cluster")
  private Boolean joinToExistingCluster = null;

  @SerializedName("shared_secret")
  private String sharedSecret = null;

  public ControlClusteringConfig joinToExistingCluster(Boolean joinToExistingCluster) {
    this.joinToExistingCluster = joinToExistingCluster;
    return this;
  }

   /**
   * Specifies whether or not the cluster node VM should try to join to the existing control cluster or initialize a new one. Only required in uncertainty case, i.e. when there are manually- deployed controllers that are registered but not connected to the cluster and no auto-deployed controllers are part of the cluster. 
   * @return joinToExistingCluster
  **/
  @Schema(description = "Specifies whether or not the cluster node VM should try to join to the existing control cluster or initialize a new one. Only required in uncertainty case, i.e. when there are manually- deployed controllers that are registered but not connected to the cluster and no auto-deployed controllers are part of the cluster. ")
  public Boolean isJoinToExistingCluster() {
    return joinToExistingCluster;
  }

  public void setJoinToExistingCluster(Boolean joinToExistingCluster) {
    this.joinToExistingCluster = joinToExistingCluster;
  }

  public ControlClusteringConfig sharedSecret(String sharedSecret) {
    this.sharedSecret = sharedSecret;
    return this;
  }

   /**
   * Shared secret to be used when joining the cluster node VM to a control cluster or for initializing a new cluster with the VM. Must contain at least 4 unique characters and be at least 6 characters long. 
   * @return sharedSecret
  **/
  @Schema(description = "Shared secret to be used when joining the cluster node VM to a control cluster or for initializing a new cluster with the VM. Must contain at least 4 unique characters and be at least 6 characters long. ")
  public String getSharedSecret() {
    return sharedSecret;
  }

  public void setSharedSecret(String sharedSecret) {
    this.sharedSecret = sharedSecret;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ControlClusteringConfig controlClusteringConfig = (ControlClusteringConfig) o;
    return Objects.equals(this.joinToExistingCluster, controlClusteringConfig.joinToExistingCluster) &&
        Objects.equals(this.sharedSecret, controlClusteringConfig.sharedSecret) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(joinToExistingCluster, sharedSecret, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ControlClusteringConfig {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    joinToExistingCluster: ").append(toIndentedString(joinToExistingCluster)).append("\n");
    sb.append("    sharedSecret: ").append(toIndentedString(sharedSecret)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
