/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Clustering parameters for the controller cluster
 */
@Schema(description = "Clustering parameters for the controller cluster")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class ClusteringInfo {
  @SerializedName("shared_secret")
  private String sharedSecret = null;

  @SerializedName("join_to_existing_cluster")
  private Boolean joinToExistingCluster = null;

  public ClusteringInfo sharedSecret(String sharedSecret) {
    this.sharedSecret = sharedSecret;
    return this;
  }

   /**
   * Shared secret of the cluster.
   * @return sharedSecret
  **/
  @Schema(description = "Shared secret of the cluster.")
  public String getSharedSecret() {
    return sharedSecret;
  }

  public void setSharedSecret(String sharedSecret) {
    this.sharedSecret = sharedSecret;
  }

  public ClusteringInfo joinToExistingCluster(Boolean joinToExistingCluster) {
    this.joinToExistingCluster = joinToExistingCluster;
    return this;
  }

   /**
   * Property to indicate if the node must join an existing cluster.
   * @return joinToExistingCluster
  **/
  @Schema(required = true, description = "Property to indicate if the node must join an existing cluster.")
  public Boolean isJoinToExistingCluster() {
    return joinToExistingCluster;
  }

  public void setJoinToExistingCluster(Boolean joinToExistingCluster) {
    this.joinToExistingCluster = joinToExistingCluster;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClusteringInfo clusteringInfo = (ClusteringInfo) o;
    return Objects.equals(this.sharedSecret, clusteringInfo.sharedSecret) &&
        Objects.equals(this.joinToExistingCluster, clusteringInfo.joinToExistingCluster);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sharedSecret, joinToExistingCluster);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusteringInfo {\n");
    
    sb.append("    sharedSecret: ").append(toIndentedString(sharedSecret)).append("\n");
    sb.append("    joinToExistingCluster: ").append(toIndentedString(joinToExistingCluster)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
