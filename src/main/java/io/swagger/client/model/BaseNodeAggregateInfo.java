/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ClusterNodeStatus;
import io.swagger.client.model.NodeInterfaceProperties;
import io.swagger.client.model.NodeInterfaceStatisticsProperties;
import io.swagger.client.model.NodeStatusProperties;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * BaseNodeAggregateInfo
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class BaseNodeAggregateInfo {
  @SerializedName("node_interface_properties")
  private List<NodeInterfaceProperties> nodeInterfaceProperties = null;

  @SerializedName("node_status")
  private ClusterNodeStatus nodeStatus = null;

  @SerializedName("node_interface_statistics")
  private List<NodeInterfaceStatisticsProperties> nodeInterfaceStatistics = null;

  @SerializedName("display_name")
  private String displayName = null;

  @SerializedName("node_status_properties")
  private List<NodeStatusProperties> nodeStatusProperties = null;

  @SerializedName("id")
  private String id = null;

   /**
   * Array of Node interface statistic properties
   * @return nodeInterfaceProperties
  **/
  @Schema(description = "Array of Node interface statistic properties")
  public List<NodeInterfaceProperties> getNodeInterfaceProperties() {
    return nodeInterfaceProperties;
  }

  public BaseNodeAggregateInfo nodeStatus(ClusterNodeStatus nodeStatus) {
    this.nodeStatus = nodeStatus;
    return this;
  }

   /**
   * Get nodeStatus
   * @return nodeStatus
  **/
  @Schema(description = "")
  public ClusterNodeStatus getNodeStatus() {
    return nodeStatus;
  }

  public void setNodeStatus(ClusterNodeStatus nodeStatus) {
    this.nodeStatus = nodeStatus;
  }

   /**
   * Array of Node network interface statistic properties
   * @return nodeInterfaceStatistics
  **/
  @Schema(description = "Array of Node network interface statistic properties")
  public List<NodeInterfaceStatisticsProperties> getNodeInterfaceStatistics() {
    return nodeInterfaceStatistics;
  }

  public BaseNodeAggregateInfo displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Defaults to ID if not set
   * @return displayName
  **/
  @Schema(description = "Defaults to ID if not set")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public BaseNodeAggregateInfo nodeStatusProperties(List<NodeStatusProperties> nodeStatusProperties) {
    this.nodeStatusProperties = nodeStatusProperties;
    return this;
  }

  public BaseNodeAggregateInfo addNodeStatusPropertiesItem(NodeStatusProperties nodeStatusPropertiesItem) {
    if (this.nodeStatusProperties == null) {
      this.nodeStatusProperties = new ArrayList<NodeStatusProperties>();
    }
    this.nodeStatusProperties.add(nodeStatusPropertiesItem);
    return this;
  }

   /**
   * Time series of the node&#x27;s system properties
   * @return nodeStatusProperties
  **/
  @Schema(description = "Time series of the node's system properties")
  public List<NodeStatusProperties> getNodeStatusProperties() {
    return nodeStatusProperties;
  }

  public void setNodeStatusProperties(List<NodeStatusProperties> nodeStatusProperties) {
    this.nodeStatusProperties = nodeStatusProperties;
  }

   /**
   * Unique identifier of this resource
   * @return id
  **/
  @Schema(description = "Unique identifier of this resource")
  public String getId() {
    return id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseNodeAggregateInfo baseNodeAggregateInfo = (BaseNodeAggregateInfo) o;
    return Objects.equals(this.nodeInterfaceProperties, baseNodeAggregateInfo.nodeInterfaceProperties) &&
        Objects.equals(this.nodeStatus, baseNodeAggregateInfo.nodeStatus) &&
        Objects.equals(this.nodeInterfaceStatistics, baseNodeAggregateInfo.nodeInterfaceStatistics) &&
        Objects.equals(this.displayName, baseNodeAggregateInfo.displayName) &&
        Objects.equals(this.nodeStatusProperties, baseNodeAggregateInfo.nodeStatusProperties) &&
        Objects.equals(this.id, baseNodeAggregateInfo.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nodeInterfaceProperties, nodeStatus, nodeInterfaceStatistics, displayName, nodeStatusProperties, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseNodeAggregateInfo {\n");
    
    sb.append("    nodeInterfaceProperties: ").append(toIndentedString(nodeInterfaceProperties)).append("\n");
    sb.append("    nodeStatus: ").append(toIndentedString(nodeStatus)).append("\n");
    sb.append("    nodeInterfaceStatistics: ").append(toIndentedString(nodeInterfaceStatistics)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    nodeStatusProperties: ").append(toIndentedString(nodeStatusProperties)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
