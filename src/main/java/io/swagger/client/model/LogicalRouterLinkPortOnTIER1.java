/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.IPSubnet;
import io.swagger.client.model.LogicalRouterPort;
import io.swagger.client.model.ResourceReference;
import io.swagger.client.model.ServiceBinding;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * This port can be configured only on a TIER1 LogicalRouter. Use the id of the LogicalRouterLinkPortOnTIER0 from TIER0 logical router to set the linked_logical_router_port_id on the port on TIER1 logical router. 
 */
@Schema(description = "This port can be configured only on a TIER1 LogicalRouter. Use the id of the LogicalRouterLinkPortOnTIER0 from TIER0 logical router to set the linked_logical_router_port_id on the port on TIER1 logical router. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class LogicalRouterLinkPortOnTIER1 extends LogicalRouterPort {
  @SerializedName("subnets")
  private List<IPSubnet> subnets = null;

  @SerializedName("mac_address")
  private String macAddress = null;

  @SerializedName("linked_logical_router_port_id")
  private ResourceReference linkedLogicalRouterPortId = null;

  @SerializedName("edge_cluster_member_index")
  private List<Long> edgeClusterMemberIndex = null;

   /**
   * Logical router port subnets
   * @return subnets
  **/
  @Schema(description = "Logical router port subnets")
  public List<IPSubnet> getSubnets() {
    return subnets;
  }

   /**
   * MAC address
   * @return macAddress
  **/
  @Schema(description = "MAC address")
  public String getMacAddress() {
    return macAddress;
  }

  public LogicalRouterLinkPortOnTIER1 linkedLogicalRouterPortId(ResourceReference linkedLogicalRouterPortId) {
    this.linkedLogicalRouterPortId = linkedLogicalRouterPortId;
    return this;
  }

   /**
   * Get linkedLogicalRouterPortId
   * @return linkedLogicalRouterPortId
  **/
  @Schema(description = "")
  public ResourceReference getLinkedLogicalRouterPortId() {
    return linkedLogicalRouterPortId;
  }

  public void setLinkedLogicalRouterPortId(ResourceReference linkedLogicalRouterPortId) {
    this.linkedLogicalRouterPortId = linkedLogicalRouterPortId;
  }

  public LogicalRouterLinkPortOnTIER1 edgeClusterMemberIndex(List<Long> edgeClusterMemberIndex) {
    this.edgeClusterMemberIndex = edgeClusterMemberIndex;
    return this;
  }

  public LogicalRouterLinkPortOnTIER1 addEdgeClusterMemberIndexItem(Long edgeClusterMemberIndexItem) {
    if (this.edgeClusterMemberIndex == null) {
      this.edgeClusterMemberIndex = new ArrayList<Long>();
    }
    this.edgeClusterMemberIndex.add(edgeClusterMemberIndexItem);
    return this;
  }

   /**
   * Please use logical router API to pass edge cluster members indexes manually. 
   * @return edgeClusterMemberIndex
  **/
  @Schema(description = "Please use logical router API to pass edge cluster members indexes manually. ")
  public List<Long> getEdgeClusterMemberIndex() {
    return edgeClusterMemberIndex;
  }

  public void setEdgeClusterMemberIndex(List<Long> edgeClusterMemberIndex) {
    this.edgeClusterMemberIndex = edgeClusterMemberIndex;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LogicalRouterLinkPortOnTIER1 logicalRouterLinkPortOnTIER1 = (LogicalRouterLinkPortOnTIER1) o;
    return Objects.equals(this.subnets, logicalRouterLinkPortOnTIER1.subnets) &&
        Objects.equals(this.macAddress, logicalRouterLinkPortOnTIER1.macAddress) &&
        Objects.equals(this.linkedLogicalRouterPortId, logicalRouterLinkPortOnTIER1.linkedLogicalRouterPortId) &&
        Objects.equals(this.edgeClusterMemberIndex, logicalRouterLinkPortOnTIER1.edgeClusterMemberIndex) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subnets, macAddress, linkedLogicalRouterPortId, edgeClusterMemberIndex, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LogicalRouterLinkPortOnTIER1 {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    subnets: ").append(toIndentedString(subnets)).append("\n");
    sb.append("    macAddress: ").append(toIndentedString(macAddress)).append("\n");
    sb.append("    linkedLogicalRouterPortId: ").append(toIndentedString(linkedLogicalRouterPortId)).append("\n");
    sb.append("    edgeClusterMemberIndex: ").append(toIndentedString(edgeClusterMemberIndex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
