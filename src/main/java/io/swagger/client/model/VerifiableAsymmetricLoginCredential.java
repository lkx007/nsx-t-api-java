/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.LoginCredential;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * VerifiableAsymmetricLoginCredential
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class VerifiableAsymmetricLoginCredential extends LoginCredential {
  @SerializedName("asymmetric_credential")
  private String asymmetricCredential = null;

  @SerializedName("credential_verifier")
  private String credentialVerifier = null;

  @SerializedName("credential_key")
  private String credentialKey = null;

  public VerifiableAsymmetricLoginCredential asymmetricCredential(String asymmetricCredential) {
    this.asymmetricCredential = asymmetricCredential;
    return this;
  }

   /**
   * Asymmetric login credential
   * @return asymmetricCredential
  **/
  @Schema(description = "Asymmetric login credential")
  public String getAsymmetricCredential() {
    return asymmetricCredential;
  }

  public void setAsymmetricCredential(String asymmetricCredential) {
    this.asymmetricCredential = asymmetricCredential;
  }

  public VerifiableAsymmetricLoginCredential credentialVerifier(String credentialVerifier) {
    this.credentialVerifier = credentialVerifier;
    return this;
  }

   /**
   * Credential verifier
   * @return credentialVerifier
  **/
  @Schema(description = "Credential verifier")
  public String getCredentialVerifier() {
    return credentialVerifier;
  }

  public void setCredentialVerifier(String credentialVerifier) {
    this.credentialVerifier = credentialVerifier;
  }

  public VerifiableAsymmetricLoginCredential credentialKey(String credentialKey) {
    this.credentialKey = credentialKey;
    return this;
  }

   /**
   * Credential key
   * @return credentialKey
  **/
  @Schema(description = "Credential key")
  public String getCredentialKey() {
    return credentialKey;
  }

  public void setCredentialKey(String credentialKey) {
    this.credentialKey = credentialKey;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VerifiableAsymmetricLoginCredential verifiableAsymmetricLoginCredential = (VerifiableAsymmetricLoginCredential) o;
    return Objects.equals(this.asymmetricCredential, verifiableAsymmetricLoginCredential.asymmetricCredential) &&
        Objects.equals(this.credentialVerifier, verifiableAsymmetricLoginCredential.credentialVerifier) &&
        Objects.equals(this.credentialKey, verifiableAsymmetricLoginCredential.credentialKey) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(asymmetricCredential, credentialVerifier, credentialKey, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VerifiableAsymmetricLoginCredential {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    asymmetricCredential: ").append(toIndentedString(asymmetricCredential)).append("\n");
    sb.append("    credentialVerifier: ").append(toIndentedString(credentialVerifier)).append("\n");
    sb.append("    credentialKey: ").append(toIndentedString(credentialKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
