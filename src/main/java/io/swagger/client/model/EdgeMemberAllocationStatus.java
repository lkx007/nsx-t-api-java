/*
 * NSX-T Manager API
 * VMware NSX-T Manager REST API
 *
 * OpenAPI spec version: 2.5.1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AllocatedService;
import io.swagger.client.model.AllocationPool;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * EdgeMemberAllocationStatus
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-19T07:44:41.574+08:00[Asia/Shanghai]")
public class EdgeMemberAllocationStatus {
  @SerializedName("allocated_services")
  private List<AllocatedService> allocatedServices = null;

  @SerializedName("node_display_name")
  private String nodeDisplayName = null;

  @SerializedName("member_index")
  private Integer memberIndex = null;

  @SerializedName("allocation_pools")
  private List<AllocationPool> allocationPools = null;

  @SerializedName("node_id")
  private String nodeId = null;

   /**
   * List of services allocated on the edge node.
   * @return allocatedServices
  **/
  @Schema(description = "List of services allocated on the edge node.")
  public List<AllocatedService> getAllocatedServices() {
    return allocatedServices;
  }

   /**
   * Display name of edge cluster member. Defaults to ID if not set. 
   * @return nodeDisplayName
  **/
  @Schema(description = "Display name of edge cluster member. Defaults to ID if not set. ")
  public String getNodeDisplayName() {
    return nodeDisplayName;
  }

   /**
   * System generated index for transport node backed by edge node. 
   * @return memberIndex
  **/
  @Schema(description = "System generated index for transport node backed by edge node. ")
  public Integer getMemberIndex() {
    return memberIndex;
  }

   /**
   * Allocation details of pools defined on the edge node.
   * @return allocationPools
  **/
  @Schema(description = "Allocation details of pools defined on the edge node.")
  public List<AllocationPool> getAllocationPools() {
    return allocationPools;
  }

   /**
   * System allotted UUID of edge node.
   * @return nodeId
  **/
  @Schema(description = "System allotted UUID of edge node.")
  public String getNodeId() {
    return nodeId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdgeMemberAllocationStatus edgeMemberAllocationStatus = (EdgeMemberAllocationStatus) o;
    return Objects.equals(this.allocatedServices, edgeMemberAllocationStatus.allocatedServices) &&
        Objects.equals(this.nodeDisplayName, edgeMemberAllocationStatus.nodeDisplayName) &&
        Objects.equals(this.memberIndex, edgeMemberAllocationStatus.memberIndex) &&
        Objects.equals(this.allocationPools, edgeMemberAllocationStatus.allocationPools) &&
        Objects.equals(this.nodeId, edgeMemberAllocationStatus.nodeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allocatedServices, nodeDisplayName, memberIndex, allocationPools, nodeId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdgeMemberAllocationStatus {\n");
    
    sb.append("    allocatedServices: ").append(toIndentedString(allocatedServices)).append("\n");
    sb.append("    nodeDisplayName: ").append(toIndentedString(nodeDisplayName)).append("\n");
    sb.append("    memberIndex: ").append(toIndentedString(memberIndex)).append("\n");
    sb.append("    allocationPools: ").append(toIndentedString(allocationPools)).append("\n");
    sb.append("    nodeId: ").append(toIndentedString(nodeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
